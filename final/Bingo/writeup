
Writeup by r06922115 鄭皓謙 
--------程式分析---------
checksec
CANARY    : disabled
FORTIFY   : disabled
NX        : disabled
PIE       : ENABLED
RELRO     : Partial


Allnumber = int[200]
numbercheck 確保沒有重複填數字
checkBingo(random_num, arr) 返回有沒有中的布林值
read_input(&buf, read_num)
playBingo+400會告訴我總共中幾個
-------------------------

注意read_input 參數為&buf 以及read_num
實作的方式為
是一次read一個一個byte進來 如果遇到'\n'替換成'\0'
之後是read_num的判斷 有一個計數器i,如果buf[i] == '\0'表示讀入的byte為'\0'或是'\n' 這時結束
如果buf[i] != '\0' 且i < read_num ,i++

程式在讀入user number時 使用read_input(&buf, 4)
所以最後一個user number輸入可以輸入如aaaa這種字串
透過atoi出來的數字為0 所以注意不要再輸入0就不會跳出'You cannot input a duplicate number 0'
而由於後面顯示user number使用printf('%s %s %s %s')所以會leak出有關libc空間的位址


leak出來的位址為stack上的位置
所以是可以寫入並執行shellcode的位址
透過計算固定的offset就可以將shellcode放到stack上

之後透過'Winner can leave message for others:'
寫入shellcode及利用bof 跳到shellcode 執行

首先shellcode長度被限制在0x18, 24byte以內
所以我寫了兩段shellcode
第一段shellcode1用syscall拼出一個read syscall
用來接shellcode2

要注意加上ret addr以後 shellcode不能超過12

shellcode_1  = """
    shl rdx, 0x2
    add rsi, 0x8
    syscall
    jmp rsi
"""
shellcode_2 = shellcraft.sh()

這題我沒有在時限內做完 所以沒有flag


