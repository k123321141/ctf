0x000000000019b0b8 : adc al, 0x22 ; cli ; call rsp
0x00000000000fd3ea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000007ef0a : adc al, 0x41 ; pop rsp ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000019aad0 : adc al, 0x52 ; stc ; call rsp
0x000000000019b2d0 : adc al, 0x56 ; cli ; jmp rsp
0x0000000000197c88 : adc al, 0x59 ; out dx, al ; call rsp
0x0000000000197dd8 : adc al, 0x71 ; out dx, al ; jmp rsp
0x000000000019b620 : adc al, 0xc3 ; cli ; jmp rsp
0x0000000000197171 : adc al, 0xeb ; call rsp
0x0000000000198e99 : adc al, 0xf5 ; call rsp
0x00000000001992c9 : adc al, 0xf6 ; call rsp
0x0000000000197930 : adc al, 0xfe ; in eax, dx ; call rsp
0x0000000000195ee8 : adc bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x195ef2 ; call qword ptr [rdx]
0x00000000000ba324 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000086a79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c7886 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000145d61 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195bbc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b38 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bb8fa : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x00000000001a1640 : adc cl, cl ; in al, dx ; call rsp
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010c996 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000140d37 : adc eax, 0x2846d4 ; add rsp, 8 ; ret
0x00000000000ffa1e : adc eax, 0x2c76cd ; add rsp, 8 ; ret
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000886a1 : adc eax, 0x33e172 ; add rsp, 0x18 ; ret
0x000000000019b965 : adc eax, 0x77340001 ; std ; call rsp
0x000000000019a3b1 : adc edi, eax ; call rsp
0x0000000000199ab9 : adc edi, esi ; jmp rsp
0x0000000000199ab8 : adc edi, r14d ; jmp rsp
0x0000000000199b09 : adc esi, edi ; call rsp
0x000000000019b15f : add ah, ah ; cli ; jmp rsp
0x000000000019a9ff : add ah, ah ; cmp edi, ecx ; jmp rsp
0x0000000000197e6f : add ah, ah ; fldz ; call rsp
0x000000000019849f : add ah, ah ; int1 ; call rsp
0x000000000019693f : add ah, ah ; jbe 0x196930 ; jmp rsp
0x0000000000196a6f : add ah, ah ; jg 0x196a60 ; jmp rsp
0x00000000001979a7 : add ah, ah ; or dh, ch ; jmp rsp
0x000000000019b30f : add ah, ah ; push rdi ; cli ; jmp rsp
0x000000000019b467 : add ah, al ; jg 0x19b469 ; call rsp
0x000000000019aca7 : add ah, al ; mov bh, cl ; call rsp
0x000000000019674f : add ah, al ; mov bl, 0xe8 ; call rsp
0x000000000019981f : add ah, al ; mov bl, 0xf6 ; jmp rsp
0x000000000019815f : add ah, al ; mov ebp, edi ; jmp rsp
0x000000000019b3bf : add ah, al ; pop rbp ; cli ; call rsp
0x0000000000187473 : add ah, ch ; out dx, al ; call rsp
0x0000000000198eef : add ah, dh ; and ch, dh ; jmp rsp
0x0000000000196e5f : add ah, dh ; cmp edx, ebp ; jmp rsp
0x000000000019ae67 : add ah, dh ; sar cl, 1 ; call rsp
0x0000000000199c07 : add ah, dh ; sbb edi, esi ; call rsp
0x00000000001981a7 : add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001975ef : add ah, dh ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000001968ff : add ah, dl ; jae 0x1968f0 ; jmp rsp
0x00000000001985e7 : add ah, dl ; je 0x1985e0 ; jmp rsp
0x0000000000198a87 : add ah, dl ; jmp rsp
0x000000000019924f : add ah, dl ; or al, 0xf6 ; call rsp
0x000000000019b70f : add ah, dl ; salc ; cli ; call rsp
0x00000000001976e7 : add ah, dl ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000013a93a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000cc271 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f690d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000010a364 : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a3c5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000019b118 : add al, 0x29 ; cli ; jmp rsp
0x00000000000ad120 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000001987a0 : add al, 0x52 ; call rsp
0x0000000000189bec : add al, 0x66 ; cmc ; jmp rsp
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000000f6ab7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c7983 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000196da1 : add al, 0xea ; jmp rsp
0x00000000001981d5 : add al, 1 ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000001a7c3f : add al, al ; jrcxz 0x1a7c36 ; call rsp
0x000000000019b2cd : add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b415 : add al, byte ptr [r8] ; and al, 0x66 ; cli ; call rsp
0x000000000019b0b6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019aace : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b2ce : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b61e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b116 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000013a93c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000e75d3 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b416 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b15e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019a9fe : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b30e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1be : add al, byte ptr [rax] ; je 0x19b205 ; cli ; jmp rsp
0x000000000019b69e : add al, byte ptr [rax] ; je 0x19b670 ; cli ; jmp rsp
0x000000000019b036 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab5e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019af86 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x000000000019aaf6 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b3fe : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae26 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b29e : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019ac8e : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019ad96 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019af9e : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x00000000001ae749 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x000000000019815d : add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x000000000019b115 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000001a990f : add al, dh ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a4d41 : add bh, ch ; jmp rsp
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00000000001977cf : add byte ptr [rax + rcx*8 - 0x13], ah ; jmp rsp
0x00000000001978b7 : add byte ptr [rax + rsi*8 - 0x13], dl ; call rsp
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x000000000011642f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000012ca83 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000019b4ef : add byte ptr [rax - 6], ah ; call rsp
0x0000000000197c86 : add byte ptr [rax], al ; adc al, 0x59 ; out dx, al ; call rsp
0x0000000000197dd6 : add byte ptr [rax], al ; adc al, 0x71 ; out dx, al ; jmp rsp
0x000000000019792e : add byte ptr [rax], al ; adc al, 0xfe ; in eax, dx ; call rsp
0x00000000001a163e : add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x0000000000187471 : add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000001ae747 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000fe3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017f3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000187470 : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001169ce : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f5f17 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000012eb15 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001442fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013aee1 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f59 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f7dd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017f3ce : add byte ptr [rax], al ; call rsp
0x000000000019e556 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0x17], bh ; jmp rsp
0x0000000000196e5e : add byte ptr [rax], al ; hlt ; cmp edx, ebp ; jmp rsp
0x00000000001975ee : add byte ptr [rax], al ; hlt ; xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000197e6e : add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x00000000001979a6 : add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x0000000000187472 : add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x0000000000197db6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x000000000012cb41 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf28 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000001a6ba2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fa2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa9 ; jmp qword ptr [rbx]
0x000000000019749e : add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x00000000001a4d3e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010cf7b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00000000000fde0d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000014105a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000143656 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x000000000013a93e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000197266 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x0000000000197d66 : add byte ptr [rax], al ; out dx, al ; call rsp
0x00000000001a163a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000001a3c52 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x00000000001b9552 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a0b52 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b64
0x00000000001b1152 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a8652 : add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76ba
0x000000000019d552 : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019e552 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54d ; jmp rsp
0x00000000001aef52 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000011598e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000019716e : add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x00000000001b074a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001af40f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8af : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb54a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a244a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x00000000001a2c4a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c58 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001a754a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001b294a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b4a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b51 ; jmp qword ptr [rcx]
0x0000000000197626 : add byte ptr [rax], al ; push rsp ; pushfq ; in eax, dx ; call rsp
0x00000000001a8c4a : add byte ptr [rax], al ; push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a7c3a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x00000000001a7c3e : add byte ptr [rax], al ; shl bl, 0xef ; call rsp
0x0000000000197476 : add byte ptr [rax], al ; test byte ptr [rbp - 0x13], cl ; jmp rsp
0x0000000000197f6e : add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x0000000000197cae : add byte ptr [rax], al ; test byte ptr [rsi - 0x12], bl ; jmp rsp
0x00000000001a4d3a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000019680e : add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x0000000000196b56 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x196b49 ; call rsp
0x000000000011eaa6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143dc6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000019800e : add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x000000000019e557 : add byte ptr [rax], bh ; jge 0x19e548 ; jmp rsp
0x00000000001bb8e7 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001a6ba7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001a163f : add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x0000000000143dc5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000143767 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000014362c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000112ced : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001436f4 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000019917f : add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x0000000000198bd7 : add byte ptr [rbp + rbp*2 - 0xd], dl ; call rsp
0x0000000000199447 : add byte ptr [rbp + rbx*2 - 0xa], dh ; call rsp
0x000000000019a28f : add byte ptr [rbp + rdi*8 - 9], al ; jmp rsp
0x0000000000199eef : add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x00000000001968d7 : add byte ptr [rbp - 0x17], al ; jmp rsp
0x000000000019ab5f : add byte ptr [rbp - 7], ah ; call rsp
0x000000000019a647 : add byte ptr [rbp - 8], dl ; jmp rsp
0x00000000000cd418 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000019873f : add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x000000000019b61f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x000000000019af9f : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001974df : add byte ptr [rbx + rbp*2 - 0x13], al ; jmp rsp
0x00000000001a163b : add byte ptr [rbx + rbx*2], al ; add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x000000000019a8c7 : add byte ptr [rbx + rbx*8], ah ; clc ; call rsp
0x000000000019af87 : add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000198287 : add byte ptr [rbx + rdi*8], ah ; out dx, eax ; call rsp
0x000000000019b29f : add byte ptr [rbx + rdx*2], dh ; cli ; call rsp
0x000000000019b887 : add byte ptr [rbx + rsi*2], ah ; sti ; call rsp
0x00000000000e75d5 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000199f27 : add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f746e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000001169d0 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000019811f : add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x00000000001a7c3b : add byte ptr [rcx + rax*8], al ; add al, al ; jrcxz 0x1a7c3a ; call rsp
0x000000000019a66f : add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000019b117 : add byte ptr [rcx + rbp], al ; cli ; jmp rsp
0x000000000019b037 : add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000197c87 : add byte ptr [rcx + rbx*2], dl ; out dx, al ; call rsp
0x000000000019a88f : add byte ptr [rcx + rbx*8], dh ; clc ; call rsp
0x000000000019a5a7 : add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000000c9dd1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c9e9b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000013805d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c991 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d4d8 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000019b69f : add byte ptr [rcx + rcx*8 - 6], dh ; jmp rsp
0x0000000000199ab7 : add byte ptr [rcx + rdx - 9], al ; jmp rsp
0x0000000000198e3f : add byte ptr [rcx + rdx*4], ah ; hlt ; jmp rsp
0x0000000000197dd7 : add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019a467 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000137a88 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019ac8f : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x000000000019ba6f : add byte ptr [rdi + rbx*8], dh ; std ; call rsp
0x000000000019a33f : add byte ptr [rdi + rcx - 8], ah ; jmp rsp
0x000000000019b5ff : add byte ptr [rdi + rdi*4 - 6], al ; jmp rsp
0x000000000019b967 : add byte ptr [rdi + rsi*2], dh ; std ; call rsp
0x000000000019ad97 : add byte ptr [rdi + rsi*4], dh ; stc ; call rsp
0x000000000019996f : add byte ptr [rdi + rsi*8 - 0xa], al ; call rsp
0x000000000019865f : add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000198f97 : add byte ptr [rdx + rax*2 - 0xb], dh ; jmp rsp
0x000000000019e553 : add byte ptr [rdx + rbp], bl ; add byte ptr [rax], bh ; jge 0x19e54c ; jmp rsp
0x00000000001972df : add byte ptr [rdx + rbx*4 - 0x15], al ; jmp rsp
0x0000000000199217 : add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x000000000019879f : add byte ptr [rdx + rdx*2], al ; call rsp
0x000000000019aacf : add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000019800f : add byte ptr [rdx + rsi - 0x11], al ; call rsp
0x0000000000197cdf : add byte ptr [rdx - 0x12], ah ; call rsp
0x000000000019a9fd : add byte ptr [rdx], al ; add ah, ah ; cmp edi, ecx ; jmp rsp
0x0000000000128316 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000019b0b7 : add byte ptr [rdx], dl ; cli ; call rsp
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000019b1bf : add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x000000000019792f : add byte ptr [rsi + rdi*8], dl ; in eax, dx ; call rsp
0x000000000019b2cf : add byte ptr [rsi + rdx*2], dl ; cli ; jmp rsp
0x0000000000199617 : add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x0000000000197d67 : add byte ptr [rsi - 0x12], al ; call rsp
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019a117 : add byte ptr [rsi - 9], al ; jmp rsp
0x000000000019b417 : add byte ptr [rsi], ah ; cli ; call rsp
0x00000000001b1f5b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f19 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001abf93 : add byte ptr [rsp + rax - 0xff7ffff], bl ; call rcx
0x00000000001972b7 : add byte ptr [rsp + rax*2 - 0x15], ah ; call rsp
0x00000000001befcf : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf33 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf03 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x0000000000197db7 : add byte ptr [rsp + rbp*2 - 0x12], al ; call rsp
0x00000000001970df : add byte ptr [rsp + rbp*8 - 0x16], dh ; jmp rsp
0x00000000001aa773 : add byte ptr [rsp + rbp*8], bh ; add al, bh ; add dh, dl ; call rdi
0x00000000001ad7ab : add byte ptr [rsp + rbx - 0x785fffff], dh ; hlt ; call qword ptr [rax]
0x0000000000197627 : add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x0000000000101183 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b077b : add byte ptr [rsp + rcx*2 + 0x6cc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0793 : add byte ptr [rsp + rcx*2 + 0x6cd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b07ab : add byte ptr [rsp + rcx*2 + 0x6cf00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0733 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001977ff : add byte ptr [rsp + rcx*8 - 0x13], dl ; jmp rsp
0x00000000001977f7 : add byte ptr [rsp + rcx*8], dl ; in eax, dx ; inc esp ; ret 0
0x00000000001a7743 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c38 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x00000000001ab79b : add byte ptr [rsp + rdi*8 - 0x59700000], ah ; call rdi
0x00000000001956cc : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019cf83 : add byte ptr [rsp + rdx + 0x6f580000], cl ; std ; call qword ptr [rcx]
0x000000000019716f : add byte ptr [rsp + rdx - 0x15], dl ; call rsp
0x00000000001b0fa3 : add byte ptr [rsp + rdx*2 + 0x78480001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001981d7 : add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000001aef53 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aef6b : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef83 : add byte ptr [rsp + rsi - 0x13a7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001baf63 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x000000000019934f : add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001989df : add byte ptr [rsp - 0xd], al ; jmp rsp
0x00000000001b5f93 : add byte ptr [rsp - 0xe67ffff], bl ; sti ; call rcx
0x000000000019a0c7 : add byte ptr [rsp - 9], ah ; push rsp ; ret 1
0x00000000001adefb : add byte ptr [rsp], al ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019df2b : add byte ptr [rsp], dh ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000009dac4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009bb80 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac3 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000198f95 : add dword ptr [eax], eax ; je 0x198fe2 ; cmc ; jmp rsp
0x00000000000d7a3e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000199ab6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x000000000019879e : add dword ptr [rax], eax ; add al, 0x52 ; call rsp
0x000000000017f3ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000012eb13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fde60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffdad : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a66e : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b886 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019811e : add dword ptr [rax], eax ; and al, 0x81 ; out dx, eax ; jmp rsp
0x0000000000198e3e : add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x00000000001981d6 : add dword ptr [rax], eax ; and al, 0x94 ; out dx, eax ; call rsp
0x000000000019a8c6 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a0e6 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000001989de : add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x000000000019934e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x0000000000198286 : add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x000000000019873e : add dword ptr [rax], eax ; call rsp
0x000000000019a5a6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x000000000019865e : add dword ptr [rax], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x000000000019996e : add dword ptr [rax], eax ; div esi ; call rsp
0x0000000000198eee : add dword ptr [rax], eax ; hlt ; and ch, dh ; jmp rsp
0x0000000000199c06 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x00000000001981a6 : add dword ptr [rax], eax ; hlt ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x000000000019a0c6 : add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x000000000019849e : add dword ptr [rax], eax ; in al, 0x46 ; int1 ; call rsp
0x0000000000199616 : add dword ptr [rax], eax ; jbe 0x199616 ; jmp rsp
0x0000000000198f96 : add dword ptr [rax], eax ; je 0x198fe1 ; cmc ; jmp rsp
0x0000000000198d7e : add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x0000000000198f46 : add dword ptr [rax], eax ; mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019b856 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x0000000000198a2e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, bl ; jmp rsp
0x000000000019a116 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x000000000019a646 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000198bd6 : add dword ptr [rax], eax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x0000000000199216 : add dword ptr [rax], eax ; push rsp ; or dh, dh ; jmp rsp
0x000000000019b756 : add dword ptr [rax], eax ; test bl, al ; cli ; jmp rsp
0x000000000019a49e : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001992c6 : add dword ptr [rax], eax ; test byte ptr [rsi + rsi*8], dl ; call rsp
0x000000000019a3ae : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x00000000001989b6 : add dword ptr [rax], eax ; xchg eax, esp ; and dh, bl ; jmp rsp
0x000000000019850e : add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; int1 ; call rsp
0x000000000019a466 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b966 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a88e : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019ba6e : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000000aa99c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000105cf9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000199445 : add dword ptr [rcx], 0xf65d7400 ; call rsp
0x000000000019811d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x00000000001afe5e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099b6e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d72fc : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd7313 ; je 0xd72a3 ; pop rbx ; ret
0x0000000000198eed : add dword ptr fs:[rax], eax ; hlt ; and ch, dh ; jmp rsp
0x0000000000138342 : add eax, 0x28bb51 ; add rsp, 8 ; ret
0x0000000000138312 : add eax, 0x28bbe9 ; add rsp, 8 ; ret
0x00000000001382b2 : add eax, 0x28bcd1 ; add rsp, 8 ; ret
0x00000000001382e2 : add eax, 0x28bcf9 ; add rsp, 8 ; ret
0x000000000012c57a : add eax, 0x29c83d ; add rsp, 8 ; ret
0x0000000000120650 : add eax, 0x2a520b ; add rsp, 8 ; ret
0x0000000000101f80 : add eax, 0x2c529b ; add rsp, 0x18 ; ret
0x00000000001019e8 : add eax, 0x2c57e3 ; add rsp, 8 ; ret
0x00000000000fe420 : add eax, 0x2c737b ; add rsp, 8 ; ret
0x00000000000ffaab : add eax, 0x2c7640 ; add rsp, 8 ; ret
0x00000000000fdf5c : add eax, 0x2c9037 ; add rsp, 8 ; ret
0x00000000000bb7de : add eax, 0x30b1dd ; add rsp, 8 ; ret
0x000000000008d7d7 : add eax, 0x3390ac ; add rsp, 8 ; ret
0x000000000003b0e2 : add eax, 0x38e36f ; add rsp, 8 ; ret
0x000000000019b885 : add eax, 0x73240001 ; sti ; call rsp
0x0000000000138306 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000138336 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000012f7db : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001092d6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001981a5 : add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000143dba : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001436de : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000001afe5a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000019afa1 : add edi, edx ; call rsp
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000198bd5 : add qword ptr [r8], rax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x000000000019b30d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000143db9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001436dd : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000088503 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3a5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9ff0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73e : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x00000000000f826d : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x000000000012016f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd3ec : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab45 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c31b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x00000000000cc261 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7813 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc6c4 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000001219f9 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b84a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce097 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a6 : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x000000000010a3c7 : add rsp, 0x40 ; ret
0x0000000000105127 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8921 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000125133 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f81 : add rsp, 0x48 ; ret
0x00000000000acb0b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc9fe : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7106 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76bf : add rsp, 0x60 ; pop rbx ; ret
0x000000000013872b : add rsp, 0x68 ; ret
0x0000000000136e1f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000105cfc : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000136b23 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c7f3d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x0000000000104f2d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000133022 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a8cb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5a6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000127599 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e838 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x0000000000140620 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013c413 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea8fa : add rsp, 8 ; xor eax, eax ; ret
0x0000000000198f45 : add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000198d81 : and ah, dh ; call rsp
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000102df1 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010ed9e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012c7b9 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e20 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000081a65 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000143765 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000012bf6a : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x1381f9
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000013c2a9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000143649 : and al, 0x38 ; jne 0x143630 ; add rsp, 0x48 ; ret
0x0000000000143648 : and al, 0x38 ; jne 0x143631 ; add rsp, 0x48 ; ret
0x00000000000fdd15 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000012a4d5 : and al, 0x41 ; call rsp
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bbdad : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000019b418 : and al, 0x66 ; cli ; call rsp
0x000000000019a670 : and al, 0x69 ; clc ; call rsp
0x000000000019b888 : and al, 0x73 ; sti ; call rsp
0x0000000000198120 : and al, 0x81 ; out dx, eax ; jmp rsp
0x0000000000198e40 : and al, 0x91 ; hlt ; jmp rsp
0x00000000001981d8 : and al, 0x94 ; out dx, eax ; call rsp
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000143790 : and al, 0xc ; add rsp, 0x38 ; ret
0x000000000019a8c8 : and al, 0xdb ; clc ; call rsp
0x000000000019a0e8 : and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb8f6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000001989e1 : and al, 0xf3 ; jmp rsp
0x0000000000199351 : and al, 0xf6 ; call rsp
0x000000000019a4a1 : and al, 0xf8 ; jmp rsp
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000198288 : and al, 0xfb ; out dx, eax ; call rsp
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000019ae65 : and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x00000000000ba006 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x000000000013b46f : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019865d : and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000089a6a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000019b0b9 : and bh, dl ; call rsp
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000133b2b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fe9ec : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000ff2e1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000198ef1 : and ch, dh ; jmp rsp
0x00000000001989b9 : and dh, bl ; jmp rsp
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000019a469 : and eax, edi ; jmp rsp
0x0000000000196811 : and ecx, ebp ; call rsp
0x0000000000024076 : call rsp
0x0000000000116432 : clc ; add rsp, 8 ; ret
0x000000000019a3b2 : clc ; call rsp
0x000000000019a66a : clc ; inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x000000000019a49a : clc ; inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x000000000019a41a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x000000000019a342 : clc ; jmp rsp
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000019a642 : clc ; push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019800d : cld ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x0000000000195892 : cld ; call rsp
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000195dba : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x0000000000195fca : cld ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000001962b2 : cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x00000000001958b6 : cld ; jmp rsp
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000195db6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000195802 : cld ; push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x00000000001962ae : cld ; push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x00000000000ff2e0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000019afa2 : cli ; call rsp
0x000000000019b1ba : cli ; dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000019b412 : cli ; dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x000000000019b112 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b30a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b69a : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b674 ; cli ; jmp rsp
0x000000000019b15a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000019af9a : cli ; inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000019b03a : cli ; jmp rsp
0x000000000019b29a : cli ; lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019b5fa : cli ; lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x000000000019b2ca : cli ; ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000019b462 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b46e ; call rsp
0x000000000019b032 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000189014 : cli ; retf ; push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x0000000000182f0a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000019a8c5 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000017510a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000198e9a : cmc ; call rsp
0x0000000000189bca : cmc ; dec dword ptr [rdx] ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bce : cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000198eea : cmc ; dec dword ptr [rsp + 0x20f40001] ; cmc ; jmp rsp
0x0000000000198f92 : cmc ; dec esp ; add dword ptr [eax], eax ; je 0x198fe5 ; cmc ; jmp rsp
0x0000000000189bea : cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x0000000000198f42 : cmc ; inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000189bd2 : cmc ; jmp rsp
0x0000000000189be6 : cmc ; lcall ptr [rsi] ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x0000000000198fc2 : cmc ; ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x0000000000198e92 : cmc ; push qword ptr [rcx + 0x14840001] ; cmc ; call rsp
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f690b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000013c2ca : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000bc402 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f76f0 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000878d3 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000f690a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000013c2c9 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000cae04 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000140816 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000140815 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000019680c : cmp al, 0x62 ; add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x000000000019a0e4 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019800c : cmp al, 0xfc ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x00000000001989dd : cmp al, byte ptr [rcx] ; add byte ptr [rsp - 0xd], al ; jmp rsp
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019e558 : cmp byte ptr [rbp - 0x17], bh ; jmp rsp
0x000000000014364a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x000000000019b15d : cmp byte ptr [rdx], al ; add ah, ah ; cli ; jmp rsp
0x00000000001af40d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f7643 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000198a2d : cmp eax, 0x32a40001 ; jmp rsp
0x000000000014295e : cmp eax, 0xff ; je 0x142979 ; add rsp, 8 ; ret
0x000000000019b1bd : cmp eax, dword ptr [rdx] ; add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001382a1 : cmp eax, edx ; je 0x1382b8 ; add rsp, 8 ; ret
0x0000000000197269 : cmp ebp, ebx ; jmp rsp
0x000000000019aa01 : cmp edi, ecx ; jmp rsp
0x0000000000196e61 : cmp edx, ebp ; jmp rsp
0x00000000001382a0 : cmp rax, rdx ; je 0x1382b9 ; add rsp, 8 ; ret
0x0000000000199c05 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x0000000000198661 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000108d9f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000019b1bb : dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000010ce5b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000019873b : dec dword ptr [rcx + rbp + 0x43640001] ; call rsp
0x000000000019b413 : dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x00000000001224ec : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x0000000000189bcb : dec dword ptr [rdx] ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bcf : dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189283 : dec dword ptr [rip + 0x17fff454] ; push rsp ; hlt ; jmp qword ptr [rcx]
0x0000000000198eeb : dec dword ptr [rsp + 0x20f40001] ; cmc ; jmp rsp
0x0000000000198d7b : dec dword ptr [rsp + rdx*2 + 0x20b40001] ; hlt ; call rsp
0x000000000019b963 : dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000019815b : dec esp ; add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x000000000019b113 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x0000000000198f93 : dec esp ; add dword ptr [eax], eax ; je 0x198fe4 ; cmc ; jmp rsp
0x00000000001981a3 : dec esp ; add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x000000000019b30b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019865b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x00000000001968d3 : dec esp ; imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x0000000000199613 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x000000000018748f : dec esp ; out dx, al ; call rsp
0x000000000019b69b : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b673 ; cli ; jmp rsp
0x00000000001968fb : dec esp ; push 0 ; add ah, dl ; jae 0x1968f4 ; jmp rsp
0x0000000000197473 : dec esp ; test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x0000000000197263 : dec esp ; wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x0000000000199971 : div esi ; call rsp
0x000000000012cf26 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000087acb : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000019a0c4 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x0000000000189019 : fcomi st(3) ; jmp rsp
0x0000000000188fe9 : fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x000000000019b759 : fdivr st(2) ; jmp rsp
0x00000000001a990d : fiadd word ptr [rax] ; add al, dh ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x000000000019a5a5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000197e71 : fldz ; call rsp
0x0000000000187480 : fmul qword ptr [rsi - 0x12] ; call rsp
0x000000000019a891 : fprem ; call rsp
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000019a88d : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x0000000000105cfb : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000198ef0 : hlt ; and ch, dh ; jmp rsp
0x0000000000198d4a : hlt ; call rsp
0x0000000000196e60 : hlt ; cmp edx, ebp ; jmp rsp
0x0000000000189282 : hlt ; dec dword ptr [rip + 0x17fff454] ; push rsp ; hlt ; jmp qword ptr [rcx]
0x0000000000198d7a : hlt ; dec dword ptr [rsp + rdx*2 + 0x20b40001] ; hlt ; call rsp
0x0000000000198d42 : hlt ; inc dword ptr [rdx + rdx*2 + 0x7f40001] ; hlt ; call rsp
0x0000000000189566 : hlt ; jmp rsp
0x00000000000e1c66 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x0000000000189562 : hlt ; push rdx ; mov esp, esi ; jmp rsp
0x000000000018955e : hlt ; push rdx ; mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x000000000019ae68 : hlt ; sar cl, 1 ; call rsp
0x0000000000199c08 : hlt ; sbb edi, esi ; call rsp
0x000000000009f47e : hlt ; sub rsp, 8 ; call 0x8b727
0x00000000001981a8 : hlt ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001975f0 : hlt ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000000b9fee : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000105125 : idiv bh ; add rsp, 0x408 ; ret
0x000000000019934a : idiv bh ; mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x00000000001992c2 : idiv bh ; mov esp, 0x84000178 ; adc al, 0xf6 ; call rsp
0x000000000019924a : idiv bh ; mov esp, 0xd4000176 ; or al, 0xf6 ; call rsp
0x000000000019996a : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x0000000000199f22 : idiv edi ; lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x0000000000199b02 : idiv edi ; mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000199c02 : idiv edi ; mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000199eea : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000019a0ea : idiv edi ; push rsp ; ret
0x00000000001968d5 : imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x0000000000197e70 : in al, -0x27 ; out dx, al ; call rsp
0x000000000019a0c9 : in al, -9 ; push rsp ; ret 1
0x0000000000197d65 : in al, 0 ; add byte ptr [rsi - 0x12], al ; call rsp
0x000000000019b160 : in al, 0x2e ; cli ; jmp rsp
0x000000000019aa00 : in al, 0x3b ; stc ; jmp rsp
0x00000000001984a0 : in al, 0x46 ; int1 ; call rsp
0x000000000019b310 : in al, 0x57 ; cli ; jmp rsp
0x000000000019a645 : in al, 1 ; add byte ptr [rbp - 8], dl ; jmp rsp
0x00000000001979a8 : in al, 8 ; out dx, al ; jmp rsp
0x00000000001a1642 : in al, dx ; call rsp
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000187474 : in al, dx ; out dx, al ; call rsp
0x00000000000f6e41 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000196ba9 : in eax, -0x17 ; call rsp
0x000000000019a66d : in eax, 1 ; add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000019762a : in eax, dx ; call rsp
0x0000000000197472 : in eax, dx ; dec esp ; test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x00000000001975ea : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x6b0c0000] ; in eax, dx ; jmp rsp
0x000000000019747a : in eax, dx ; jmp rsp
0x00000000001178a9 : in eax, dx ; jne 0x1178c1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001740ff : in eax, dx ; jne 0x1740e1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019776a : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x447c0000] ; in eax, dx ; call rsp
0x000000000019749a : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x51b40000] ; in eax, dx ; jmp rsp
0x00000000001978b2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0xfac0000] ; in eax, dx ; call rsp
0x0000000000197582 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x7f5c0000] ; in eax, dx ; jmp rsp
0x00000000001974da : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x6b440000] ; in eax, dx ; jmp rsp
0x00000000001976e2 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x502c0000] ; in eax, dx ; call rsp
0x0000000000198283 : inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019b15b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000019a66b : inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x00000000001975eb : inc dword ptr [rbp + rsi*4 - 0x6b0c0000] ; in eax, dx ; jmp rsp
0x0000000000195dbb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x0000000000195fcb : inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000001962b3 : inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000198d43 : inc dword ptr [rdx + rdx*2 + 0x7f40001] ; hlt ; call rsp
0x000000000019ae23 : inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019ac8b : inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x0000000000189beb : inc dword ptr [rsi] ; cmc ; jmp rsp
0x000000000019af9b : inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000019811b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000198f43 : inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000199213 : inc esp ; jne 0x199220 ; add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x000000000019a49b : inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000197db9 : insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x000000000009791f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000198bd9 : insd dword ptr [rdi], dx ; call rsp
0x0000000000181edc : insd dword ptr [rdi], dx ; sbb ebx, ebp ; jmp rsp
0x00000000001984a2 : int1 ; call rsp
0x000000000019865a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x00000000001985ea : int1 ; jmp rsp
0x00000000001979a5 : iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x0000000000115875 : ja 0x11584c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195fcd : ja 0x195fcd ; call rsp
0x0000000000195fc9 : ja 0x195fcd ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x0000000000195fcc : ja 0x195fce ; call rsp
0x000000000019b969 : ja 0x19b96a ; call rsp
0x00000000000f76bd : ja 0xf7707 ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000196901 : jae 0x1968ee ; jmp rsp
0x000000000019917d : jae 0x199186 ; add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x000000000019b889 : jae 0x19b888 ; call rsp
0x0000000000175109 : jb 0x175108 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018746f : jb 0x187479 ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000196941 : jbe 0x19692e ; jmp rsp
0x000000000019924d : jbe 0x199256 ; add ah, dl ; or al, 0xf6 ; call rsp
0x0000000000199619 : jbe 0x199613 ; jmp rsp
0x0000000000199618 : jbe 0x199614 ; jmp rsp
0x000000000011765c : je 0x11766e ; add rsp, 8 ; ret
0x000000000012b843 : je 0x12b84f ; mov rdi, rsp ; call rax
0x000000000012b92e : je 0x12b93a ; mov rdi, rsp ; call rax
0x00000000001382a3 : je 0x1382b6 ; add rsp, 8 ; ret
0x000000000013aafd : je 0x13ab58 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abbd : je 0x13ac18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ac7d : je 0x13acd8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad3d : je 0x13ad98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142961 : je 0x142976 ; add rsp, 8 ; ret
0x00000000001985e9 : je 0x1985de ; jmp rsp
0x0000000000198f98 : je 0x198fdf ; cmc ; jmp rsp
0x00000000001995c9 : je 0x1995c3 ; jmp rsp
0x000000000019b034 : je 0x19b06e ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019b1c0 : je 0x19b203 ; cli ; jmp rsp
0x000000000019b6a0 : je 0x19b66e ; cli ; jmp rsp
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbdac : je 0xbbddb ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc266 : je 0xbc295 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000196a71 : jg 0x196a5e ; jmp rsp
0x000000000019b469 : jg 0x19b467 ; call rsp
0x00000000000c7887 : jg 0xc785a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000019e559 : jge 0x19e546 ; jmp rsp
0x0000000000198e3c : jl 0x198ea2 ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x000000000019ab5c : jl 0x19ab73 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b884 : jl 0x19b892 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019ba6c : jl 0x19ba3e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000019a41b : jmp qword ptr [rsp + rdx*8 + 1]
0x0000000000002a71 : jmp rsp
0x0000000000105cfa : jne 0x105cf8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105d6a : jne 0x105d68 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000112cee : jne 0x112d27 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116534 : jne 0x1164de ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001178aa : jne 0x1178c0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117b76 : jne 0x117b2a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000012877c : jne 0x128770 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014364b : jne 0x14362e ; add rsp, 0x48 ; ret
0x000000000014362d : jne 0x143660 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001436f5 : jne 0x143708 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143768 : jne 0x143786 ; add rsp, 0x38 ; ret
0x0000000000174100 : jne 0x1740e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000199215 : jne 0x19921e ; add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008d80e : jne 0x8d7d4 ; add rsp, 8 ; ret
0x000000000008d831 : jne 0x8d846 ; add rsp, 8 ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000ef8eb : jne 0xef8d9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7811 : jne 0xf7899 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000197dd9 : jno 0x197dcb ; jmp rsp
0x000000000019934d : jnp 0x199356 ; add byte ptr [rsp - 0xa], al ; call rsp
0x00000000000fe421 : jnp 0xfe49e ; sub al, 0 ; add rsp, 8 ; ret
0x000000000018aa05 : jp 0x18a9ff ; call rsp
0x0000000000196a41 : jp 0x196a2e ; jmp rsp
0x00000000001019e9 : jrcxz 0x101a4a ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001a7c41 : jrcxz 0x1a7c34 ; call rsp
0x0000000000140c63 : js 0x140c78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195fc5 : js 0x195fc5 ; call rsp
0x0000000000195fc4 : js 0x195fc6 ; call rsp
0x0000000000196991 : js 0x19697e ; call rsp
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000116535 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001231c5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d0e5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000199eeb : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000197cab : lcall ptr [rcx + 0x5e840000] ; out dx, al ; jmp rsp
0x000000000019776b : lcall ptr [rdi + rdi*4 - 0x447c0000] ; in eax, dx ; call rsp
0x000000000019b29b : lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019749b : lcall ptr [rdx + rbp*4 + 0x51b40000] ; in eax, dx ; jmp rsp
0x00000000001874b3 : lcall ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x000000000019b5fb : lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x0000000000189be7 : lcall ptr [rsi] ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x00000000001981d3 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000019879b : lcall ptr [rsp + rbp + 0x52040001] ; call rsp
0x000000000019ae63 : lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x00000000000c7982 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ad11e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000136eb9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca88 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136cca : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c996 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad079 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000accd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138062 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bc : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e23 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad291 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000f6aa5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000013b1fd : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e665 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5aa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000136eb8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca87 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136cc9 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c995 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad078 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000accd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbad : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138061 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bb : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad559 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e22 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad290 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000c7981 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ad11d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000f6aa4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x000000000013b1fc : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e664 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5a9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000019ba6d : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019b6a1 : leave ; cli ; jmp rsp
0x00000000001a1641 : leave ; in al, dx ; call rsp
0x000000000019ae29 : leave ; stc ; call rsp
0x00000000000ad075 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000198fc3 : ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x000000000019b2cb : ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000198a83 : ljmp ptr [rcx + rax*2 + 0x46d40001] ; jmp rsp
0x0000000000197dd3 : ljmp ptr [rdi + 0x71140000] ; out dx, al ; jmp rsp
0x000000000019aca3 : ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x00000000001874a7 : ljmp ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x000000000019b463 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b46d ; call rsp
0x000000000019b2cc : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x00000000001a6ba4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000199f24 : lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000197dd4 : lodsb al, byte ptr [rsi] ; out 0, eax ; add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x00000000001874a8 : lodsb al, byte ptr [rsi] ; out dx, al ; call rsp
0x0000000000198fc4 : lodsb al, byte ptr [rsi] ; push 0x44840001 ; cmc ; jmp rsp
0x00000000001b0fa4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa7 ; jmp qword ptr [rbx]
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000196299 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000197cdd : loop 0x197ce5 ; add byte ptr [rdx - 0x12], ah ; call rsp
0x00000000000ad28f : loop 0xad2e6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad558 : loop 0xad5af ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000196b59 : loope 0x196b46 ; call rsp
0x0000000000197c85 : loopne 0x197c8d ; add byte ptr [rcx + rbx*2], dl ; out dx, al ; call rsp
0x000000000019a9fc : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x0000000000198d80 : mov ah, 0x20 ; hlt ; call rsp
0x00000000000bc209 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00000000001989dc : mov ah, 0x3a ; add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x0000000000198f48 : mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019b858 : mov ah, 0x40 ; sti ; call rsp
0x00000000001974a0 : mov ah, 0x51 ; in eax, dx ; jmp rsp
0x0000000000195db8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000019aacc : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x00000000001962b0 : mov ah, 0xaa ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019a644 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000197e6c : mov ah, 0xee ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x0000000000197f6c : mov ah, 0xf7 ; add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x00000000001a6ba5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001a4d40 : mov al, 2 ; std ; jmp rsp
0x0000000000197625 : mov bh, 0 ; add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x000000000019ad99 : mov bh, 0xf9 ; call rsp
0x000000000019aca9 : mov bh, cl ; call rsp
0x0000000000196751 : mov bl, 0xe8 ; call rsp
0x0000000000199821 : mov bl, 0xf6 ; jmp rsp
0x0000000000199eed : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001975ed : mov ch, 0 ; add ah, dh ; xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000199f25 : mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x00000000000c78ae : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e658 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b80c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e1dd : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188709 : mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000107293 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c21 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000141f3d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010ec74 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010eca4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010ec44 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000013c3a3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f10 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000199615 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000000d6cb2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008e837 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000fc6df : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c9f7d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000c9dd3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000000c9f7c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000081a68 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef07 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081a63 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c7b7 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bf6d : mov dword ptr [rsp + 0x28], ecx ; call 0x1381f6
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e1c68 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bc208 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000089220 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102d06 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013b46d : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013c2ac : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000bf1e4 : mov dword ptr [rsp], 1 ; jmp 0xbf1b7
0x0000000000089590 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x000000000012a4d3 : mov dword ptr [rsp], ecx ; call r12
0x00000000000c9dd2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000bc20b : mov eax, 0x41000000 ; call rsp
0x0000000000119310 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000034bc4 : mov eax, 0xf0014d6 ; push rsp ; ret
0x00000000000f6ada : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x00000000000fde5f : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000012e731 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013b1f9 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e661 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ab51 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0007 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0049
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000112b55 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x112b23
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6ab8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014378e : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ba004 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000fde10 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cc270 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a363 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a3c4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e77 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116431 : mov eax, edi ; add rsp, 8 ; ret
0x00000000000bb888 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fdd17 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000841ed : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000c9f7f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e821 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9765 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000198161 : mov ebp, edi ; jmp rsp
0x000000000012bef6 : mov ebx, esi ; sub rsp, 8 ; call 0x1381f8
0x0000000000135b7d : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000132745 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000137e1e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013254d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012d4dd : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000019776d : mov edi, 0xbb840000 ; in eax, dx ; call rsp
0x0000000000102d03 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000102def : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000143659 : mov edi, dword ptr [rsp + 0x18] ; call 0x1f8ae
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f35de : mov edi, dword ptr [rsp + 0x20] ; call 0x1f8ae
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d4f9 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bbdb0 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x0000000000102d50 : mov edi, dword ptr [rsp] ; call rbx
0x0000000000136eb6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136cc7 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012ca85 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135b7a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132742 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a4d0 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a5d2 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000013805f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000012c993 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d4da : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010eea0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010ed9c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000019588c : mov esi, 0x64fffc5b ; pop rbx ; cld ; call rsp
0x000000000012bfe8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010eda1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011ff19 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000096aea : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x96b05 ; jmp 0x96abf
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000012a5cf : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000197c84 : mov esp, 0x140000e0 ; pop rcx ; out dx, al ; call rsp
0x000000000019b0b4 : mov esp, 0x14000234 ; and bh, dl ; call rsp
0x000000000019698c : mov esp, 0x2400006c ; js 0x196983 ; call rsp
0x000000000019a88c : mov esp, 0x340001f4 ; fprem ; call rsp
0x0000000000199b04 : mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000197d64 : mov esp, 0x440000e4 ; out dx, al ; call rsp
0x0000000000197db4 : mov esp, 0x440000e6 ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x000000000019934c : mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x000000000019716c : mov esp, 0x54000096 ; adc al, 0xeb ; call rsp
0x0000000000198bd4 : mov esp, 0x54000149 ; insd dword ptr [rdi], dx ; call rsp
0x0000000000196ba4 : mov esp, 0x84000077 ; in eax, -0x17 ; call rsp
0x00000000001992c4 : mov esp, 0x84000178 ; adc al, 0xf6 ; call rsp
0x0000000000196b54 : mov esp, 0x94000076 ; loope 0x196b4b ; call rsp
0x000000000019a3ac : mov esp, 0x940001d1 ; adc edi, eax ; call rsp
0x00000000001976e5 : mov esp, 0xafd40000 ; in eax, dx ; call rsp
0x000000000019b854 : mov esp, 0xb4000116 ; sti ; call rsp
0x000000000019b3bc : mov esp, 0xc4000247 ; pop rbp ; cli ; call rsp
0x000000000019924c : mov esp, 0xd4000176 ; or al, 0xf6 ; call rsp
0x000000000019b70c : mov esp, 0xd400025c ; salc ; cli ; call rsp
0x0000000000196e5c : mov esp, 0xf4000084 ; cmp edx, ebp ; jmp rsp
0x0000000000199c04 : mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000189565 : mov esp, esi ; jmp rsp
0x0000000000189561 : mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x000000000009f47d : mov esp, esi ; sub rsp, 8 ; call 0x8b728
0x00000000000d6cb1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000081a67 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bf6c : mov qword ptr [rsp + 0x28], r9 ; call 0x1381f7
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e1c67 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bc207 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d05 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2ab : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000012a4d2 : mov qword ptr [rsp], rcx ; call r12
0x000000000009f47c : mov r12, rsi ; sub rsp, 8 ; call 0x8b729
0x000000000012a5d4 : mov r13, rsp ; call r15
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000013b1f8 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e660 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ab50 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0006 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde0f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a362 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a3c3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116430 : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000115993 : mov rbp, rsp ; pop rbp ; ret
0x000000000012bef5 : mov rbx, rsi ; sub rsp, 8 ; call 0x1381f9
0x0000000000135b7c : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132744 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012d4dc : mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000102d02 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000143658 : mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8af
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000f35dd : mov rdi, qword ptr [rsp + 0x20] ; call 0x1f8af
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012d4f8 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bbdaf : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000012c992 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d4d9 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013805e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000136eb5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136cc6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012ca84 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135b79 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132741 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132549 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a4cf : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a5d1 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012b845 : mov rdi, rsp ; call rax
0x000000000013a940 : mov rdi, rsp ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000012bfe7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010eda0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011ff18 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000013ab54 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e734 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000019b1bc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; je 0x19b207 ; cli ; jmp rsp
0x000000000019b414 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000198eec : mov word ptr [rcx + rax], fs ; hlt ; and ch, dh ; jmp rsp
0x0000000000198d7c : mov word ptr [rcx + rax], ss ; mov ah, 0x20 ; hlt ; call rsp
0x000000000019873c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; call rsp
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000197268 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x00000000001979a4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x000000000019996c : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b61c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x0000000000198a30 : movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, bl ; jmp rsp
0x00000000000bb8f8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010ebef : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000199f29 : movsxd rsi, edi ; jmp rsp
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bb8f9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e657 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b80b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e1dc : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000136d1f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013736a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000088501 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f7641 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000000ba00f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000013ab4f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000195b34 : nop ; push rsp ; cld ; call qword ptr [rax]
0x00000000000fdf5e : nop ; sub al, 0 ; add rsp, 8 ; ret
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c78af : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000174435 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000013c411 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000fc6c2 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000189bcc : or al, 0x62 ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bd0 : or al, 0x62 ; cmc ; jmp rsp
0x00000000000e75e5 : or al, 0x89 ; push rsp ; ret
0x0000000000199251 : or al, 0xf6 ; call rsp
0x000000000019aacd : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000013bbc7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010a361 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a3c2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000142675 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000198285 : or byte ptr [rcx], al ; add byte ptr [rbx + rdi*8], ah ; out dx, eax ; call rsp
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e7b8b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001979a9 : or dh, ch ; jmp rsp
0x0000000000199219 : or dh, dh ; jmp rsp
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000189284 : or eax, 0x17fff454 ; push rsp ; hlt ; jmp qword ptr [rcx]
0x000000000012cb3f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010c95c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000197db5 : out 0, al ; add byte ptr [rsp + rbp*2 - 0x12], al ; call rsp
0x0000000000197dd5 : out 0, eax ; add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000012a5d0 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000001970c1 : out 0xea, al ; jmp rsp
0x00000000001998f1 : out 0xf6, al ; call rsp
0x000000000019a119 : out 0xf7, al ; jmp rsp
0x0000000000197e6d : out dx, al ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x0000000000187476 : out dx, al ; call rsp
0x000000000018748e : out dx, al ; dec esp ; out dx, al ; call rsp
0x00000000001979aa : out dx, al ; jmp rsp
0x0000000000197caa : out dx, al ; lcall ptr [rcx + 0x5e840000] ; out dx, al ; jmp rsp
0x00000000001874b2 : out dx, al ; lcall ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x0000000000197dd2 : out dx, al ; ljmp ptr [rdi + 0x71140000] ; out dx, al ; jmp rsp
0x00000000001874a6 : out dx, al ; ljmp ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x0000000000197e6a : out dx, al ; push qword ptr [rsi + rbp*8 - 0x261c0000] ; out dx, al ; call rsp
0x0000000000198012 : out dx, eax ; call rsp
0x000000000019815a : out dx, eax ; dec esp ; add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x00000000001981a2 : out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000198282 : out dx, eax ; inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019811a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000197f72 : out dx, eax ; jmp rsp
0x00000000001981d2 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000012ca86 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135b7b : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132743 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000197f6a : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f840000] ; out dx, eax ; jmp rsp
0x000000000018746e : outsd dx, dword ptr [rsi] ; jb 0x18747a ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x000000000019aaf9 : pop rax ; stc ; jmp rsp
0x0000000000119276 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000198e3d : pop rbp ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x000000000019b3c1 : pop rbp ; cli ; call rsp
0x00000000001a163d : pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x0000000000195891 : pop rbx ; cld ; call rsp
0x000000000019b69d : pop rcx ; add al, byte ptr [rax] ; je 0x19b671 ; cli ; jmp rsp
0x0000000000197c89 : pop rcx ; out dx, al ; call rsp
0x00000000000c7885 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001958b5 : pop rsi ; cld ; jmp rsp
0x0000000000197cb1 : pop rsi ; out dx, al ; jmp rsp
0x0000000000147300 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001981d4 : pop rsp ; add al, 1 ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000001467b4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c54 : pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x00000000000d9562 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000148000 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bb8f5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000195945 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000195809 : pop rsp ; cld ; call rdx
0x0000000000195805 : pop rsp ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x0000000000196099 : pop rsp ; cld ; jmp rax
0x0000000000195789 : pop rsp ; cld ; jmp rsi
0x00000000001b9554 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000198511 : pop rsp ; int1 ; call rsp
0x00000000001a9911 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x0000000000102948 : pop rsp ; iretd ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000086b3d : pop rsp ; jmp rcx
0x0000000000199eec : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000102840 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010285a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000145190 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010400c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x00000000000b65d5 : pop rsp ; pop r14 ; ret
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x00000000001a0b54 : pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b62
0x00000000001b1154 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x00000000001a8654 : pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76b8
0x000000000019d554 : pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x0000000000194ed1 : pop rsp ; sti ; call rax
0x000000000019e554 : pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54b ; jmp rsp
0x00000000001aef54 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000019996d : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001968fd : push 0 ; add ah, dl ; jae 0x1968f2 ; jmp rsp
0x0000000000198fc5 : push 0x44840001 ; cmc ; jmp rsp
0x000000000019a9fb : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x000000000012877b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195db7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000198e93 : push qword ptr [rcx + 0x14840001] ; cmc ; call rsp
0x00000000001978b3 : push qword ptr [rcx + rcx*8 - 0xfac0000] ; in eax, dx ; call rsp
0x000000000019b033 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000197583 : push qword ptr [rcx + rsi*4 - 0x7f5c0000] ; in eax, dx ; jmp rsp
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f76bc : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000197f6b : push qword ptr [rdi + rsi*8 + 0x1f840000] ; out dx, eax ; jmp rsp
0x0000000000115874 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000189017 : push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x0000000000188fe7 : push qword ptr [rdi] ; fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x0000000000195803 : push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x00000000001962af : push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019aacb : push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x00000000001989db : push qword ptr [rdx + rdi + 0x24440001] ; jmp rsp
0x00000000001970db : push qword ptr [rdx + rdx*4] ; add byte ptr [rsp + rbp*8 - 0x16], dh ; jmp rsp
0x000000000018a9ff : push qword ptr [rdx - 0x4d000986] ; jp 0x18aa05 ; call rsp
0x0000000000197e6b : push qword ptr [rsi + rbp*8 - 0x261c0000] ; out dx, al ; call rsp
0x000000000019a643 : push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000018870b : push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000188feb : push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x00000000001974db : push qword ptr [rsp + rbp*4 + 0x6b440000] ; in eax, dx ; jmp rsp
0x00000000001976e3 : push qword ptr [rsp + rdi*4 - 0x502c0000] ; in eax, dx ; call rsp
0x000000000013bbc9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b827 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000023ad0 : push rax ; push rsp ; ret
0x0000000000115990 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000019b2a1 : push rbx ; cli ; call rsp
0x000000000013aafe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001974a1 : push rcx ; in eax, dx ; jmp rsp
0x000000000019b61d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b311 : push rdi ; cli ; jmp rsp
0x00000000001019ea : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001987a1 : push rdx ; call rsp
0x0000000000188708 : push rdx ; mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000189563 : push rdx ; mov esp, esi ; jmp rsp
0x000000000018955f : push rdx ; mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000019aad1 : push rdx ; stc ; call rsp
0x0000000000101f82 : push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000120652 : push rdx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000019b2d1 : push rsi ; cli ; jmp rsp
0x0000000000195788 : push rsi ; pop rsp ; cld ; jmp rsi
0x0000000000197170 : push rsp ; adc al, 0xeb ; call rsp
0x00000000001b0fa5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fa6 ; jmp qword ptr [rbx]
0x0000000000198d7d : push rsp ; add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x00000000001bad4c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b074c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eea1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010ed9d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000003dfe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x000000000012c7b8 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000ba6ee : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fdd14 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000812c2 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000001af411 : push rsp ; call rsi
0x00000000001bb8b1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bb8e9 : push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019a648 : push rsp ; clc ; jmp rsp
0x0000000000195b39 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b35 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb54c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6ba9 : push rsp ; cli ; call qword ptr [rax]
0x000000000019a5a4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x0000000000189285 : push rsp ; hlt ; call qword ptr [rdi]
0x0000000000189289 : push rsp ; hlt ; jmp qword ptr [rcx]
0x00000000001a244c : push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x0000000000198bd8 : push rsp ; insd dword ptr [rdi], dx ; call rsp
0x00000000000cd9d6 : push rsp ; jne 0xcd963 ; mov eax, 0x7d00 ; ret
0x00000000001a2c4c : push rsp ; jno 0x1a2c56 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x000000000009f12b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001095e4 : push rsp ; lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000196298 : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000135027 : push rsp ; mov eax, 1 ; ret
0x00000000001a754c : push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x0000000000199218 : push rsp ; or dh, dh ; jmp rsp
0x00000000001b294c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001958b4 : push rsp ; pop rsi ; cld ; jmp rsp
0x00000000001b0b4c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b4f ; jmp qword ptr [rcx]
0x0000000000197628 : push rsp ; pushfq ; in eax, dx ; call rsp
0x0000000000023ad1 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x000000000010a3f4 : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019a0cb : push rsp ; ret 1
0x00000000001a8c4c : push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000000e75e3 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x000000000019849c : push rsp ; sbb byte ptr [rcx], al ; add ah, ah ; int1 ; call rsp
0x0000000000195da0 : push rsp ; xchg ah, bh ; jmp rsp
0x000000000019b29c : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019ae64 : pushfq ; and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x0000000000197629 : pushfq ; in eax, dx ; call rsp
0x000000000019776c : pushfq ; mov edi, 0xbb840000 ; in eax, dx ; call rsp
0x00000000001874b4 : pushfq ; out dx, al ; call rsp
0x000000000019749c : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x000000000019879c : pushfq ; sub al, 1 ; add byte ptr [rdx + rdx*2], al ; call rsp
0x00000000000c9be0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb569 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010c998 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000189015 : retf ; push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x000000000010a93d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000d7a41 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000011d097 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000001a7c3d : rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000f6e3e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e75e4 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000136d1e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000137369 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b521 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000122950 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108da2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000009ebd9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9ebd8 ; ret
0x000000000019a49d : salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000174101 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019b711 : salc ; cli ; call rsp
0x0000000000196060 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x19606a ; call rax
0x000000000019ae69 : sar cl, 1 ; call rsp
0x00000000000fe9ef : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000189be8 : sbb al, 0x66 ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x00000000000f6e42 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019849d : sbb byte ptr [rcx], al ; add ah, ah ; int1 ; call rsp
0x00000000000f0004 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004c
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000014559d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000133020 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x0000000000181edd : sbb ebx, ebp ; jmp rsp
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000199c09 : sbb edi, esi ; call rsp
0x000000000019b039 : sbb edx, edi ; jmp rsp
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001976e9 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000012afb8 : sete al ; add rsp, 8 ; ret
0x0000000000136e1c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000001a7c40 : shl bl, 0xef ; call rsp
0x000000000019a9e2 : stc ; call rsp
0x000000000019ae22 : stc ; inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019ac8a : stc ; inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000019aa02 : stc ; jmp rsp
0x000000000019ae62 : stc ; lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000019aca2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x000000000019a9fa : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x000000000019aaca : stc ; push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x000000000019b96a : std ; call rsp
0x000000000019b962 : std ; dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x00000000001a4d42 : std ; jmp rsp
0x000000000019b85a : sti ; call rsp
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000198289 : sti ; out dx, eax ; call rsp
0x000000000019af89 : sti ; stc ; jmp rsp
0x000000000019749d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x00000000001962b5 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962b1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000101f83 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fdf5f : sub al, 0 ; add rsp, 8 ; ret
0x000000000019879d : sub al, 1 ; add byte ptr [rdx + rdx*2], al ; call rsp
0x000000000019af9d : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019e555 : sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54a ; jmp rsp
0x0000000000120653 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000132548 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000001382b5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140d39 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000850e0 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x000000000012c57d : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000019873d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x00000000001382d6 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000013744e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ce094 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019af85 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000019b119 : sub edx, edi ; jmp rsp
0x00000000001382d5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000f6e3f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c2cd : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000088e17 : sub rsp, 0x80 ; call 0x115049
0x000000000012bef8 : sub rsp, 8 ; call 0x1381f6
0x000000000012bef7 : sub rsp, 8 ; call 0x1381f7
0x000000000009f47f : sub rsp, 8 ; call 0x8b726
0x0000000000125131 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000019a66c : test ah, ch ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x0000000000138337 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019b758 : test bl, al ; cli ; jmp rsp
0x000000000019a4a0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x000000000012a4ce : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000019aaf8 : test byte ptr [rax - 7], bl ; jmp rsp
0x0000000000196e5d : test byte ptr [rax], al ; add ah, dh ; cmp edx, ebp ; jmp rsp
0x000000000019b15c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x0000000000198284 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x0000000000197478 : test byte ptr [rbp - 0x13], cl ; jmp rsp
0x00000000001975ec : test byte ptr [rbp - 0x6b0c0000], dh ; in eax, dx ; jmp rsp
0x000000000019b400 : test byte ptr [rcx - 6], ah ; call rsp
0x0000000000197f70 : test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x000000000019af9c : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019ae24 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x00000000001992c8 : test byte ptr [rsi + rsi*8], dl ; call rsp
0x0000000000197cb0 : test byte ptr [rsi - 0x12], bl ; jmp rsp
0x000000000019ac8c : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x00000000001224ee : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x000000000019ae28 : test cl, cl ; stc ; call rsp
0x0000000000197f6d : test dword ptr [rax], 0xef1f8400 ; jmp rsp
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000197475 : test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x000000000011765a : test eax, eax ; je 0x117670 ; add rsp, 8 ; ret
0x000000000012b841 : test eax, eax ; je 0x12b851 ; mov rdi, rsp ; call rax
0x000000000012b92c : test eax, eax ; je 0x12b93c ; mov rdi, rsp ; call rax
0x000000000008d80c : test eax, eax ; jne 0x8d7d6 ; add rsp, 8 ; ret
0x000000000008d82f : test eax, eax ; jne 0x8d848 ; add rsp, 8 ; ret
0x000000000012afb6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000117659 : test rax, rax ; je 0x117671 ; add rsp, 8 ; ret
0x000000000012b840 : test rax, rax ; je 0x12b852 ; mov rdi, rsp ; call rax
0x000000000012b92b : test rax, rax ; je 0x12b93d ; mov rdi, rsp ; call rax
0x0000000000197265 : wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x0000000000101f81 : wait ; push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000195da1 : xchg ah, bh ; jmp rsp
0x0000000000198391 : xchg al, dh ; jmp rsp
0x000000000014559f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145d63 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000182f0b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000136d1d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000198e41 : xchg eax, ecx ; hlt ; jmp rsp
0x00000000001981a9 : xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001a4d3d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000019716d : xchg eax, esi ; add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x000000000019a3b0 : xchg eax, esp ; adc edi, eax ; call rsp
0x00000000001989b8 : xchg eax, esp ; and dh, bl ; jmp rsp
0x0000000000196810 : xchg eax, esp ; and ecx, ebp ; call rsp
0x000000000019a8c4 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x0000000000198a2c : xchg eax, esp ; cmp eax, 0x32a40001 ; jmp rsp
0x00000000001975f1 : xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000196b58 : xchg eax, esp ; loope 0x196b47 ; call rsp
0x0000000000197624 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x00000000001981d9 : xchg eax, esp ; out dx, eax ; call rsp
0x0000000000198510 : xchg eax, esp ; pop rsp ; int1 ; call rsp
0x00000000000fe9ee : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000019af84 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000019ac91 : xchg ecx, edi ; call rsp
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000019a468 : xor al, 0x21 ; clc ; jmp rsp
0x000000000019b2a0 : xor al, 0x53 ; cli ; call rsp
0x000000000019b968 : xor al, 0x77 ; std ; call rsp
0x000000000019ac90 : xor al, 0x87 ; stc ; call rsp
0x000000000019ad98 : xor al, 0xb7 ; stc ; call rsp
0x000000000019a890 : xor al, 0xd9 ; clc ; call rsp
0x000000000019ba70 : xor al, 0xdf ; std ; call rsp
0x000000000019b0b5 : xor al, 2 ; add byte ptr [rdx], dl ; cli ; call rsp
0x000000000019afa0 : xor al, 3 ; cli ; call rsp
0x0000000000135b78 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000121a2b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019562c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x000000000019549c : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x0000000000198011 : xor ch, bh ; call rsp
0x0000000000198a31 : xor dh, bl ; jmp rsp
0x000000000019b035 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000c78b0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001337cc : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bf782 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001221d5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011eaa8 : xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000137095 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143dc8 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000014362f : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb80e : xor eax, eax ; add rsp, 8 ; ret
0x0000000000115991 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008851a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000ad074 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000ad076 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000f6aa0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000f6aa2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000198010 : xor r13b, dil ; call rsp
