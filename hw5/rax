0x000000000019cf85 : adc al, 0 ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001470ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147159 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a7d40 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000fccee : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a7d88 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000047065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000012af75 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001ace0c : adc al, 0x13 ; add dword ptr [rax], eax ; jo 0x1acdf3 ; jmp qword ptr [rcx]
0x000000000019d50c : adc al, 0x1a ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000039fc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000001af40c : adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa0c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000009f16b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001b090c : adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0c : adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b110c : adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b110f ; jmp qword ptr [rcx]
0x00000000001b2a0c : adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b360c : adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x0000000000072eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005bf54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000148580 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000852ea : adc al, 0x98 ; add rax, rdx ; jmp rax
0x000000000005c14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000d9b17 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00000000000cdcdd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001a790c : adc al, 0xbe ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x0000000000048031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000000a7ee9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000019569d : adc al, 0xfc ; call qword ptr [rax - 0x1f0003eb]
0x00000000001727d8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000007d9bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00000000001951f0 : adc al, bl ; sti ; call rax
0x0000000000147297 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147301 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000001acddd : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001acdf5 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000000a2a14 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000046eef : adc al, ch ; imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000f34ee : adc al, ch ; insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000ac820 : adc bh, byte ptr [rbx] ; ja 0xac834 ; cmove rax, rcx ; ret
0x0000000000187e80 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x0000000000195248 : adc bl, ah ; sti ; call qword ptr [rax]
0x0000000000195278 : adc bl, bl ; sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000079616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000089382 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000004857c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000037377 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000136042 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x0000000000108a5f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e2411 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2436 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007eaab : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000136041 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x0000000000108a5e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001435b8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000078b3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001096ba : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012eb3a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000001322d6 : adc byte ptr [rax + 1], bh ; ret
0x00000000000aaf8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004906e : adc byte ptr [rax + 1], cl ; ret
0x000000000009f166 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000010a1e8 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000013599d : adc byte ptr [rax + 1], dil ; ret
0x00000000000d8e0f : adc byte ptr [rax + 2], bh ; ret
0x00000000000a9f64 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9e62 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9de0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fda13 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010ab41 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000944e4 : adc byte ptr [rax - 0x73], cl ; jg 0x94501 ; jne 0x944d8 ; ret
0x000000000010ad65 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010ad64 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009490a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a585c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c84ba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848c
0x000000000012bfeb : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00000000000891d2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392b3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007cd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000115c96 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x0000000000082c39 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012fae4 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e5704 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014dc2f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001657b7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000001657f3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1604 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000123440 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000087293 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000495a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fe817 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000ea96b : adc byte ptr [rax - 1], bh ; ret
0x0000000000195bf0 : adc byte ptr [rax - 4], al ; call qword ptr [rax + 0x10fffc41]
0x00000000000fc2eb : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006abcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000149511 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474a1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003b19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d89a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012bf35 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aacc3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008bb5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018ab8d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006b454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x00000000001156f1 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080fda : adc byte ptr [rax], al ; mov edx, 0x234 ; call 0x7d289
0x000000000008105b : adc byte ptr [rax], al ; mov edx, 0x237 ; call 0x7d289
0x0000000000088855 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88824
0x0000000000088854 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88825
0x00000000000852e6 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045afb : adc byte ptr [rax], al ; ret
0x0000000000195b9c : adc byte ptr [rax], bh ; cld ; call qword ptr [rax + 0x10fffc39]
0x00000000000d8e85 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d8da8 : adc byte ptr [rax], bh ; ret 0x870f
0x0000000000195590 : adc byte ptr [rax], ch ; cld ; call rax
0x0000000000194df8 : adc byte ptr [rax], cl ; sti ; jmp rax
0x00000000000a9d5d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9f41 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000008f428 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000194f40 : adc byte ptr [rbp - 0x796f0005], al ; sti ; call qword ptr [rax]
0x0000000000195b30 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x0000000000079617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000194f28 : adc byte ptr [rbx + rdi*8 - 1], bh ; nop ; jge 0x194f31 ; call qword ptr [rax]
0x0000000000195bf8 : adc byte ptr [rbx - 4], al ; call qword ptr [rax + 0x10fffc44]
0x0000000000194f10 : adc byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x10fffb74]
0x0000000000195ba4 : adc byte ptr [rbx], bh ; cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000112ee5 : adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000edc60 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000008605b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000195bb4 : adc byte ptr [rcx - 4], al ; call qword ptr [rax + 0x10fffc42]
0x0000000000194f20 : adc byte ptr [rcx - 5], bh ; call qword ptr [rax + 0x10fffb7a]
0x0000000000195614 : adc byte ptr [rcx], ch ; cld ; push rax ; sub bh, ah ; call rax
0x00000000001240f7 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fcded : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce29 ; ret
0x000000000010eea3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x0000000000195bc4 : adc byte ptr [rdi - 4], al ; call qword ptr [rax + 0x10fffc48]
0x0000000000195e50 : adc byte ptr [rdi - 4], dh ; call rax
0x0000000000195b20 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f30 : adc byte ptr [rdi - 5], bh ; call qword ptr [rax + 0x10fffb80]
0x0000000000195630 : adc byte ptr [rdi], ah ; cld ; call rax
0x000000000011e27e : adc byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000089383 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000168898 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170903 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000146031 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146121 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f41 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d85b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d55f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc5f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf5f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c657 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146989 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001464e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001466c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001468a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001460f3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001461e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146003 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c904 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d504 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d804 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf04 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c5fc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149c8d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aad : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a485 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493a5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2a5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145f13 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d33 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e23 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195bd8 : adc byte ptr [rdi], dh ; cld ; call qword ptr [rax + 0x10fffc38]
0x0000000000194f38 : adc byte ptr [rdx - 0x7c6f0005], al ; sti ; call qword ptr [rax]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000195be0 : adc byte ptr [rdx], bh ; cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195678 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; jmp rax
0x000000000016efeb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000195b94 : adc byte ptr [rip + 0x3690fffc], dh ; cld ; call qword ptr [rax]
0x0000000000195be8 : adc byte ptr [rip + 0x3e90fffc], bh ; cld ; call qword ptr [rax]
0x0000000000195c00 : adc byte ptr [rsi - 4], al ; call qword ptr [rax + 0x10fffc47]
0x0000000000195b28 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x0000000000194f18 : adc byte ptr [rsi - 5], dh ; call qword ptr [rax + 0x10fffb77]
0x0000000000195bac : adc byte ptr [rsi], bh ; cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195bbc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b38 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x000000000014c907 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187e0c : adc ch, ch ; int1 ; jmp qword ptr [rax]
0x0000000000195244 : adc cl, ah ; sti ; call qword ptr [rax]
0x000000000009f545 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bc5ee : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aa833 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f358f
0x000000000004acef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009f85d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fe5b8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004709d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00000000000ff98e : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e3a6c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009b6f4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089a65 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001952e0 : adc dh, bl ; sti ; jmp rax
0x00000000000091b8 : adc dl, al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006bc5e : adc dl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000048f13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000074075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000017435b : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a51e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007dfd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b8c7f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d8fd6 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000089387 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014aeab : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000013efc9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000111409 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147437 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001493a9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019cc8d : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc96 ; jmp qword ptr [rdi]
0x00000000001742fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006589c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x000000000008103c : adc dword ptr [rax], eax ; mov edx, 0x23a ; call 0x7d289
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000013c19e : adc dword ptr [rcx], eax ; ja 0x13c1d2 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000021bdb : adc dword ptr [rcx], ebx ; adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000001a9430 : adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x000000000006bd9a : adc dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000147436 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aaf8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194e31 : adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001381d9 : adc eax, 0x290dc2 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dd72 : adc eax, 0x295e09 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000137342 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000002e196 : adc eax, 0x395d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000001f929 : adc eax, 0x3a99da ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001162ac : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x000000000013418d : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x00000000000a6808 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a7f1c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000014006d : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000003d249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008f197 : adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x000000000006e511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c18ff : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014ac0e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001491c9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000001ace0d : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x26], dh ; jmp qword ptr [rcx]
0x000000000011e2a3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a2a18 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014c5ff : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d67e : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007ba4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000099a6d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ac604 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000a2be4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2c04 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2c24 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2a6e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000014c7e2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000006e510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000149330 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001acddb : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001a75db : add ah, ah ; mov edx, 0x75c00000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001baadb : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b0edb : add ah, ah ; push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ee0 ; jmp qword ptr [rcx]
0x00000000001a92db : add ah, ah ; xlatb ; add byte ptr [rax], al ; jo 0x1a930e ; int1 ; jmp rcx
0x00000000001b0abb : add ah, al ; add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019f6bb : add ah, al ; cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x00000000001a94bb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x000000000019a0d7 : add ah, al ; in al, -9 ; jmp qword ptr [rbx + rax*8]
0x00000000001aeebb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001acdf3 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116b : add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000000aac1e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001b07f3 : add ah, bh ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f3 : add ah, bh ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001954b5 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001953b1 : add ah, bh ; jmp rax
0x00000000001a15f3 : add ah, bh ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001b0bf3 : add ah, bh ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf8 ; jmp qword ptr [rcx]
0x0000000000195391 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00000000001afcd3 : add ah, bl ; add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b0ad3 : add ah, bl ; add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ab0d3 : add ah, bl ; cmc ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af4d3 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001a6bd3 : add ah, bl ; mov al, 0 ; add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001a45d3 : add ah, bl ; mov al, byte ptr [rax] ; add byte ptr [rax], ch ; je 0x1a45d0 ; call qword ptr [rcx]
0x00000000000a2a6b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001b09e3 : add ah, ch ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee3 : add ah, ch ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001b2ae3 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240d
0x00000000001a6ae3 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a66e3 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e1 ; jmp qword ptr [rdx]
0x00000000001b3bc3 : add ah, cl ; add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b00c3 : add ah, cl ; add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b07c3 : add ah, cl ; add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b05c3 : add ah, cl ; add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001a93c3 : add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001aa0c3 : add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001a6cc3 : add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001b29c3 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0bc3 : add ah, cl ; push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019d4c3 : add ah, cl ; sbb dword ptr [rax], eax ; add al, cl ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001ab1c3 : add ah, cl ; test byte ptr [rax], 0 ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00000000001aebc3 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aebc7 ; jmp qword ptr [rcx]
0x00000000001ae9eb : add ah, dh ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1eb : add ah, dh ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aeb : add ah, dh ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ab0eb : add ah, dh ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001a61eb : add ah, dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622e ; out dx, al ; jmp qword ptr [rcx]
0x00000000001b2beb : add ah, dh ; jo 0x1b2bf8 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a67eb : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e9 ; jmp qword ptr [rcx]
0x00000000001ad7eb : add ah, dh ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000001b09cb : add ah, dl ; add qword ptr [rax], r8 ; loopne 0x1b0a48 ; cmc ; jmp qword ptr [rcx]
0x00000000001aafcb : add ah, dl ; hlt ; add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001abacb : add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x00000000001b1acb : add ah, dl ; pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0ccb : add ah, dl ; push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b11cb : add ah, dl ; push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b11d0 ; jmp qword ptr [rcx]
0x00000000001ad7cb : add ah, dl ; sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001ae7cb : add ah, dl ; sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001ae5cb : add ah, dl ; sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004b2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f12c3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000127091 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001224f0 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000014557d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a0c9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455a1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001439ef : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000103652 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000005ae21 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x117129
0x00000000000abfa3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000001bd059 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x000000000010eea5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000001162af : add al, 0 ; cmove rax, rdx ; ret
0x000000000009ea94 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea04 : add al, 0 ; mov rax, rdi ; ret
0x000000000004e619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000019b99c : add al, 0x17 ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001adcfc : add al, 0x22 ; add dword ptr [rax], eax ; loopne 0x1adc9e ; hlt ; jmp qword ptr [rcx]
0x000000000013a93a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000011777d : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c9d0f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000096ce0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000bf1e5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b6
0x00000000001adefc : add al, 0x24 ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000004698a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000ac673 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001073d3 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd225 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001ae1fc : add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001221d4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000019f1fc : add al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x0000000000072163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000071f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000001b09fc : add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000016b017 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000cfc04 : add al, 0x75 ; jae 0xcfc20 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e510a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x0000000000063886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000009e8c9 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000118659 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862e
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000d3fb3 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000003918a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009e947 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x000000000009e992 : add al, 0x8a ; add r10, rax ; jmp r10
0x0000000000054d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000003d39d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013c153 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000aabc9 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012dd79 : add al, 0xc2 ; jmp rax
0x00000000000ac83b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014a62b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d7c49 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7767 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000abb25 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a65db : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45b3 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000481c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x000000000018802d : add al, 0xf2 ; call qword ptr [rax]
0x0000000000188025 : add al, 0xf2 ; call rax
0x0000000000188045 : add al, 0xf2 ; jmp rax
0x0000000000188029 : add al, 0xf2 ; push rax ; add al, 0xf2 ; call qword ptr [rax]
0x00000000001bb2fc : add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb29e ; sti ; jmp qword ptr [rdx]
0x0000000000194de5 : add al, 0xfb ; call rax
0x000000000019549d : add al, 0xfc ; jmp qword ptr [rax]
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012388b : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000abb58 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000001abf95 : add al, 1 ; add byte ptr [rax], cl ; call rcx
0x000000000005cb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000009f49c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016f6f7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6728 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000089afd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000077403 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000187f2f : add al, ah ; cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x000000000018803f : add al, al ; add al, 0xf2 ; call rax
0x00000000001a75df : add al, al ; jne 0x1a75d6 ; jmp qword ptr [rax]
0x000000000019d50f : add al, al ; or ebp, ecx ; jmp qword ptr [rax]
0x0000000000010aef : add al, al ; ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017d3c7 : add al, al ; sldt word ptr [rax] ; ret
0x000000000019df87 : add al, bh ; jno 0x19df78 ; call qword ptr [rax]
0x00000000001a7b37 : add al, bh ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a7747 : add al, bl ; frndint ; call qword ptr [rax]
0x00000000000a6a2b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000014d6e2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000089a61 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019b0b6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019aace : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b2ce : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b61e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b116 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f52d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001073d6 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008e8f3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013dfcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000088102 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000842e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000d776b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008e5e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000109f5e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009563b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010e51b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d2f
0x0000000000085e55 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014571d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148341 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7755 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000145741 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000132daf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013582f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134f8f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f80d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x0000000000067494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x0000000000102842 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000ccdd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000138229 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103ac2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103835 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103701 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a93c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000001095f5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000abf83 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c80da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e5cca : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b9a99 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e75d3 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171f04 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d820e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000046076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000005e78e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f38c3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007eb53 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000083527 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000809e2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000012568e : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000e0cdd : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b416 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b15e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019a9fe : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b30e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1be : add al, byte ptr [rax] ; je 0x19b205 ; cli ; jmp rsp
0x000000000019b69e : add al, byte ptr [rax] ; je 0x19b670 ; cli ; jmp rsp
0x0000000000123da2 : add al, byte ptr [rax] ; jne 0x123df6 ; mov eax, r8d ; ret
0x000000000009ea75 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001bbf06 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc026 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9e5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000019ade6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x000000000016e40b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001bc176 : add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x000000000011d099 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105df2 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019b626 : add al, byte ptr [rax] ; ret
0x00000000001bc467 : add al, byte ptr [rax] ; ret 0x503
0x000000000019b036 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab5e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019af86 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x00000000001bbf36 : add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000019aaf6 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b3fe : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae26 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b29e : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019ac8e : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019ad96 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019af9e : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x0000000000111665 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001238c8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238e7 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001abd7d : add al, byte ptr [rcx] ; add byte ptr [rax], dh ; in eax, -0xe ; call qword ptr [rsi]
0x000000000004cfc7 : add al, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a682a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019b115 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000000f425d : add al, ch ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fa83f : add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000134d41 : add al, ch ; fstp dword ptr [rax - 0x76b70011] ; ret 0x8d48
0x000000000013ccce : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000033542 : add al, ch ; pop rax ; ret
0x00000000001a0a1f : add al, dl ; push rax ; jmp 0x1a0a27
0x00000000001ad7cf : add al, dl ; stc ; call qword ptr [rax]
0x00000000001954b9 : add bh, ah ; jmp rax
0x0000000000195499 : add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000012af72 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000edb9d : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001750ff : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000187f6c : add bh, bh ; int1 ; jmp qword ptr [rax]
0x000000000007a3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000195260 : add bh, bl ; sti ; jmp rax
0x00000000000f68a2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf68b9 ; ret
0x000000000004a080 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003545b : add bh, byte ptr [rax - 1] ; ret
0x0000000000187e7c : add bh, ch ; int1 ; call qword ptr [rax]
0x00000000001bd057 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x0000000000036882 : add bl, al ; cmp byte ptr [rax], al ; ret
0x00000000000abc99 : add bl, al ; lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000ac87d : add bl, al ; lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x000000000008ebdd : add bl, al ; lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00000000000877a4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000132421 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001434ba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000194dd1 : add bl, bh ; call rax
0x00000000001a9dc7 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019db5d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001bcd27 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x0000000000187dac : add bl, ch ; int1 ; jmp qword ptr [rax]
0x00000000000cdb77 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a0a1d : add byte ptr [r8], r8b ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001aac9f : add byte ptr [rax + 0x15], ah ; jmp qword ptr [rcx]
0x000000000008779f : add byte ptr [rax + 0x16], bh ; ret
0x00000000001bae77 : add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x00000000001bc6dc : add byte ptr [rax + 0x1809], dh ; loopne 0x1bc6f6 ; ret 0xa
0x00000000001bc684 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bc69f ; ret 0xb
0x00000000001a6b77 : add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001a2c4f : add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001af8ef : add byte ptr [rax + 0x1e], al ; cmc ; jmp qword ptr [rcx]
0x0000000000034bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001a92df : add byte ptr [rax + 0x24], dh ; int1 ; jmp rcx
0x00000000001a93c7 : add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001a9347 : add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000172a3f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000001a06cf : add byte ptr [rax + 0x27], dl ; jmp 0x1a06d7
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a02 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1504 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007f085 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001a94bf : add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x000000000012fd3d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00000000001a61ef : add byte ptr [rax + 0x34], dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000045b6c : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f146c : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007d9d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bdc83 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007d997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001152a1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000115360 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000008873b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000001a6ae7 : add byte ptr [rax + 0x3e], bl ; cli ; call qword ptr [rax]
0x0000000000194675 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000075f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001bb54f : add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001b00c7 : add byte ptr [rax + 0x4b], cl ; cmc ; jmp rax
0x00000000001a6407 : add byte ptr [rax + 0x4e], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000070675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b05af : add byte ptr [rax + 0x5b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b05c7 : add byte ptr [rax + 0x5b], bl ; cmc ; jmp qword ptr [rcx]
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000006e0d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001073d8 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000852e7 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aabc6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000f2e2b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b2da : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000113035 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b2e2f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004617d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006ca9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000000cd23f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000017581f : add byte ptr [rax + 0x67], al ; jmp 0x175827
0x00000000000cd25f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000cd24f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000cd26f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001b090f : add byte ptr [rax + 0x6e], al ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001b0927 : add byte ptr [rax + 0x6e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000001bc023 : add byte ptr [rax + 0x6f880002], ch ; clc ; call rcx
0x00000000000cd47f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x000000000019cf87 : add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001b0b37 : add byte ptr [rax + 0x70], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c6f : add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c87 : add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a754f : add byte ptr [rax + 0x73], ah ; out dx, eax ; call rax
0x00000000001b0d47 : add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000089a5f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001b0ef7 : add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0edf : add byte ptr [rax + 0x76], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000071323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000704f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b0fa7 : add byte ptr [rax + 0x78], cl ; cmc ; jmp qword ptr [rbx]
0x00000000000a732f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000019c1bf : add byte ptr [rax + 0x7b], al ; std ; jmp qword ptr [rdx]
0x00000000001b11e7 : add byte ptr [rax + 0x7b], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b11cf : add byte ptr [rax + 0x7b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a67ef : add byte ptr [rax + 0x7e], al ; out dx, al ; jmp qword ptr [rcx]
0x00000000000cda07 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000cd95a : add byte ptr [rax + 0x7f], bh ; ret
0x000000000006d82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000760aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000075b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc36f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00000000001ad00f : add byte ptr [rax + 0xd], al ; hlt ; jmp rcx
0x00000000001a2a87 : add byte ptr [rax + 0xd], cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001077af : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000007118c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000761ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d455 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c959c : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078cdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008e64b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140814 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010efcb : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000517bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f96c6 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000be066 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008f19b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f963c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000012668c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000cda1f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001adb5b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001adb73 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x000000000012b00f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b5 : add byte ptr [rax + 1], bh ; ret
0x000000000008e8f5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000c00b2 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c036 : add byte ptr [rax + 1], cl ; ret
0x000000000003bf0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000bb5fc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000049510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000773ee : add byte ptr [rax + 1], dil ; ret
0x000000000012e04f : add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf6 : add byte ptr [rax + 7], bh ; ret
0x00000000000ec982 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebae8 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000017c36b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a90a3 : add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001a7b33 : add byte ptr [rax + rax*8], bh ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a7b63 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000000a69ac : add byte ptr [rax + rax], 0 ; ret
0x00000000000f12c2 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000006a96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001162ae : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x000000000008241c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082d89 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001a7d3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d87 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac565 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001b136b : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x00000000001a9343 : add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000070a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ffddd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001977cf : add byte ptr [rax + rcx*8 - 0x13], ah ; jmp rsp
0x00000000001a832b : add byte ptr [rax + rcx*8], dh ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001af363 : add byte ptr [rax + rdi + 1], ch ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af37b : add byte ptr [rax + rdi - 0x21fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a738b : add byte ptr [rax + rdi*4 + 0x1d00000], dl ; out dx, eax ; jmp rsi
0x00000000001bb2fb : add byte ptr [rax + rdi*8], al ; add dword ptr [rax], eax ; jo 0x1bb29f ; sti ; jmp qword ptr [rdx]
0x00000000001ab313 : add byte ptr [rax + rdi*8], bl ; add byte ptr [rax], al ; call 0x111aa55a
0x000000000017d517 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001acb93 : add byte ptr [rax + rdx - 0x4317ffff], bl ; jmp qword ptr [rdi]
0x00000000001b0b33 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; js 0x1b0bb2 ; cmc ; jmp qword ptr [rcx]
0x00000000001aebab : add byte ptr [rax + rsi - 0x1ccfffff], dh ; hlt ; call qword ptr [rsi]
0x00000000001b2b73 : add byte ptr [rax + rsi*2 + 1], bh ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b43 : add byte ptr [rax + rsi*2 + 1], cl ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b13 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; call 0x271b243d
0x00000000001a6ba3 : add byte ptr [rax + rsi*4 + 0x54080000], ch ; cli ; call qword ptr [rax]
0x00000000001a6b73 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001aab9b : add byte ptr [rax + rsi*8 + 0x13900000], ah ; jmp qword ptr [rcx]
0x00000000001978b7 : add byte ptr [rax + rsi*8 - 0x13], dl ; call rsp
0x00000000001aef6f : add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef87 : add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef27 : add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x0000000000133b8d : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001aa0c7 : add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001aeebf : add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f1434 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001aee47 : add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aedb7 : add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aea1f : add byte ptr [rax - 0x21], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aea37 : add byte ptr [rax - 0x21], bh ; hlt ; call qword ptr [rbx]
0x00000000001aea07 : add byte ptr [rax - 0x21], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6cc7 : add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001acddf : add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001acdf7 : add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001ace0f : add byte ptr [rax - 0x26], dh ; jmp qword ptr [rcx]
0x0000000000036081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ae5cf : add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x0000000000033dc7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000008767e : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000074177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000abf8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000034f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000519d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000011c129 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ef : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a1327 : add byte ptr [rax - 0x42], bl ; in al, dx ; jmp rax
0x00000000001b1f5f : add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x000000000003c932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001b1e17 : add byte ptr [rax - 0x4b], bl ; cmc ; call rdi
0x00000000001a6bd7 : add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001ae217 : add byte ptr [rax - 0x58], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1ff : add byte ptr [rax - 0x58], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b1acf : add byte ptr [rax - 0x59], dl ; cmc ; call rsi
0x00000000001a0ff7 : add byte ptr [rax - 0x5d], ch ; in al, dx ; jmp qword ptr [rcx]
0x00000000001adee7 : add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001baf67 : add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x00000000000ff97f : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001bb2ff : add byte ptr [rax - 0x6b], dh ; sti ; jmp qword ptr [rdx]
0x00000000001adb77 : add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001adb5f : add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad9cf : add byte ptr [rax - 0x6f], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ad9e7 : add byte ptr [rax - 0x6f], bl ; hlt ; jmp qword ptr [rsi]
0x00000000001a6b2f : add byte ptr [rax - 0x71], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a6b17 : add byte ptr [rax - 0x71], cl ; out dx, al ; call qword ptr [rax]
0x0000000000037373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15ffa6 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16bcf4 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16dc23 ; ret
0x00000000000fe2ec : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8ca4 ; ret
0x00000000000fe12c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8e64 ; ret
0x000000000012b0af : add byte ptr [rax - 0x73], cl ; add eax, 0x61a2e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ac5af : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000001206cf : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a8025 ; call rax
0x00000000000ac59f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008156a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000450dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007bf08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007aea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ac38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x000000000012dd76 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000eff07 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140ee2 : add byte ptr [rax - 0x75], cl ; add eax, 0x284526 ; call qword ptr [rax]
0x00000000001408cf : add byte ptr [rax - 0x75], cl ; add eax, 0x284b39 ; call qword ptr [rax]
0x000000000007cb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x348a09 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39bc59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78b9 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78d9 ; ret
0x000000000007ff33 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde0e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000845df : add byte ptr [rax - 0x75], cl ; je 0x8460e ; call rax
0x00000000000845de : add byte ptr [rax - 0x75], cl ; je 0x8460f ; call rax
0x0000000000143657 : add byte ptr [rax - 0x75], cl ; jl 0x143688 ; sbb al, ch ; ret 0xffed
0x000000000007b706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00000000000cf303 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000ec2f5 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x0000000000074f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d721f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013bb07 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000106237 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000010622f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000d1973 : add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00000000001529df : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000000c9b8f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000010998e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000005be57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368111 ; call rax
0x000000000005b801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368767 ; call rax
0x0000000000050049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x373f1f ; call rax
0x000000000004d3cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x376b9b ; call rax
0x0000000000123bef : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000ff414 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ffaf2 : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000011777f : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000001435b4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000896d1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008958e : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x00000000001437df : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x000000000008921e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000011642f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007cb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007a361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006abce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007221c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000143099 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009f49e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000088104 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bea26 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f15 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e15 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010bf54 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007019f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00000000000be4d5 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2b
0x000000000006dcb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000784b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000008588c : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x81b89
0x00000000000bda26 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89d19
0x0000000000088b75 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e30c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103ad1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012ca83 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000076ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00000000001146c1 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000084ba5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012800f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008408c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc58 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000662e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003413a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000bf2bf : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000117782 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d776d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d353 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007fe1f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000522b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bcd40 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000970b0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f0c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c97e6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fe4ba : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c8f3e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fe015 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000105e95 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000007db9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x000000000008e5eb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000061cd7 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000e0bcf : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000951f5 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000089162 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000011ac94 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000014356c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000001322ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x132304 ; ret
0x000000000013505c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x135074 ; ret
0x0000000000135074 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13508c ; ret
0x00000000001358ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1358c4 ; ret
0x00000000001358c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1358dc ; ret
0x00000000001358f4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13590c ; ret
0x000000000011931f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001bc177 : add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000001ad7ef : add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000000c9d11 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001b136f : add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000008b8bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000072b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000063690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00000000000a32d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001003a1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138ee3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000001a4c6f : add byte ptr [rax - 0x7c], al ; in eax, dx ; call qword ptr [rdx]
0x000000000016cbc7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x000000000010e51d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d2d
0x0000000000084abb : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000878cd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f71bf : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x0000000000174576 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x174587 ; ret
0x0000000000084be2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1dba : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126b8f : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122e04 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000aa14f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fea6f : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001224f2 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082bd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000bee1f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000012267a : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58af : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749af : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f3a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009f02f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000144e3f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d7c0f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000afc8f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8d17 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6f : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000609ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e617 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011f6f5 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008de80 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146e23 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7757 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144e63 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008b9ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ee54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000aff17 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bc589 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x0000000000039aa0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000007186c : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000158ffb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f1bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001a244f : add byte ptr [rax - 0xb], ah ; in al, dx ; call qword ptr [rsi]
0x00000000001b0ac0 : add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000011954b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548d : add byte ptr [rax - 1], bh ; ret
0x00000000001a6ab7 : add byte ptr [rax - 1], bh ; stc ; call qword ptr [rax]
0x00000000000368c6 : add byte ptr [rax - 1], dil ; ret
0x0000000000195924 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x000000000019b4ef : add byte ptr [rax - 6], ah ; call rsp
0x00000000001aa547 : add byte ptr [rax - 7], ch ; int1 ; call rsi
0x0000000000039aa4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000006b4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000073ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003ea8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001750fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013c11b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b7db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000963cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000082f33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aad83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006fe0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000362c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000071033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b5c13 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016e711 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x00000000001a90a5 : add byte ptr [rax], 0 ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x000000000006d82b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x0000000000070676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x0000000000070fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00000000000761ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x0000000000078083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x0000000000126a39 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000001ab0ef : add byte ptr [rax], ah ; and al, 0xf2 ; jmp qword ptr [rcx]
0x000000000010e70e : add byte ptr [rax], ah ; jmp 0x10e6d8
0x000000000019df2f : add byte ptr [rax], ah ; jno 0x19df20 ; call qword ptr [rcx]
0x00000000001b119f : add byte ptr [rax], ah ; jnp 0x1b119c ; jmp qword ptr [rcx]
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001aa99f : add byte ptr [rax], ah ; or dh, dl ; call rsi
0x000000000000a63f : add byte ptr [rax], ah ; ret 0x10
0x00000000000078f7 : add byte ptr [rax], ah ; ret 0xf
0x000000000019f6bf : add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x00000000001ae1cf : add byte ptr [rax], ah ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adabf : add byte ptr [rax], ah ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7d3e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d86 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001ace0a : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; jo 0x1acdf5 ; jmp qword ptr [rcx]
0x000000000019d50a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001af40a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa0a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001b090a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0a : add byte ptr [rax], al ; adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b110a : add byte ptr [rax], al ; adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b1111 ; jmp qword ptr [rcx]
0x0000000000197c86 : add byte ptr [rax], al ; adc al, 0x59 ; out dx, al ; call rsp
0x00000000001b2a0a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x0000000000197dd6 : add byte ptr [rax], al ; adc al, 0x71 ; out dx, al ; jmp rsp
0x00000000001b360a : add byte ptr [rax], al ; adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001a790a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001977f6 : add byte ptr [rax], al ; adc al, 0xcc ; in eax, dx ; inc esp ; ret 0
0x000000000019792e : add byte ptr [rax], al ; adc al, 0xfe ; in eax, dx ; call rsp
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a790e : add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a643e : add byte ptr [rax], al ; adc byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x0000000000035d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001a163e : add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000001a942e : add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x0000000000187471 : add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000001acbe9 : add byte ptr [rax], al ; add ah, dh ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001abac9 : add byte ptr [rax], al ; add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x00000000001adcfa : add byte ptr [rax], al ; add al, 0x22 ; add dword ptr [rax], eax ; loopne 0x1adca0 ; hlt ; jmp qword ptr [rcx]
0x00000000001adefa : add byte ptr [rax], al ; add al, 0x24 ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1fa : add byte ptr [rax], al ; add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019f1fa : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b09fa : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001bb2fa : add byte ptr [rax], al ; add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2a0 ; sti ; jmp qword ptr [rdx]
0x000000000001bdd5 : add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000018803d : add byte ptr [rax], al ; add al, al ; add al, 0xf2 ; call rax
0x00000000001860b5 : add byte ptr [rax], al ; add al, bh ; loope 0x1860c0 ; jmp qword ptr [rdi]
0x0000000000186135 : add byte ptr [rax], al ; add al, bh ; loope 0x186140 ; jmp qword ptr [rdi]
0x00000000001861b5 : add byte ptr [rax], al ; add al, bh ; loope 0x1861c0 ; jmp qword ptr [rdi]
0x00000000001ae747 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000111663 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000112388 : add byte ptr [rax], al ; add al, ch ; nop ; ret 0xfff1
0x0000000000033540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x0000000000039aa5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000bdda6 : add byte ptr [rax], al ; add al, ch ; ret 0x572
0x000000000006f646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x000000000012c006 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x000000000002aca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000000dd1d6 : add byte ptr [rax], al ; add al, ch ; ret 0xf426
0x00000000000bd0a6 : add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x00000000001242a6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x000000000001bded : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be1d : add byte ptr [rax], al ; add al, dh ; ret 0x13
0x00000000001750fd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013221a : add byte ptr [rax], al ; add bh, bh ; loope 0x1321b7 ; ret
0x00000000000d726b : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cea3a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ada9f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d958b : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d9585 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00000000001359bb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000895da : add byte ptr [rax], al ; add bl, al ; ret
0x000000000013510c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000194dcf : add byte ptr [rax], al ; add bl, bh ; call rax
0x000000000007b5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00000000000bf1e8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000a6ddd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6ded : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000142c6b : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000055b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a00 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1502 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000194673 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000b0629 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004b64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000017581d : add byte ptr [rax], al ; add byte ptr [rax + 0x67], al ; jmp 0x175829
0x00000000000a732d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cd958 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c959a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000140812 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010efc9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000ff52f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f96c4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f963a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cda1d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012b00d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aaec0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003bf0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012e05d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001a7d3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d85 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac563 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000003c2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ff97d : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000ac5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007ff31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde0c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000007b704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d1971 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00000000000c9b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007cb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bea24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010bf52 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000088b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e30a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103acf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x000000000003ea20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008408a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000f003d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cdff1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000105e93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000570dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000951f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006368e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000138ee1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f71bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000aa14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000146963 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d7c0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000609ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e615 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00000000001484e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014698d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc73d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000015a7f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a7d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d84 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000001bdd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000018803b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; add al, 0xf2 ; call rax
0x00000000001860b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1860c2 ; jmp qword ptr [rdi]
0x0000000000186133 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186142 ; jmp qword ptr [rdi]
0x00000000001861b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1861c2 ; jmp qword ptr [rdi]
0x000000000001bdeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x13
0x0000000000194dcd : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000a6deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000758cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000072d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000017581b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x67], al ; jmp 0x17582b
0x00000000000ac5ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007cb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084088 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000bff4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000570db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000001749ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d7c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000c004b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001bdd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000001bde9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x13
0x0000000000194dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000ea94d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001bee70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000194dca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x000000000001bd59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000018249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001860b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1860c3 ; jmp qword ptr [rdi]
0x0000000000186132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186143 ; jmp qword ptr [rdi]
0x00000000001861b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1861c3 ; jmp qword ptr [rdi]
0x000000000017581a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x17582c
0x00000000001942ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcb6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x000000000001926a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a362 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e1f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e6e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf352 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001befd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd746 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd5f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001bd5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000003a899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001019fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000aa38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001100eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001942eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000007a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000001173cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000abf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004db0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fe3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077eec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001750fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001439ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000018021c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001860b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1860c1 ; jmp qword ptr [rdi]
0x0000000000186134 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186141 ; jmp qword ptr [rdi]
0x00000000001861b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1861c1 ; jmp qword ptr [rdi]
0x00000000000fb847 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108a77 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d6c0d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc55 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000097486 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x0000000000187470 : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x00000000001a7d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a7dab ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017581c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x17582a
0x000000000006084e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00000000000bf711 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbb947
0x0000000000058e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000170b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170aac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170abc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170acc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac59c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a732c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000168c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000cda1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007222c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013c11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d720c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000011865b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862c
0x000000000015b7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000168cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013c4d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d97a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c884c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007cb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a6ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b92c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000133728 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c2d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096ce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001095e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001942ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000194672 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x000000000001926c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a364 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x000000000017f1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f984 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e1f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e6e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf354 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001befd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd748 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd5f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194dce : add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000094422 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94433 ; ret
0x00000000000a9bad : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001bd5d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000001a116d : add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x000000000001824d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f31 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012cf27 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000000aa8e1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000db203 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5cfd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000aac39 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000943e3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015b0bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000170848 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000005a37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005721c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e13cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013c5cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e17bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e978d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00000000001019fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000b5776 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x0000000000168cad : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012fb09 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001169ce : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168c8d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000c4990 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000056802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa900 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000000000aa38d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bccf1 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000000e4751 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103711 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000005ae22 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x117128
0x0000000000103845 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000d97d8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd97ef
0x0000000000071034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000010367a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103689 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000f5f3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddd77 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000008e1e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b5c14 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005133c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f76d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094f9f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e1a54 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d5350 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001100ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bd86d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000121577 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835df : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001942ed : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019cc8e : add byte ptr [rax], al ; add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000001a587e : add byte ptr [rax], al ; add byte ptr [rcx], 0xee ; call qword ptr [rsi]
0x00000000000d5b65 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5af6
0x00000000000b9df5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000db212 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e0795 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0ab : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008d9f4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c286f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c5fe1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41fd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2832 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a7eb : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x000000000005401a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c245e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f51 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fccef : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000e06fd : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ae505 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000abc62 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001728f2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000e81f8 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x0000000000115975 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000aab95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b92d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008eb2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c52e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c55fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013d40b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df12a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b1c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000fb848 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf08 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d786e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c354f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000e06eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000014a735 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8e7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000016e712 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008ea42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000103653 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f68a5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001bace6 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000000f5f17 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000019f13a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x00000000000e4c65 : add byte ptr [rax], al ; add cl, al ; call 0x66d0d57d
0x0000000000067495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x0000000000067732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009e7e5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009e6b1 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0c01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006084f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000065893 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e45b7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e45c6 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000171d61 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a12b0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a12b9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000e4679 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d5b66 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001af15a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000000abf4e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008e8f4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132db1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000135831 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134f91 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132214 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000012eb15 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001442fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013aee1 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f59 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f7dd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a5e6e : add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x000000000019d41a : add byte ptr [rax], al ; and al, 0x19 ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001b051a : add byte ptr [rax], al ; and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001b291a : add byte ptr [rax], al ; and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a381a : add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a521a : add byte ptr [rax], al ; and al, 0x97 ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a661a : add byte ptr [rax], al ; and al, 0xab ; add byte ptr [rax], al ; loopne 0x1a6698 ; out dx, al ; jmp rdx
0x0000000000126a38 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x126a05
0x000000000019df2e : add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000019bcbe : add byte ptr [rax], al ; and byte ptr [rdi - 0x18], cl ; call qword ptr [rcx]
0x00000000001ab0ee : add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa99e : add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x00000000001a067e : add byte ptr [rax], al ; and byte ptr [rsi], 0xeb ; call qword ptr [rcx]
0x00000000001adb5a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000077eee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001b2bef : add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008b7a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d454 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001ab316 : add byte ptr [rax], al ; call 0x111aa557
0x0000000000088e1c : add byte ptr [rax], al ; call 0x115044
0x00000000001a85f6 : add byte ptr [rax], al ; call 0x131a7656
0x00000000001a8626 : add byte ptr [rax], al ; call 0x131a7686
0x00000000001a8656 : add byte ptr [rax], al ; call 0x131a76b6
0x00000000001a8686 : add byte ptr [rax], al ; call 0x131a76e6
0x00000000001a86b6 : add byte ptr [rax], al ; call 0x131a7716
0x000000000019d126 : add byte ptr [rax], al ; call 0x1819ba3a
0x00000000000f3fab : add byte ptr [rax], al ; call 0x2027d
0x00000000001a85c6 : add byte ptr [rax], al ; call 0x211a7626
0x00000000001aad86 : add byte ptr [rax], al ; call 0x221a9fab
0x00000000001aad85 : add byte ptr [rax], al ; call 0x221a9fac
0x00000000001a3c56 : add byte ptr [rax], al ; call 0x271a29a8
0x00000000001a36e6 : add byte ptr [rax], al ; call 0x281a242e
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x0000000000112389 : add byte ptr [rax], al ; call 0x2e624
0x0000000000080fdf : add byte ptr [rax], al ; call 0x7d284
0x00000000001750fe : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bc20d : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000103659 : add byte ptr [rax], al ; call rbx
0x00000000001439ae : add byte ptr [rax], al ; call rcx
0x000000000018021e : add byte ptr [rax], al ; call rdi
0x0000000000039fcc : add byte ptr [rax], al ; call rdx
0x000000000017f3ce : add byte ptr [rax], al ; call rsp
0x00000000001aa776 : add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x000000000019df86 : add byte ptr [rax], al ; clc ; jno 0x19df79 ; call qword ptr [rax]
0x00000000001860b6 : add byte ptr [rax], al ; clc ; loope 0x1860bf ; jmp qword ptr [rdi]
0x0000000000186136 : add byte ptr [rax], al ; clc ; loope 0x18613f ; jmp qword ptr [rdi]
0x00000000001861b6 : add byte ptr [rax], al ; clc ; loope 0x1861bf ; jmp qword ptr [rdi]
0x00000000001a90a6 : add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001a7b36 : add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001acdf2 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116a : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001b08f2 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b07f2 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f2 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a15f2 : add byte ptr [rax], al ; cld ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001b0bf2 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf9 ; jmp qword ptr [rcx]
0x00000000001a85f2 : add byte ptr [rax], al ; cld ; retf 0 ; call 0x131a765a
0x00000000001ab042 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000000fb849 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108a79 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b64ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d6c0f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc57 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000001157c9 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097488 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000cd9ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010eccf : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019d432 : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001aea32 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea22 ; hlt ; call qword ptr [rbx]
0x00000000001b0732 : add byte ptr [rax], al ; cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b32 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bb3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c32 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b5432 : add byte ptr [rax], al ; cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a7b32 : add byte ptr [rax], al ; cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001bbf32 : add byte ptr [rax], al ; cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000016cbc6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000019e556 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0x17], bh ; jmp rsp
0x00000000001a6346 : add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab106 : add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab246 : add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ch ; jmp rcx
0x0000000000074697 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x746a8 ; pop rbx ; ret
0x00000000000cc6f0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcc703 ; ret
0x00000000000acc17 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacc31 ; mov eax, edi ; ret
0x0000000000072aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x0000000000083f87 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x83f58 ; ret
0x00000000000cda94 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcdac7 ; ret
0x00000000001a66e6 : add byte ptr [rax], al ; cwde ; jae 0x1a66de ; jmp qword ptr [rdx]
0x000000000019e526 : add byte ptr [rax], al ; cwde ; jl 0x19e519 ; jmp qword ptr [rsi]
0x000000000019d436 : add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6de6 : add byte ptr [rax], al ; cwde ; out 0xee, al ; call qword ptr [rax]
0x00000000001a1406 : add byte ptr [rax], al ; cwde ; ret
0x00000000001a0b56 : add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b60
0x00000000001a9342 : add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001a2876 : add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001afcd2 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001aced2 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add dword ptr [rax], eax ; call 0x131ac2c0
0x00000000001a7746 : add byte ptr [rax], al ; fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001b2bd2 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6bd2 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e880000] ; out dx, al ; call qword ptr [rax]
0x00000000001af4d2 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af8d2 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab0d2 : add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001b0ad2 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0ad9 ; jmp qword ptr [rcx]
0x00000000001a45d2 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x74280000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000350d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001ab046 : add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000001adbd2 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7d16 : add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001acbea : add byte ptr [rax], al ; hlt ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001b02ea : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001ae9ea : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1ea : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aea : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ab0ea : add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af8ea : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000196e5e : add byte ptr [rax], al ; hlt ; cmp edx, ebp ; jmp rsp
0x00000000001a61ea : add byte ptr [rax], al ; hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622f ; out dx, al ; jmp qword ptr [rcx]
0x00000000001b2bea : add byte ptr [rax], al ; hlt ; jo 0x1b2bf9 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a67ea : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67ea ; jmp qword ptr [rcx]
0x00000000001ad7ea : add byte ptr [rax], al ; hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000001975ee : add byte ptr [rax], al ; hlt ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000001baada : add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x0000000000197e6e : add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x00000000001a92da : add byte ptr [rax], al ; in al, -0x29 ; add byte ptr [rax], al ; jo 0x1a930f ; int1 ; jmp rcx
0x000000000019bbda : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x00000000001b0eda : add byte ptr [rax], al ; in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ee1 ; jmp qword ptr [rcx]
0x00000000001979a6 : add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x00000000001acce2 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, cl ; fpatan ; call qword ptr [rbx]
0x00000000001b09e2 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee2 : add byte ptr [rax], al ; in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a36e2 : add byte ptr [rax], al ; in al, dx ; jnp 0x1a36f0 ; add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000187472 : add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x00000000001b2ae2 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240e
0x00000000001a6ae2 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a66e2 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e2 ; jmp qword ptr [rdx]
0x00000000001acd62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001af962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aee94
0x00000000001bb062 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001af362 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001baf62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf0b ; sti ; jmp qword ptr [rdx]
0x00000000001ba162 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000197db6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x00000000001b2962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001b6462 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aed62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001bc53e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x000000000019dfce : add byte ptr [rax], al ; jb 0x19dfc1 ; jmp qword ptr [rsi]
0x00000000000f68a6 : add byte ptr [rax], al ; jbe 0xf68b5 ; ret
0x00000000001a386a : add byte ptr [rax], al ; je 0x1a38f4 ; add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x00000000001a4c6a : add byte ptr [rax], al ; je 0x1a4c08 ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001a5e6a : add byte ptr [rax], al ; je 0x1a5e1a ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a7d9e : add byte ptr [rax], al ; je 0x1a7da9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aef6a : add byte ptr [rax], al ; je 0x1aefab ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6a : add byte ptr [rax], al ; je 0x1b0cc8 ; add dword ptr [rax], eax ; jb 0x1b0c71 ; jmp qword ptr [rcx]
0x000000000006d82c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x0000000000070677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x0000000000070feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00000000000761ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x0000000000078084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x0000000000087607 : add byte ptr [rax], al ; je 0x87614 ; ret
0x0000000000088f26 : add byte ptr [rax], al ; je 0x88f34 ; ret
0x0000000000094426 : add byte ptr [rax], al ; je 0x9442f ; ret
0x00000000000ac564 : add byte ptr [rax], al ; je 0xac5d8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000cdabb : add byte ptr [rax], al ; je 0xcdb0e ; mov eax, 0x20 ; ret
0x00000000000e8466 : add byte ptr [rax], al ; je 0xe84a6 ; xor eax, eax ; ret
0x00000000000f5f18 : add byte ptr [rax], al ; je 0xf5f25 ; ret
0x00000000001728f3 : add byte ptr [rax], al ; jg 0x172906 ; neg eax ; ret
0x00000000000abc63 : add byte ptr [rax], al ; jg 0xabc6f ; neg eax ; ret
0x0000000000170849 : add byte ptr [rax], al ; jl 0x170856 ; neg eax ; ret
0x00000000001a2872 : add byte ptr [rax], al ; jl 0x1a28ec ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001aa772 : add byte ptr [rax], al ; jl 0x1aa76b ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x00000000001b2b72 : add byte ptr [rax], al ; jl 0x1b2bef ; add dword ptr [rax], eax ; call 0x271b249e
0x00000000001bc172 : add byte ptr [rax], al ; jl 0x1bc185 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x00000000001a67ee : add byte ptr [rax], al ; jle 0x1a67e6 ; jmp qword ptr [rcx]
0x000000000017581e : add byte ptr [rax], al ; jmp 0x175828
0x00000000001972b6 : add byte ptr [rax], al ; jmp 0x1972c0
0x000000000005f80f : add byte ptr [rax], al ; jmp 0x5baf4
0x0000000000060850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x0000000000067496 : add byte ptr [rax], al ; jmp 0x63700
0x000000000007b5dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00000000000bf713 : add byte ptr [rax], al ; jmp 0xbb945
0x00000000000bf1e9 : add byte ptr [rax], al ; jmp 0xbf1b2
0x0000000000035325 : add byte ptr [rax], al ; jmp rax
0x000000000013221b : add byte ptr [rax], al ; jmp rcx
0x00000000000cd98f : add byte ptr [rax], al ; jne 0xcd960 ; ret
0x00000000000cdb9e : add byte ptr [rax], al ; jne 0xcdb81 ; xor eax, eax ; ret
0x000000000019cc8f : add byte ptr [rax], al ; jno 0x19cc94 ; jmp qword ptr [rdi]
0x000000000019c1be : add byte ptr [rax], al ; jnp 0x19c1c5 ; jmp qword ptr [rdx]
0x00000000001a2c4e : add byte ptr [rax], al ; jo 0x1a2c71 ; in eax, dx ; call rdx
0x00000000001a61ee : add byte ptr [rax], al ; jo 0x1a622b ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a92de : add byte ptr [rax], al ; jo 0x1a930b ; int1 ; jmp rcx
0x00000000001b0abf : add byte ptr [rax], al ; jo 0x1b0abc ; jmp qword ptr [rcx]
0x00000000001b2b42 : add byte ptr [rax], al ; jo 0x1b2b51 ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a6406 : add byte ptr [rax], al ; js 0x1a645d ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6ab6 : add byte ptr [rax], al ; js 0x1a6abe ; stc ; call qword ptr [rax]
0x00000000001a6bd6 : add byte ptr [rax], al ; js 0x1a6b90 ; out dx, al ; call qword ptr [rax]
0x00000000000cdbf5 : add byte ptr [rax], al ; js 0xcdc05 ; ret
0x00000000001bc6d4 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc67c : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012cb41 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf28 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000170b2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170a8d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170aae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170abe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170ace : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170ade : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170aee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170afe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170a3a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170b0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac43b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac59e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5be : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170a9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bcf4] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16dc23] ; ret
0x000000000012b0ae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a2e] ; ret
0x00000000001206ce : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a8025] ; call rax
0x00000000000450dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000001b0aa2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0025
0x00000000001a6ba2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fa2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa9 ; jmp qword ptr [rbx]
0x00000000001a7da2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000187f2e : add byte ptr [rax], al ; loopne 0x187f37 ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x00000000001a661e : add byte ptr [rax], al ; loopne 0x1a6694 ; out dx, al ; jmp rdx
0x00000000001bc688 : add byte ptr [rax], al ; loopne 0x1bc69b ; ret 0xb
0x00000000001bc6e0 : add byte ptr [rax], al ; loopne 0x1bc6f2 ; ret 0xa
0x00000000001acdaa : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x000000000019d4aa : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001aebaa : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001af9aa : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b05aa : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019749e : add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x00000000001b3baa : add byte ptr [rax], al ; mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001aafce : add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001a5ece : add byte ptr [rax], al ; mov al, 0x29 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a4d3e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000016afae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000166c7e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a15f6 : add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001a7ff6 : add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], bh ; jmp qword ptr [rbx]
0x000000000019c2f6 : add byte ptr [rax], al ; mov byte ptr [rax - 0x18], bh ; call qword ptr [rax]
0x00000000001a0ad6 : add byte ptr [rax], al ; mov byte ptr [rbx - 0x15], dl ; call rcx
0x0000000000168c4e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d58de : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9be : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a732e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfe : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168c8e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168c9e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168c7e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f3e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e9ee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d4e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d2e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012d93e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d92e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012d95e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d94e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f67c4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a5d3e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000008779e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000cd23e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cd25e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cd26e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cd47e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000cd959 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000bc36e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000001077ae : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000cda1e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011954a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003548c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b00e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e05e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000105f8a : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016e39e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d88c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013c11e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d720e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f5f2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007742e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000773fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007302e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003687e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38d802] ; ret
0x000000000006f7d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010cf7b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000001169cf : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116ba8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000071035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000132fea : add byte ptr [rax], al ; mov ebp, eax ; call 0x12f2c6
0x00000000001b9082 : add byte ptr [rax], al ; mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x00000000001a8682 : add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; call 0x131a76ea
0x00000000000a5d6e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001a9a82 : add byte ptr [rax], al ; mov edi, ds ; add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001aad82 : add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; call 0x221a9faf
0x000000000011865d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862a
0x000000000015b0be : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a5d5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00000000000711f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x0000000000071386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x0000000000075be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x0000000000076531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x0000000000075511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000103654 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001aa2b2 : add byte ptr [rax], al ; mov esp, 0x180000e7 ; out dx, eax ; int1 ; jmp rcx
0x00000000001adeb2 : add byte ptr [rax], al ; mov esp, 0x18000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b11b2 : add byte ptr [rax], al ; mov esp, 0x38000156 ; jnp 0x1b11b9 ; jmp qword ptr [rcx]
0x00000000001aedb2 : add byte ptr [rax], al ; mov esp, 0x78000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001ae1b2 : add byte ptr [rax], al ; mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a3db2 : add byte ptr [rax], al ; mov esp, 0xa8000082 ; in eax, dx ; call qword ptr [rax]
0x00000000001b09b2 : add byte ptr [rax], al ; mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56b2 : add byte ptr [rax], al ; mov esp, 0xc800019b ; ret
0x00000000001a37b2 : add byte ptr [rax], al ; mov esp, 0xe00007c ; ret 0xffe7
0x00000000001b2ab2 : add byte ptr [rax], al ; mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000004d64b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000001146c0 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001435b3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014356b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001437de : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000896d0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168cce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168cfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d3e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168cde : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168cbe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000094cce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013c4da : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6d9e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6dae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6d6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000762dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001322eb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d8cc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f5e5c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d89c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011931e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000003a5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013822b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000353e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000abf6e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000abf7e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000abf8e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000abf9e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000abfae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000abfbe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000abfce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000746b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000114996 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000106226 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c884e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140ee1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x000000000007cb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x00000000000fde0d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007df34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dc05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103116 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006abcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007cb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014105a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000084ba4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000ec2f4 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x0000000000072fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x0000000000143656 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x000000000005ae23 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x117127
0x0000000000103846 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000103712 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010368a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000010367b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000230ae : add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b7
0x000000000012e30b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000103ad0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000137345 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006cb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000088103 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000013a93e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a5d9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087bf0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d97d9 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd97ee
0x000000000007d9c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x000000000005be56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368767] ; call rax
0x0000000000050048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000088cfe : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087e60 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000879d2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088b74 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019df82 : add byte ptr [rax], al ; mov word ptr [rax + rax], fs ; add al, bh ; jno 0x19df7d ; call qword ptr [rax]
0x000000000019cf82 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001ac682 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x00000000001ade82 : add byte ptr [rax], al ; mov word ptr [rbx], fs ; add dword ptr [rax], eax ; call 0x221ad330
0x00000000001b0c82 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aef82 : add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000168c6e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c5e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001b2a82 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000a6d0e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009ea5e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9ce : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e0cde : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0cc8
0x00000000000a6dde : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001b099a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001ade9a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ab79a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x0000000000197266 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x00000000001aab9a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001aa99a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x00000000001b119a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000006c94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000007a61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b24e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b92e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b8be : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001aab9e : add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001ab42e : add byte ptr [rax], al ; nop ; call rbx
0x00000000001ab79e : add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x000000000011935d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019d41e : add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a63be : add byte ptr [rax], al ; nop ; out dx, al ; call qword ptr [rax]
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x000000000013bd29 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000013372a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c2db : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001aea02 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a4402 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x00000000001a6402 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; js 0x1a6461 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a8202 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001ab102 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001bbf02 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001a9926 : add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000019d3ee : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x0000000000035d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000001ab0d6 : add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000000fc5b8 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x0000000000107514 : add byte ptr [rax], al ; or eax, edi ; ret
0x00000000001bd1c6 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x0000000000197d66 : add byte ptr [rax], al ; out dx, al ; call rsp
0x0000000000034e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001a6ae6 : add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6cc6 : add byte ptr [rax], al ; pop rax ; fucomp st(6) ; jmp qword ptr [rsi]
0x000000000019e3c6 : add byte ptr [rax], al ; pop rax ; jp 0x19e3b9 ; jmp qword ptr [rcx]
0x000000000019cf86 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001073d7 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000054ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001095ea : add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a163a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000000aac3a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047a0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d55 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fc80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cd417 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000943e4 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001942ee : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a3c52 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x00000000001b9552 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a0b52 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b64
0x00000000001b1152 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a8652 : add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76ba
0x000000000019d552 : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019e552 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54d ; jmp rsp
0x00000000001aef52 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000194674 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a94be : add byte ptr [rax], al ; push rax ; xor cl, dh ; jmp qword ptr [rcx]
0x000000000011598e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b0c3a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019716e : add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x00000000001b074a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001af40f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8af : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb54a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a244a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x00000000001a2c4a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c58 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001a754a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001b294a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b4a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b51 ; jmp qword ptr [rcx]
0x0000000000197626 : add byte ptr [rax], al ; push rsp ; pushfq ; in eax, dx ; call rsp
0x00000000001a8c4a : add byte ptr [rax], al ; push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001acd92 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rcx] ; add al, bh ; fpatan ; jmp qword ptr [rcx]
0x00000000001abf92 : add byte ptr [rax], al ; pushfq ; add al, 1 ; add byte ptr [rax], cl ; call rcx
0x00000000001b3b92 : add byte ptr [rax], al ; pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001af992 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b9592 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b5f92 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001a7e92 : add byte ptr [rax], al ; pushfq ; ret
0x00000000001a0a1e : add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001aac2e : add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x00000000001765a6 : add byte ptr [rax], al ; ret 0
0x000000000017d51e : add byte ptr [rax], al ; ret 0x10
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x000000000001e716 : add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b6 : add byte ptr [rax], al ; ret 0x18c9
0x000000000001926e : add byte ptr [rax], al ; ret 0x18ca
0x000000000001a366 : add byte ptr [rax], al ; ret 0x18d2
0x000000000017f1ee : add byte ptr [rax], al ; ret 0x1d4
0x000000000017f986 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017e1f6 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017e6e6 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017cd1e : add byte ptr [rax], al ; ret 0xa
0x000000000000bbcf : add byte ptr [rax], al ; ret 0xc
0x000000000017d11e : add byte ptr [rax], al ; ret 0xd
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x00000000001807c2 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x00000000001811c2 : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x00000000001815c2 : add byte ptr [rax], al ; ret 9
0x000000000019f13e : add byte ptr [rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bbe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a738e : add byte ptr [rax], al ; rol byte ptr [rcx], 1 ; out dx, eax ; jmp rsi
0x000000000018803e : add byte ptr [rax], al ; rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x000000000019f1fe : add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001a7c3a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x000000000017cfc6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000019d4ae : add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d50e : add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001a381e : add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b0a12 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d12 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e12 : add byte ptr [rax], al ; sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b12 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b243e
0x00000000001b6612 : add byte ptr [rax], al ; sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d55
0x00000000001a7d12 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001ab312 : add byte ptr [rax], al ; sbb al, 0xf8 ; add byte ptr [rax], al ; call 0x111aa55b
0x00000000001aa2b6 : add byte ptr [rax], al ; sbb bh, ch ; int1 ; jmp rcx
0x00000000001a4406 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x000000000019d53a : add byte ptr [rax], al ; sbb r8b, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001a7c3e : add byte ptr [rax], al ; shl bl, 0xef ; call rsp
0x00000000000f5dc6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000194dd0 : add byte ptr [rax], al ; sti ; call rax
0x000000000019d122 : add byte ptr [rax], al ; sub al, 0x16 ; add byte ptr [rax], al ; call 0x1819ba3e
0x000000000019e522 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; cwde ; jl 0x19e51d ; jmp qword ptr [rsi]
0x00000000001b0922 : add byte ptr [rax], al ; sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1122 : add byte ptr [rax], al ; sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a22 : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a7c22 : add byte ptr [rax], al ; sub al, 0xc1 ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8622 : add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; call 0x131a768a
0x00000000001a9922 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000019bc22 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001bc022 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x00000000001aa1ee : add byte ptr [rax], al ; sub bl, 0xf1 ; call rdi
0x000000000019bc26 : add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001a8206 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001ab1c6 : add byte ptr [rax], al ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000019d946 : add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], al ; call qword ptr [rdx]
0x000000000016f15c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fccf0 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007c016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008b341 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fdae5 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000f68db : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000115085 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc373 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a91b6 : add byte ptr [rax], al ; test al, 0x1f ; int1 ; call qword ptr [rsi]
0x00000000001a3db6 : add byte ptr [rax], al ; test al, 0x4d ; in eax, dx ; call qword ptr [rax]
0x00000000001a4566 : add byte ptr [rax], al ; test al, 0x71 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a9a86 : add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001a7c26 : add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a4c6e : add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001af37a : add byte ptr [rax], al ; test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af388 ; hlt ; jmp qword ptr [rcx]
0x00000000001a587a : add byte ptr [rax], al ; test byte ptr [rbp + 0x1800000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000197476 : add byte ptr [rax], al ; test byte ptr [rbp - 0x13], cl ; jmp rsp
0x0000000000197f6e : add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x00000000001b057a : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001abd7a : add byte ptr [rax], al ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000001acd7a : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add dword ptr [rax], eax ; loopne 0x1acd64 ; jmp qword ptr [rcx]
0x0000000000197cae : add byte ptr [rax], al ; test byte ptr [rsi - 0x12], bl ; jmp rsp
0x00000000001af97a : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a643a : add byte ptr [rax], al ; test eax, 0x4f100000 ; out dx, al ; call qword ptr [rdx]
0x000000000012d7ef : add byte ptr [rax], al ; test eax, eax ; je 0x12d808 ; xor eax, eax ; ret
0x00000000000aebd3 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebf1
0x00000000000b14f4 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb1511
0x00000000000b3cab : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3cd1
0x000000000006b456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00000000001ab242 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd3c800 ; jmp rcx
0x000000000011582d : add byte ptr [rax], al ; test rax, rax ; je 0x115867 ; call rax
0x0000000000138ee2 : add byte ptr [rax], al ; test rax, rax ; jne 0x138ed8 ; pop rbx ; ret
0x00000000001ade9f : add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001bb13f : add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001a4d3a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000019cc8a : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc99 ; jmp qword ptr [rdi]
0x00000000001b0a8a : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000019680e : add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x0000000000196b56 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x196b49 ; call rsp
0x00000000001a738a : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1d00000 ; out dx, eax ; jmp rsi
0x00000000001b0d8a : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0e ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d8a : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000019df2a : add byte ptr [rax], al ; xor al, 0x24 ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000019f22a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001a90a2 : add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001b712a : add byte ptr [rax], al ; xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001a832a : add byte ptr [rax], al ; xor al, 0xc8 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001a942a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00000000001aac2a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000001ab42a : add byte ptr [rax], al ; xor al, 0xf9 ; add byte ptr [rax], al ; nop ; call rbx
0x00000000001a521e : add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a386e : add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x000000000019bbde : add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x00000000000fc38a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a832e : add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000000a9bae : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000011eaa6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143dc6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012e0fe : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0b6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c80c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039f06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x000000000003afbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000008d7b1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000004d39b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001035c6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000001035eb : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010360f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010362f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000019800e : add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x00000000001aee42 : add byte ptr [rax], al ; xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008eadd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001ab107 : add byte ptr [rax], bh ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001a8c37 : add byte ptr [rax], bh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a9a07 : add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x000000000019e557 : add byte ptr [rax], bh ; jge 0x19e548 ; jmp rsp
0x00000000001b0bc7 : add byte ptr [rax], bh ; jno 0x1b0bc4 ; jmp qword ptr [rcx]
0x00000000001b11b7 : add byte ptr [rax], bh ; jnp 0x1b11b4 ; jmp qword ptr [rcx]
0x00000000001aebc7 : add byte ptr [rax], bh ; jrcxz 0x1aebc3 ; jmp qword ptr [rcx]
0x00000000001ae107 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00000000001bb8e7 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001af827 : add byte ptr [rax], bh ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001ab247 : add byte ptr [rax], bh ; sub al, 0xf2 ; jmp rcx
0x00000000001a4c37 : add byte ptr [rax], bh ; test ch, ch ; call qword ptr [rdx]
0x00000000001b2c07 : add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0d17 : add byte ptr [rax], bl ; jae 0x1b0d14 ; call qword ptr [rsi]
0x00000000001b0ad7 : add byte ptr [rax], bl ; jo 0x1b0ad4 ; jmp qword ptr [rcx]
0x00000000001a7b67 : add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000001aa2b7 : add byte ptr [rax], bl ; out dx, eax ; int1 ; jmp rcx
0x00000000001a4407 : add byte ptr [rax], bl ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000194e3c : add byte ptr [rax], bl ; sti ; push rax ; sbb bl, bh ; jmp rax
0x00000000001adeb7 : add byte ptr [rax], bl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b1407 : add byte ptr [rax], bl ; xchg ebp, esi ; jmp rax
0x00000000001b29f7 : add byte ptr [rax], ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b9557 : add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001aef57 : add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b07f7 : add byte ptr [rax], ch ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001a45d7 : add byte ptr [rax], ch ; je 0x1a45cc ; call qword ptr [rcx]
0x00000000001aeaf7 : add byte ptr [rax], ch ; loop 0x1aeaf3 ; jmp qword ptr [rcx]
0x00000000001aed67 : add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b08f7 : add byte ptr [rax], ch ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a17 : add byte ptr [rax], ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab1c7 : add byte ptr [rax], ch ; sub dh, dl ; jmp qword ptr [rdi]
0x0000000000094424 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94431 ; ret
0x00000000001af4d7 : add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001ab0d7 : add byte ptr [rax], cl ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001abf97 : add byte ptr [rax], cl ; call rcx
0x00000000001b07c7 : add byte ptr [rax], cl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a6a27 : add byte ptr [rax], cl ; mov gs, esi ; call qword ptr [rcx]
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a9927 : add byte ptr [rax], cl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00000000001a6ba7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b2197 : add byte ptr [rax], cl ; ret 0xfff5
0x00000000001ae1b7 : add byte ptr [rax], cl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adaa7 : add byte ptr [rax], cl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a91e7 : add byte ptr [rax], cl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001b2c1f : add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019f9af : add byte ptr [rax], dh ; cli ; jmp qword ptr [rcx]
0x00000000001ae9ef : add byte ptr [rax], dh ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a8c4f : add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001abd7f : add byte ptr [rax], dh ; in eax, -0xe ; call qword ptr [rsi]
0x00000000001a386f : add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x00000000000a9baf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b0aef : add byte ptr [rax], dh ; jo 0x1b0aec ; jmp qword ptr [rcx]
0x00000000001aebaf : add byte ptr [rax], dh ; jrcxz 0x1aebab ; call qword ptr [rsi]
0x000000000001bd5f : add byte ptr [rax], dh ; ret
0x000000000000ea7f : add byte ptr [rax], dh ; ret 0xc
0x00000000001a116f : add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001156f0 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ad25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001b29df : add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae7cf : add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001af1ef : add byte ptr [rax], dl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001b06bf : add byte ptr [rax], dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c3f : add byte ptr [rax], dl ; jb 0x1b0c3c ; jmp qword ptr [rcx]
0x00000000001b0dbf : add byte ptr [rax], dl ; je 0x1b0dbc ; jmp qword ptr [rcx]
0x00000000001a790f : add byte ptr [rax], dl ; jg 0x1a7906 ; call qword ptr [rdi]
0x00000000001a163f : add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001a643f : add byte ptr [rax], dl ; out dx, al ; call qword ptr [rdx]
0x00000000001b09ff : add byte ptr [rax], dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b057f : add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001824f : add byte ptr [rax], dl ; ret
0x00000000000091b7 : add byte ptr [rax], dl ; ret 0x13
0x00000000001acbe8 : add byte ptr [rax], r8b ; add ah, dh ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001abac8 : add byte ptr [rax], r8b ; add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x0000000000074696 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x746a9 ; pop rbx ; ret
0x00000000000350d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d58dd : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9bd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009e9ed : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008779d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000886ad : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cea35 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000138eed : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007302d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a5d5d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x0000000000094ccd : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011931d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000114995 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106225 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a6fcd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a5d9d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000012c54d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a35 : add byte ptr [rax], r8b ; ret
0x0000000000143dc5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039f05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000abc6d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000c311d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000011598f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000019917f : add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x000000000017d117 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000012cb42 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000012cf29 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000001a386b : add byte ptr [rbp + rdi*2], dh ; add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x00000000001bb8ab : add byte ptr [rbp + rdi*8 + 0x54000001], dh ; clc ; call qword ptr [rax]
0x000000000017d3c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000039957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000047057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x000000000007742f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aac3b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000086837 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000084ca7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000001ad80b : add byte ptr [rbx + 0x66a00001], dl ; stc ; call qword ptr [rax]
0x00000000000773ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000001bd05b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x000000000017084a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019873f : add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x000000000019b61f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x000000000019af9f : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001a661b : add byte ptr [rbx + rbp*4], ah ; add byte ptr [rax], al ; loopne 0x1a6697 ; out dx, al ; jmp rdx
0x00000000001b6613 : add byte ptr [rbx + rbp*4], bl ; add dword ptr [rax], eax ; call 0xffffffffd21b5d54
0x00000000001a163b : add byte ptr [rbx + rbx*2], al ; add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x00000000001a8623 : add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; call 0x131a7689
0x00000000001b360b : add byte ptr [rbx + rdi*2], dl ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x0000000000194de4 : add byte ptr [rbx + rdi*8], al ; call rax
0x00000000001ace0b : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; jo 0x1acdf4 ; jmp qword ptr [rcx]
0x00000000001aee43 : add byte ptr [rbx + rsi + 1], cl ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001bae73 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x000000000005a37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005721e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x0000000000196130 : add byte ptr [rbx - 0x556f0004], ch ; cld ; jmp qword ptr [rax]
0x000000000003a724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000195b80 : add byte ptr [rbx - 4], dl ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000194eb4 : add byte ptr [rbx - 5], cl ; jmp rax
0x0000000000187fec : add byte ptr [rbx], al ; jmp qword ptr [rax]
0x00000000001bd1c3 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001b1e13 : add byte ptr [rbx], bl ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x0000000000055766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x000000000007ba06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000009e8c6 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000ffaef : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3a67 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000005e59b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bccf3 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000085548 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019811f : add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x00000000001a3c53 : add byte ptr [rcx + rax*4], bl ; add al, ch ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a7c3b : add byte ptr [rcx + rax*8], al ; add al, al ; jrcxz 0x1a7c3a ; call rsp
0x00000000001a7c23 : add byte ptr [rcx + rax*8], ch ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x000000000019bc23 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001a244b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax - 0xb], ah ; in al, dx ; call qword ptr [rsi]
0x00000000001a643b : add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], dl ; out dx, al ; call qword ptr [rdx]
0x00000000001a6403 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; js 0x1a6460 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b5433 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a942b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x000000000019d41b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d433 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x000000000008194f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000088cff : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087e61 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bf1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000879d3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000013805d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000081865 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x000000000012c991 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000001a4403 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x00000000001ab42b : add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; nop ; call rbx
0x00000000001af40b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001b0c3b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], dl ; jb 0x1b0c40 ; jmp qword ptr [rcx]
0x00000000001b0c6b : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0b : add byte ptr [rcx + rdx*2], dl ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001a4c6b : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax - 0x7c], al ; in eax, dx ; call qword ptr [rdx]
0x00000000001a8c4b : add byte ptr [rcx + rdx*8], dl ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001b2c33 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001a2c4b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001aac2b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000000ff2f8 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000040f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b2c4a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f244a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000064326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000822ce : add byte ptr [rcx - 0x7d], cl ; sub rax, 0x39480108 ; ret
0x00000000001b3b95 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bc5 : add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bad : add byte ptr [rcx], 0 ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000018ab8b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000bd0a4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000137631 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e741 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008b33f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000195454 : add byte ptr [rcx], al ; cld ; jmp rax
0x000000000013c10f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000001bcd2b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x000000000003bf27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007a38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x000000000003a08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d7b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000019ac8f : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x00000000001a8203 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001b2a23 : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a0b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001a6ab3 : add byte ptr [rdi + rbp*4 - 0x880000], bh ; stc ; call qword ptr [rax]
0x00000000001aea33 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; js 0x1aea21 ; hlt ; call qword ptr [rbx]
0x00000000001aea03 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a9a83 : add byte ptr [rdi + rbx*8 - 0x6a580000], cl ; int1 ; call qword ptr [rax]
0x00000000001a9a9b : add byte ptr [rdi + rbx*8 - 0x6a600000], ah ; int1 ; call qword ptr [rax]
0x00000000001a0a1b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001b09fb : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0a13 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001afa0b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001a521b : add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001ab243 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax], bh ; sub al, 0xf2 ; jmp rcx
0x000000000019f1fb : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f22b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000000cdb78 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196540 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x0000000000187bb8 : add byte ptr [rdi - 0xf], ch ; call qword ptr [rax]
0x00000000001a381b : add byte ptr [rdi*2 + 0x3fd00000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bd5f4 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001ae1fb : add byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000015a886 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000108a31 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ceb87 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000128dcf : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18ef : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009f0ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f0ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008eb4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005744b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000136e1b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e88 ; ret
0x000000000012c46b : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x00000000000d1bad : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd8ef : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000109573 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001abd7b : add byte ptr [rdx + rax - 0x1acfffff], al ; call qword ptr [rsi]
0x0000000000198f97 : add byte ptr [rdx + rax*2 - 0xb], dh ; jmp rsp
0x00000000001a3db3 : add byte ptr [rdx + rax*4 + 0x4da80000], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a7d13 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001aa543 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], ch ; int1 ; call rsi
0x000000000019e553 : add byte ptr [rdx + rbp], bl ; add byte ptr [rax], bh ; jge 0x19e54c ; jmp rsp
0x000000000019e523 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; cwde ; jl 0x19e51c ; jmp qword ptr [rsi]
0x00000000001b9553 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x000000000019d50b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x000000000017cd17 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000001b051b : add byte ptr [rdx + rcx*2], ah ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a754b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], ah ; out dx, eax ; call rax
0x00000000001bb54b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001b0d43 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d13 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001aed63 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000000beb62 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb77
0x000000000003c2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000001adcfb : add byte ptr [rdx], al ; add dword ptr [rax], eax ; loopne 0x1adc9f ; hlt ; jmp qword ptr [rcx]
0x000000000010eea7 : add byte ptr [rdx], al ; call rax
0x00000000001954b8 : add byte ptr [rdx], al ; cld ; jmp rax
0x0000000000187fc8 : add byte ptr [rdx], al ; jmp qword ptr [rax]
0x00000000001bccef : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000195554 : add byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000194e4c : add byte ptr [rip + 0x1e70fffb], cl ; sti ; call qword ptr [rax]
0x0000000000194e8c : add byte ptr [rip + 0x3a30fffb], bl ; sti ; call qword ptr [rax]
0x0000000000188050 : add byte ptr [rip + 0x510fff2], al ; jmp qword ptr [rax]
0x00000000000e0cc2 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001024af : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001bc173 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000cdabc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b291b : add byte ptr [rsi + rbp*2], ah ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a9923 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001b0923 : add byte ptr [rsi + rcx*2], ch ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b090b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a790b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001b1123 : add byte ptr [rsi + rdx*2], ch ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b110b : add byte ptr [rsi + rdx*2], dl ; add dword ptr [rax], eax ; nop ; jp 0x1b1110 ; jmp qword ptr [rcx]
0x000000000019d123 : add byte ptr [rsi + rdx], ch ; add byte ptr [rax], al ; call 0x1819ba3d
0x00000000001b712b : add byte ptr [rsi + rsi*4], dh ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001bb13b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001ab103 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000195074 : add byte ptr [rsi - 0x596f0003], ah ; std ; jmp qword ptr [rax]
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc9f2 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001b1f5b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f19 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001abf93 : add byte ptr [rsp + rax - 0xff7ffff], bl ; call rcx
0x00000000001972b7 : add byte ptr [rsp + rax*2 - 0x15], ah ; call rsp
0x00000000001befcf : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf33 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf03 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001ad7ab : add byte ptr [rsp + rbx - 0x785fffff], dh ; hlt ; call qword ptr [rax]
0x00000000001b0733 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001a7743 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c38 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x00000000001956cc : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000001aef53 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aef6b : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001baf63 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x00000000001adefb : add byte ptr [rsp], al ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019df2b : add byte ptr [rsp], dh ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x0000000000055ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001024ae : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000003613a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007a360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005c4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000137344 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000019f13d : add byte ptr ss:[rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x0000000000187f34 : add ch, bh ; int1 ; jmp qword ptr [rax]
0x0000000000187e08 : add ch, ch ; int1 ; call qword ptr [rax]
0x0000000000035f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000195314 : add cl, 0xfb ; call rax
0x000000000005715e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c9 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000123486 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x0000000000123494 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105de6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000074079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000105f6b : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000c0240 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a2aad : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009e927 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070caf : add cl, byte ptr [rax - 0x77] ; ret
0x000000000007c842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ffa12 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000004945c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000000899f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000cf267 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000089a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013be65 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000724b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000006bcf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000111405 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000817f0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000187d6c : add cl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000180217 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000000a9beb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001341d2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001341d1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000187e34 : add dh, ch ; int1 ; jmp qword ptr [rax]
0x0000000000187fe9 : add dh, dl ; inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x0000000000187fe1 : add dh, dl ; inc eax ; add dh, dl ; jmp rax
0x0000000000187fc9 : add dh, dl ; jmp qword ptr [rax]
0x0000000000187fe5 : add dh, dl ; jmp rax
0x0000000000187d8c : add dl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000187f99 : add dl, dh ; jmp qword ptr [rax]
0x0000000000187f95 : add dl, dh ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x00000000001bc470 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000000c01fc : add dword ptr [r8 - 0x73], ecx ; jl 0xc025b ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000001afcd5 : add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b00c5 : add dword ptr [r8], r8d ; cmc ; jmp rax
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077ccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d5988 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016afb1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d959f : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8fb3 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b7957 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f95d3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e1686 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f95c7 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d9083 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d3645 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b8dd2 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009f9c0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000048083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000004821b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x000000000010de35 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010de0f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c59d5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000101ca1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000ff923 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e5ccf : add dword ptr [rax + 0xf], ecx ; ret
0x000000000006432a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d5903 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000123eec : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00000000001a26fe : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000099555 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00000000001ac0b6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000011b426 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000d39b7 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d39b6 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105de2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000c01fd : add dword ptr [rax - 0x73], ecx ; jl 0xc025a ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000f0005 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf004b
0x00000000000a2a86 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166c12 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009e916 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000af761 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007eac9 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008b4d1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f0d1c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cf890 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1cb2 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00000000000793ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000d0440 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010e708 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e6de
0x0000000000123bd0 : add dword ptr [rax - 0x78], eax ; ja 0x123bdb ; ret
0x000000000016cbca : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000097428 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122608 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d8213 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000de2ff : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e9792 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e17c2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d37d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c7856 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d24e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000122938 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ceb8b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b710c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fb131 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e754a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d9244 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d7a3e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000007b5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00000000001a3c55 : add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x0000000000109994 : add dword ptr [rax], 1 ; ret
0x00000000001af1ee : add dword ptr [rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001ae7ce : add dword ptr [rax], eax ; adc bl, bl ; hlt ; call qword ptr [rbx]
0x00000000001b057e : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b09fe : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0c3e : add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001acdae : add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x0000000000199ab6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x000000000019879e : add dword ptr [rax], eax ; add al, 0x52 ; call rsp
0x000000000014199f : add dword ptr [rax], eax ; add al, ch ; cdq ; ret 0xffee
0x0000000000141f76 : add dword ptr [rax], eax ; add al, ch ; ret 0xeebc
0x00000000001af40e : add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000009e40a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001238dc : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x00000000001238e2 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x00000000001238d4 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dcba : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006f0bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006bd68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013c956 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000008767c : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000081568 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000001437dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000066504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3608 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000970ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000072b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084ab9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084be0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e02 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082bd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b69ca : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001458bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008de7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014bd6f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145811 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000007186a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001b0abe : add dword ptr [rax], eax ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000072090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018021a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f3ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017f1f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f1ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f982 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000005981e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012eb13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fde60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000103657 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00000000001728f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172908 ; neg eax ; ret
0x00000000000abc61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xabc71 ; neg eax ; ret
0x0000000000170847 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x170858 ; neg eax ; ret
0x00000000000bf1e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b4
0x00000000000cdbf3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcdc07 ; ret
0x0000000000132393 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132fe8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12f2c8
0x000000000004a09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d8ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000103844 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103710 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103688 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103ace : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006cb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d97d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd97f0
0x0000000000054d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ba63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008870a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006b46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000817f4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000e393a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000f8566 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010f66b : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006ce32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000087e5f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bef : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000879d1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000066558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ee1a3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000000000008638e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012abbd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000835d5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080511 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110301 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000110caf : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c2233 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079d28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000001af97e : add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ceb85 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000001238c9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x000000000012386e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238a9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x000000000009effa : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000dc59c : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000170935 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000170942 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000017094f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170907 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000170914 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000170921 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012de31 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000ffdad : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a66e : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b886 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019811e : add dword ptr [rax], eax ; and al, 0x81 ; out dx, eax ; jmp rsp
0x0000000000198e3e : add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x00000000001981d6 : add dword ptr [rax], eax ; and al, 0x94 ; out dx, eax ; call rsp
0x000000000019a8c6 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a096 : add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a0e6 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000001989de : add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x000000000019934e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x0000000000198286 : add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x00000000001b119e : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b294e : add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2c36 : add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a0e : add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001aced6 : add dword ptr [rax], eax ; call 0x131ac2bc
0x00000000001ba166 : add dword ptr [rax], eax ; call 0x131b9971
0x00000000001ade86 : add dword ptr [rax], eax ; call 0x221ad32c
0x00000000001af966 : add dword ptr [rax], eax ; call 0x221aee90
0x00000000001b0aa6 : add dword ptr [rax], eax ; call 0x221b0021
0x00000000001b2bd6 : add dword ptr [rax], eax ; call 0x271b2204
0x00000000001b2a86 : add dword ptr [rax], eax ; call 0x271b23aa
0x00000000001b2ab6 : add dword ptr [rax], eax ; call 0x271b23da
0x00000000001b2ae6 : add dword ptr [rax], eax ; call 0x271b240a
0x00000000001b2b16 : add dword ptr [rax], eax ; call 0x271b243a
0x00000000001b2b46 : add dword ptr [rax], eax ; call 0x271b246a
0x00000000001b2b76 : add dword ptr [rax], eax ; call 0x271b249a
0x00000000001acb96 : add dword ptr [rax], eax ; call 0x281abf5e
0x00000000001b6616 : add dword ptr [rax], eax ; call 0xffffffffd21b5d51
0x000000000019873e : add dword ptr [rax], eax ; call rsp
0x00000000001b29c6 : add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001acd96 : add dword ptr [rax], eax ; clc ; fpatan ; jmp qword ptr [rcx]
0x000000000019a5a6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000001b6466 : add dword ptr [rax], eax ; clc ; loope 0x1b646b ; call rsi
0x00000000001b09e6 : add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b9086 : add dword ptr [rax], eax ; clc ; ret
0x00000000001adbd6 : add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b00c6 : add dword ptr [rax], eax ; cmc ; jmp rax
0x000000000008e64a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001b34ce : add dword ptr [rax], eax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001aebc6 : add dword ptr [rax], eax ; cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b3b96 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11b6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0bc6 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b360e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000019865e : add dword ptr [rax], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000001b2966 : add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5f96 : add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b0bf6 : add dword ptr [rax], eax ; cwde ; jno 0x1b0bf5 ; jmp qword ptr [rcx]
0x00000000001b5436 : add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001b0986 : add dword ptr [rax], eax ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019996e : add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001aea06 : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b1156 : add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001afcd6 : add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000198eee : add dword ptr [rax], eax ; hlt ; and ch, dh ; jmp rsp
0x000000000019a0b6 : add dword ptr [rax], eax ; hlt ; jrcxz 0x19a0b9 ; inc esp ; ret 1
0x000000000019b99e : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000199c06 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x00000000001981a6 : add dword ptr [rax], eax ; hlt ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x000000000019a0c6 : add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x000000000019849e : add dword ptr [rax], eax ; in al, 0x46 ; int1 ; call rsp
0x00000000001aef6e : add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6e : add dword ptr [rax], eax ; jb 0x1b0c6d ; jmp qword ptr [rcx]
0x0000000000199616 : add dword ptr [rax], eax ; jbe 0x199616 ; jmp rsp
0x0000000000198f96 : add dword ptr [rax], eax ; je 0x198fe1 ; cmc ; jmp rsp
0x000000000019a11e : add dword ptr [rax], eax ; je 0x19a10f ; idiv edi ; cld ; ret
0x0000000000047056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00000000001ace0e : add dword ptr [rax], eax ; jo 0x1acdf1 ; jmp qword ptr [rcx]
0x00000000001ad7ee : add dword ptr [rax], eax ; jo 0x1ad77e ; hlt ; call qword ptr [rax]
0x00000000001ae5ce : add dword ptr [rax], eax ; jo 0x1ae5a8 ; hlt ; jmp rcx
0x00000000001bb2fe : add dword ptr [rax], eax ; jo 0x1bb29c ; sti ; jmp qword ptr [rdx]
0x00000000001adee6 : add dword ptr [rax], eax ; js 0x1ade8a ; hlt ; jmp qword ptr [rcx]
0x00000000001aea36 : add dword ptr [rax], eax ; js 0x1aea1e ; hlt ; call qword ptr [rbx]
0x00000000001aedb6 : add dword ptr [rax], eax ; js 0x1aeda6 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee46 : add dword ptr [rax], eax ; js 0x1aee37 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b36 : add dword ptr [rax], eax ; js 0x1b0baf ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fa6 : add dword ptr [rax], eax ; js 0x1b0fa5 ; jmp qword ptr [rbx]
0x00000000001baf66 : add dword ptr [rax], eax ; js 0x1baf07 ; sti ; jmp qword ptr [rdx]
0x00000000001b0736 : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001acd7e : add dword ptr [rax], eax ; loopne 0x1acd60 ; jmp qword ptr [rcx]
0x00000000001adbbe : add dword ptr [rax], eax ; loopne 0x1adb5a ; hlt ; jmp qword ptr [rcx]
0x00000000001adcfe : add dword ptr [rax], eax ; loopne 0x1adc9c ; hlt ; jmp qword ptr [rcx]
0x00000000001af37e : add dword ptr [rax], eax ; loopne 0x1af384 ; hlt ; jmp qword ptr [rcx]
0x00000000001b09ce : add dword ptr [rax], eax ; loopne 0x1b0a45 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d8e : add dword ptr [rax], eax ; loopne 0x1b0e0a ; cmc ; jmp qword ptr [rcx]
0x0000000000198d7e : add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x0000000000198f46 : add dword ptr [rax], eax ; mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019b856 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x000000000019a0fe : add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000001baade : add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b051e : add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b074e : add dword ptr [rax], eax ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b099e : add dword ptr [rax], eax ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0e : add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f6 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000009edec : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed31 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000198a2e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, bl ; jmp rsp
0x00000000001b2c7e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b9f8e : add dword ptr [rax], eax ; nop ; div bh ; call qword ptr [rdx]
0x00000000001b0b4e : add dword ptr [rax], eax ; nop ; jo 0x1b0b4d ; jmp qword ptr [rcx]
0x00000000001b110e : add dword ptr [rax], eax ; nop ; jp 0x1b110d ; jmp qword ptr [rcx]
0x00000000001adefe : add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001abf96 : add dword ptr [rax], eax ; or al, dh ; call rcx
0x00000000001b07c6 : add dword ptr [rax], eax ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af4d6 : add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001b2d46 : add dword ptr [rax], eax ; or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x000000000019a116 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x00000000001b090e : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a26 : add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b5966 : add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001aef86 : add dword ptr [rax], eax ; pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c86 : add dword ptr [rax], eax ; pop rax ; jb 0x1b0c85 ; jmp qword ptr [rcx]
0x00000000001b1e16 : add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b0926 : add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b05c6 : add dword ptr [rax], eax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ad9e6 : add dword ptr [rax], eax ; pop rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00000000001b05ae : add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000009ee6b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b291e : add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb54e : add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001b1ace : add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0ede : add dword ptr [rax], eax ; push rax ; jbe 0x1b0edd ; jmp qword ptr [rcx]
0x00000000001b11ce : add dword ptr [rax], eax ; push rax ; jnp 0x1b11cd ; jmp qword ptr [rcx]
0x00000000001ae1fe : add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adb5e : add dword ptr [rax], eax ; push rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019a646 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000198bd6 : add dword ptr [rax], eax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x0000000000199216 : add dword ptr [rax], eax ; push rsp ; or dh, dh ; jmp rsp
0x00000000001bad4e : add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b02ee : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001afa0e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000000898b2 : add dword ptr [rax], eax ; ret
0x00000000001b0cce : add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0ad6 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0d16 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001af996 : add dword ptr [rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad7ce : add dword ptr [rax], eax ; shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x00000000001b0a8e : add dword ptr [rax], eax ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aef56 : add dword ptr [rax], eax ; sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001aed66 : add dword ptr [rax], eax ; sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b07f6 : add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3bc6 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0a16 : add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b08f6 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af8d6 : add dword ptr [rax], eax ; sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af3f6 : add dword ptr [rax], eax ; sub dh, bh ; hlt ; jmp rdi
0x00000000001aeaf6 : add dword ptr [rax], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acdc6 : add dword ptr [rax], eax ; sub dl, bl ; jmp qword ptr [rcx]
0x000000000019a0a6 : add dword ptr [rax], eax ; test ah, bl ; idiv edi ; xchg eax, esp ; ret 1
0x00000000001b1126 : add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001ac686 : add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x00000000001ad766 : add dword ptr [rax], eax ; test al, 0x87 ; hlt ; call qword ptr [rsi]
0x00000000001bb066 : add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x000000000019b756 : add dword ptr [rax], eax ; test bl, al ; cli ; jmp rsp
0x000000000019a49e : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001992c6 : add dword ptr [rax], eax ; test byte ptr [rsi + rsi*8], dl ; call rsp
0x00000000001ad9ce : add dword ptr [rax], eax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019a3ae : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x00000000001989b6 : add dword ptr [rax], eax ; xchg eax, esp ; and dh, bl ; jmp rsp
0x000000000019850e : add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; int1 ; call rsp
0x000000000019a466 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b966 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a88e : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019ba6e : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000001ae9ee : add dword ptr [rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aebae : add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001b0aee : add dword ptr [rax], eax ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b3bae : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b712e : add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001af9ae : add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b405e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x00000000001abd7e : add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000001af15e : add dword ptr [rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x000000000008e4a1 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x00000000000d72ba : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000001bc444 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc441 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000132381 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000046987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000081e62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x000000000008de97 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ac49b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001238db : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000019811d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000082179 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000013c19f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000343b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000168a8e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000007e5fe : add dword ptr [rdi], ecx ; test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000835db : add dword ptr [rdi], ecx ; test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001096db : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a400e : add dword ptr [rdx + rax], -0xc ; ret
0x00000000000a2a15 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a71af : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000000a2a97 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001ae9ed : add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000343b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af97d : add dword ptr ds:[rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af965 : add dword ptr ds:[rax], eax ; call 0x221aee91
0x00000000001af995 : add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ad : add dword ptr ds:[rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000014d807 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000198eed : add dword ptr fs:[rax], eax ; hlt ; and ch, dh ; jmp rsp
0x00000000001af1ed : add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001af15d : add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x0000000000134a02 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000008e647 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bd1c5 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x0000000000140ee5 : add eax, 0x284526 ; call qword ptr [rax]
0x00000000001408d2 : add eax, 0x284b39 ; call qword ptr [rax]
0x00000000001289b2 : add eax, 0x29b631 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010a302 : add eax, 0x2b9b69 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000168b14 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fe4b6 : add eax, 0x2c72e5 ; mov rdx, rax ; jmp 0xfe456
0x0000000000084110 : add eax, 0x33fdcb ; mov qword ptr [rax], rdi ; ret
0x0000000000081a86 : add eax, 0x342345 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081861 : add eax, 0x34256a ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000084121 : add eax, 0x34269e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cc16 : add eax, 0x349b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002d9cd : add eax, 0x39641e ; mov qword ptr [rax], rdx ; ret
0x0000000000188051 : add eax, 0x510fff2 ; jmp qword ptr [rax]
0x000000000018997d : add eax, 0x528fff5 ; cmc ; jmp rax
0x000000000016b0c9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d39 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000189a01 : add eax, 0x590fff5 ; cmc ; jmp rax
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x0000000000180dbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000001bcd29 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000001953fd : add eax, 0x740fffc ; cld ; jmp qword ptr [rax]
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000a65fe : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000f842b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000a7ca2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x0000000000136dbe : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f6a37 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x0000000000040f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b1947 : add eax, dword ptr [rax] ; add al, ch ; int1 ; ret 0xfff7
0x00000000000b6075 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000007f083 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000007dabb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e0bcd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1db8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000122678 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000014564d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001481a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145671 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013305e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f7db : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001092d6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001157c7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010285c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000010403d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104094 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104114 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104214 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000abf93 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fdae3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000122154 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000aa9f7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x000000000013838f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000115095 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddc2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x000000000007e602 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080a39 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000125585 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000054f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed1 ; ret 0xe680
0x00000000000fdc27 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aac20 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac40 : add eax, dword ptr [rax] ; ret
0x0000000000168ad9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000168bd9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001a400a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x000000000013efc6 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008554a : add eax, ebp ; jmp rax
0x0000000000059823 : add eax, ecx ; jmp rax
0x000000000009f215 : add eax, edi ; add rax, r8 ; ret
0x000000000008e8f7 : add eax, edi ; add rax, rcx ; ret
0x00000000000c00b4 : add eax, edi ; jmp rax
0x000000000014a60b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a860 : add eax, edi ; sub rax, rdx ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000008b8b6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fdc25 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x00000000001bb825 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000001bc473 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc475 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc465 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00000000000d043e : add ebx, 1 ; mov rdx, rax ; jmp 0xd03e5
0x00000000001437e2 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000048471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000018c5b1 : add ebx, edi ; jmp rax
0x00000000000f5b4f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000011e148 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e469 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d5375 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000001118d4 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011f6c9 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096e31 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011ee29 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000096c5f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000724b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000010931d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012411c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000ff214 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009e93a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008392e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111dc7 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000143aa1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x00000000000a65c0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000009e914 : add edi, 1 ; mov rax, rdi ; ret
0x000000000009e925 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009e938 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009e945 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e958 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009e8e2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00000000000208f4 : add edi, ebp ; call rax
0x0000000000194de1 : add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001954bd : add edi, esp ; call rax
0x000000000009f118 : add edx, eax ; jl 0x9f187 ; add rax, rdi ; ret
0x000000000009f128 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f148 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f168 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000490b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000f6584 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187fc5 : add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000187fb9 : add edx, esi ; inc eax ; add edx, esi ; jmp rax
0x0000000000187fa9 : add edx, esi ; jmp rax
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000a9c49 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000137094 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137546 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x000000000009edea : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee69 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004606b : add esi, eax ; jmp qword ptr [rax]
0x00000000001bc445 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000035f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000018800d : add esi, edx ; call qword ptr [rax]
0x0000000000188005 : add esi, edx ; call rax
0x0000000000187fed : add esi, edx ; jmp qword ptr [rax]
0x0000000000188009 : add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x000000000006f8c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000008b33d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000004a803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000fc9ff : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x000000000007df30 : add esp, 0x80 ; mov rax, r8 ; ret
0x000000000008d85d : add esp, 8 ; jmp rax
0x000000000009ed7d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859bf : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a8cc : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000071fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000079158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000001b2e6c : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x0000000000195395 : add esp, edi ; call rax
0x0000000000195435 : add esp, edi ; jmp qword ptr [rax]
0x0000000000195455 : add esp, edi ; jmp rax
0x00000000001b0abd : add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0ad5 : add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0aed : add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198bd5 : add qword ptr [r8], rax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000001b09e5 : add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0985 : add qword ptr [rax], r8 ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0735 : add qword ptr [rax], r8 ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b09cd : add qword ptr [rax], r8 ; loopne 0x1b0a46 ; cmc ; jmp qword ptr [rcx]
0x00000000001b074d : add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b099d : add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b07c5 : add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b090d : add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0925 : add qword ptr [rax], r8 ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b07f5 : add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b057d : add qword ptr [rax], rax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000011f1cc : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b051d : add qword ptr [rax], rax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f5 : add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b05c5 : add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ad : add qword ptr [rax], rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000082178 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000168a8d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009e8cb : add r10, rax ; jmp r10
0x000000000014a230 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001466c4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009ea74 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019b30d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000143aa0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000014d3e2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000168b13 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000aa999 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abf40 : add rax, 1 ; ret
0x00000000000abf37 : add rax, 2 ; ret
0x00000000000abf50 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x0000000000033e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143db9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001436dd : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x0000000000085549 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009f217 : add rax, r8 ; ret
0x000000000009ea34 : add rax, r9 ; jmp rax
0x00000000001163b6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059822 : add rax, rcx ; jmp rax
0x000000000008e8f9 : add rax, rcx ; ret
0x000000000009f214 : add rax, rdi ; add rax, r8 ; ret
0x000000000008e8f6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000c00b3 : add rax, rdi ; jmp rax
0x000000000008d45a : add rax, rdi ; ret
0x000000000014a60a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a85f : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000008b8b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da50 : add rax, rsi ; jmp rax
0x00000000000d043d : add rbx, 1 ; mov rdx, rax ; jmp 0xd03e6
0x0000000000063888 : add rcx, rax ; jmp rcx
0x000000000009e913 : add rdi, 1 ; mov rax, rdi ; ret
0x000000000009e924 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009e937 : add rdi, 3 ; mov rax, rdi ; ret
0x00000000000208f3 : add rdi, rbp ; call rax
0x00000000000490b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009f117 : add rdx, rax ; jl 0x9f188 ; add rax, rdi ; ret
0x000000000009f116 : add rdx, rax ; jl 0x9f189 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000013bda2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x00000000000fc9fe : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a8cb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000109993 : add word ptr [rax], 1 ; ret
0x0000000000198f45 : add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x00000000001096da : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000195701 : and ah, bh ; call rax
0x00000000001952dc : and ah, bl ; sti ; call qword ptr [rax]
0x000000000019df85 : and al, 0 ; add al, bh ; jno 0x19df7a ; call qword ptr [rax]
0x00000000000a32d1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000019df2d : and al, 0 ; add byte ptr [rax], ah ; jno 0x19df22 ; call qword ptr [rcx]
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000f26d0 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c8b10 : and al, 0x10 ; call rax
0x000000000010eea2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000102df1 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010ed9e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081953 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012ca8a : and al, 0x18 ; call qword ptr [rax]
0x000000000002082c : and al, 0x18 ; call rax
0x000000000012c7b9 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e20 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009e8fd : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f0009 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0047
0x00000000000f0008 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0048
0x000000000019d41c : and al, 0x19 ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x000000000012c998 : and al, 0x1c ; call qword ptr [rax]
0x00000000000e5c87 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e3606 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000081631 : and al, 0x20 ; call qword ptr [rax]
0x00000000000819ad : and al, 0x20 ; call rax
0x00000000000accdb : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002436c : and al, 0x28 ; call rax
0x00000000000acbb0 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000084fb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000138064 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c7be : and al, 0x2c ; call qword ptr [rax]
0x000000000012cf2d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024d07 : and al, 0x30 ; call rax
0x0000000000038fe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013c2a9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000bb01e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000d5271 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000137e25 : and al, 0x3a ; call qword ptr [rax]
0x00000000000e1c6a : and al, 0x40 ; add rax, rdx ; jmp rax
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000127a71 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000845e3 : and al, 0x48 ; call rax
0x00000000001434dd : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00000000001b051c : and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1c : and al, 0x4f ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x000000000012d4fb : and al, 0x60 ; call rax
0x00000000000848eb : and al, 0x68 ; call rax
0x0000000000085c7b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000001b291c : and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001439ed : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f5cbd : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001a381c : and al, 0x7d ; add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x000000000003ea8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c12 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b67c3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b6f6b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000082176 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e0793 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001a521c : and al, 0x97 ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b5774 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0a9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000db210 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e06fb : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000db36c : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000001a661c : and al, 0xab ; add byte ptr [rax], al ; loopne 0x1a6696 ; out dx, al ; jmp rdx
0x000000000012fb07 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000008e648 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000f6aa7 : and al, 0xc ; call rax
0x00000000000e06e9 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000013c80b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000071868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001956cd : and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000000bf1e6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000001befd0 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000037304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a6708 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000012e667 : and al, 8 ; call qword ptr [rax]
0x000000000010eda3 : and al, 8 ; call rax
0x000000000013b46f : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006de25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013b5ac : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000cc39c : and al, 8 ; test rax, rax ; je 0xcc3ac ; call rax
0x00000000000cc39b : and al, 8 ; test rax, rax ; je 0xcc3ad ; call rax
0x00000000001952c4 : and al, ah ; sti ; jmp qword ptr [rax]
0x00000000001952f4 : and al, bl ; sti ; push rax ; fsincos ; call rax
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a6ce7 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000110a3d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000087a3b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010f42d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f44d
0x00000000001108c1 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000080249 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000004ae2c : and byte ptr [rax + 1], cl ; ret
0x000000000009f146 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000abc9f : and byte ptr [rax + rax], cl ; ret
0x0000000000194f80 : and byte ptr [rax - 0x5ecf0003], 0xfd ; jmp qword ptr [rax]
0x0000000000108a5b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bbe72 : and byte ptr [rax - 0x75], cl ; je 0xbbea3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000081f03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000f3246 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006dfe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008964b : and byte ptr [rax - 0x77], cl ; jae 0x89661 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b463 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c0601 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000141022 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000beb66 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000119605 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000789d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195b18 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x0000000000195700 : and byte ptr [rax], 0xfc ; call rax
0x00000000000ec980 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebae6 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00000000000cdadb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000230ac : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b9
0x00000000000aacbc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cdac0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001953b0 : and byte ptr [rax], al ; cld ; jmp rax
0x0000000000126a3a : and byte ptr [rax], al ; jmp 0x126a03
0x00000000000a7e1c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a9f67 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000d6d6c : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005a2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000004dc5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000195408 : and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x0000000000195e10 : and byte ptr [rcx - 0x786f0004], al ; cld ; jmp qword ptr [rax]
0x0000000000194eb0 : and byte ptr [rcx - 5], cl ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001adb75 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001adb5d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000f8270 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000195404 : and byte ptr [rcx], cl ; cld ; jmp qword ptr [rax]
0x00000000000c76e8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000175824 : and byte ptr [rdi - 0x15], ah ; call qword ptr [rax]
0x000000000019608c : and byte ptr [rdi - 4], dh ; inc eax ; pop rcx ; cld ; jmp rax
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a69d9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170910 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000194e34 : and byte ptr [rsi], dl ; sti ; call qword ptr [rax]
0x00000000000ff2e1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001adb5c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000abf32 : and ch, 0xf ; je 0xabf59 ; add rax, 2 ; ret
0x00000000001951ec : and ch, 0xfb ; call qword ptr [rax]
0x0000000000047254 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000001952c8 : and dl, ah ; sti ; jmp qword ptr [rax]
0x00000000000d2f37 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004fff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000185a42 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000042203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b0f2b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000012668a : and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000a680b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000185a41 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001073d4 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000035322 : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d398 : and eax, 0x30 ; xor esi, esi ; call rax
0x000000000013de52 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001adee5 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ade9d : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001adeb5 : and eax, dword ptr [rcx] ; add byte ptr [rax], bl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000168bb9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034852 : and eax, edx ; movq xmm0, rax ; ret
0x00000000000347e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000802cb : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f07eb : and ecx, dword ptr [rax - 0x75] ; je 0xf081c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012cc4e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000081a88 : and esi, dword ptr [rax + rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000195705 : and esp, edi ; jmp qword ptr [rax]
0x0000000000035f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000081a87 : and r14d, dword ptr [r8 + rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000036557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034851 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000000965aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008eb30 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008eb40 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb50 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008eb20 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008ea6f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008b8b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000968c0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008b7a2 : bsf rax, rdx ; ret
0x000000000009f211 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008d457 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0e0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f0f0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f100 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008d6db : bsr eax, esi ; add rax, rdi ; ret
0x000000000008d5e9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008d456 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008d6da : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008d5e8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000194f13 : call qword ptr [rax + 0x10fffb74]
0x0000000000194f1b : call qword ptr [rax + 0x10fffb77]
0x0000000000194f23 : call qword ptr [rax + 0x10fffb7a]
0x0000000000194f2b : call qword ptr [rax + 0x10fffb7d]
0x0000000000194f33 : call qword ptr [rax + 0x10fffb80]
0x0000000000194f3b : call qword ptr [rax + 0x10fffb83]
0x0000000000194f43 : call qword ptr [rax + 0x10fffb86]
0x0000000000195bd3 : call qword ptr [rax + 0x10fffc35]
0x0000000000195b97 : call qword ptr [rax + 0x10fffc36]
0x0000000000195bdb : call qword ptr [rax + 0x10fffc38]
0x0000000000195b9f : call qword ptr [rax + 0x10fffc39]
0x0000000000195be3 : call qword ptr [rax + 0x10fffc3b]
0x0000000000195ba7 : call qword ptr [rax + 0x10fffc3c]
0x0000000000195beb : call qword ptr [rax + 0x10fffc3e]
0x0000000000195baf : call qword ptr [rax + 0x10fffc3f]
0x0000000000195bf3 : call qword ptr [rax + 0x10fffc41]
0x0000000000195bb7 : call qword ptr [rax + 0x10fffc42]
0x0000000000195bfb : call qword ptr [rax + 0x10fffc44]
0x0000000000195bbf : call qword ptr [rax + 0x10fffc45]
0x0000000000195c03 : call qword ptr [rax + 0x10fffc47]
0x0000000000195bc7 : call qword ptr [rax + 0x10fffc48]
0x0000000000195b3b : call qword ptr [rax + 0x10fffc53]
0x0000000000195b33 : call qword ptr [rax + 0x10fffc54]
0x0000000000195b2b : call qword ptr [rax + 0x10fffc55]
0x0000000000195b23 : call qword ptr [rax + 0x10fffc56]
0x0000000000195b1b : call qword ptr [rax + 0x10fffc57]
0x0000000000195b53 : call qword ptr [rax + 0x10fffc58]
0x0000000000196513 : call qword ptr [rax + 0x10fffca4]
0x00000000001953ab : call qword ptr [rax + 0x20fffc0d]
0x0000000000195927 : call qword ptr [rax + 0x20fffc5f]
0x0000000000195c3b : call qword ptr [rax + 0x20fffc83]
0x0000000000195e13 : call qword ptr [rax + 0x20fffc87]
0x0000000000196133 : call qword ptr [rax + 0x20fffcaa]
0x0000000000195077 : call qword ptr [rax + 0x20fffda6]
0x0000000000073ed7 : call qword ptr [rax + 0x80]
0x00000000001956f3 : call qword ptr [rax - 0x1f0003e4]
0x000000000019569f : call qword ptr [rax - 0x1f0003eb]
0x0000000000195527 : call qword ptr [rax - 0x1f000410]
0x00000000001954d3 : call qword ptr [rax - 0x1f000417]
0x0000000000195347 : call qword ptr [rax - 0x1f00042e]
0x000000000019535b : call qword ptr [rax - 0x1f00043c]
0x0000000000194f03 : call qword ptr [rax - 0x1f000493]
0x0000000000189a03 : call qword ptr [rax - 0x1f000afb]
0x00000000000348fc : call qword ptr [rax - 0x3d]
0x00000000001953a7 : call qword ptr [rax - 0x6f0003f5]
0x000000000007f72e : call qword ptr [rax - 0x72b71077]
0x0000000000188053 : call qword ptr [rax]
0x0000000000187f67 : call rax
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001b5435 : cdq ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x000000000001f92b : cdq ; cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013362f : cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x0000000000128683 : cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fc1ae : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012411d : cdqe ; shr rax, 4 ; ret
0x0000000000061d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000000517ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00000000001ab315 : clc ; add byte ptr [rax], al ; call 0x111aa558
0x000000000005715d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c8 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000959e3 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001bb2fd : clc ; add dword ptr [rax], eax ; jo 0x1bb29d ; sti ; jmp qword ptr [rdx]
0x000000000009f216 : clc ; add rax, r8 ; ret
0x000000000008e8f8 : clc ; add rax, rcx ; ret
0x00000000001bb8b2 : clc ; call qword ptr [rax]
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016f9c9 : clc ; cmp rcx, rax ; jne 0x16f9fb ; xor eax, eax ; ret
0x000000000016f9c8 : clc ; cmp rcx, rax ; jne 0x16f9fc ; xor eax, eax ; ret
0x0000000000170809 : clc ; cmp rcx, rax ; jne 0x17083b ; xor eax, eax ; ret
0x0000000000170808 : clc ; cmp rcx, rax ; jne 0x17083c ; xor eax, eax ; ret
0x00000000000878d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078b0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fe5b3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000140072 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096e85 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fef2f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000105d95 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000019a49a : clc ; inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000c00b5 : clc ; jmp rax
0x000000000019df88 : clc ; jno 0x19df77 ; call qword ptr [rax]
0x0000000000187658 : clc ; out dx, al ; dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x00000000000484c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000072cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007b595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000011905b : clc ; sar rax, 6 ; ret
0x0000000000195541 : clc ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x000000000014a60c : clc ; sub rax, r8 ; ret
0x000000000014a861 : clc ; sub rax, rdx ; ret
0x00000000001a7b38 : clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001acdf4 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116c : cld ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001ab79d : cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x00000000000cda22 : cld ; add byte ptr [rax], al ; ret
0x000000000019800d : cld ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x00000000000aac1f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3f : cld ; add eax, dword ptr [rax] ; ret
0x00000000001b07f4 : cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f4 : cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195bd2 : cld ; call qword ptr [rax + 0x10fffc35]
0x0000000000195b96 : cld ; call qword ptr [rax + 0x10fffc36]
0x0000000000195bda : cld ; call qword ptr [rax + 0x10fffc38]
0x0000000000195b9e : cld ; call qword ptr [rax + 0x10fffc39]
0x0000000000195be2 : cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195ba6 : cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195bea : cld ; call qword ptr [rax + 0x10fffc3e]
0x0000000000195bae : cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195bf2 : cld ; call qword ptr [rax + 0x10fffc41]
0x0000000000195bb6 : cld ; call qword ptr [rax + 0x10fffc42]
0x0000000000195bfa : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195bbe : cld ; call qword ptr [rax + 0x10fffc45]
0x0000000000195c02 : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000195bc6 : cld ; call qword ptr [rax + 0x10fffc48]
0x0000000000195b3a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b32 : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b2a : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b22 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b1a : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b52 : cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000196512 : cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001953aa : cld ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195926 : cld ; call qword ptr [rax + 0x20fffc5f]
0x0000000000195c3a : cld ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e12 : cld ; call qword ptr [rax + 0x20fffc87]
0x0000000000196132 : cld ; call qword ptr [rax + 0x20fffcaa]
0x00000000001956f2 : cld ; call qword ptr [rax - 0x1f0003e4]
0x000000000019569e : cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001953a6 : cld ; call qword ptr [rax - 0x6f0003f5]
0x000000000019541e : cld ; call qword ptr [rax]
0x0000000000195396 : cld ; call rax
0x000000000014006e : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000019558a : cld ; inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x000000000019569a : cld ; inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001956ee : cld ; inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x0000000000195672 : cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001955da : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195646 : cld ; inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019564a : cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019542e : cld ; inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000195932 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019571a : cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x00000000001956ce : cld ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000001953fe : cld ; inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x00000000001956fe : cld ; inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956aa : cld ; inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000196316 : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019613e : cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195e1e : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c46 : cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195626 : cld ; inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x000000000019544e : cld ; inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001954b6 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001956ca : cld ; inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019653e : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195b7e : cld ; inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019612e : cld ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195552 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c36 : cld ; inc dword ptr [rax] ; test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x0000000000195dba : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x0000000000122ac9 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000019608e : cld ; inc eax ; pop rcx ; cld ; jmp rax
0x0000000000196336 : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000187f31 : cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000195b12 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001953ae : cld ; jmp qword ptr [rax]
0x00000000001953b2 : cld ; jmp rax
0x000000000009e901 : cld ; mov rax, rdi ; ret
0x00000000000b9fa8 : cld ; pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001a15f4 : cld ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x000000000019592e : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e1a : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196312 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000195b82 : cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597e : cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000196356 : cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196542 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195e4a : cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019549a : cld ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000019556e : cld ; push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x00000000001955f6 : cld ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195db6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x00000000001b0bf4 : cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf7 ; jmp qword ptr [rcx]
0x0000000000195392 : cld ; push rax ; add esp, edi ; call rax
0x0000000000196352 : cld ; push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000195b4e : cld ; push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x000000000019597a : cld ; push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195616 : cld ; push rax ; sub bh, ah ; call rax
0x000000000019567a : cld ; push rax ; sub edi, esp ; jmp rax
0x0000000000195572 : cld ; push rax ; sub esp, edi ; call rax
0x0000000000195b8e : cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000000bc5ed : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000c391a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000074078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000001bb54d : cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000000ff2e0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000018b062 : cli ; call qword ptr [rax]
0x000000000008810a : cli ; call rax
0x00000000000f6585 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003aa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000019b112 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b30a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b69a : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b674 ; cli ; jmp rsp
0x000000000019b15a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000018c152 : cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000018b056 : cli ; inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000018b05e : cli ; jmp rax
0x000000000019b29a : cli ; lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000018c15a : cli ; ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x000000000019b2ca : cli ; ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000013c4f2 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009e8e7 : cli ; mov rax, rdi ; ret
0x0000000000063b65 : cli ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceb0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000145f16 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb2c6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000195b10 : cli ; push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000018b05a : cli ; push rax ; sub dl, bh ; jmp rax
0x000000000008b7f9 : cli ; test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c8 : cli ; test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x0000000000182f0a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c18fe : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bc446 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc466 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x000000000014a488 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ab0ed : cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab045 : cmc ; add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000001ab0d5 : cmc ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000000abc97 : cmc ; add byte ptr [rax], al ; ret
0x000000000019a8c5 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x00000000001bb065 : cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x0000000000189a02 : cmc ; call qword ptr [rax - 0x1f000afb]
0x00000000001b07fa : cmc ; call qword ptr [rax]
0x0000000000189f9e : cmc ; call rax
0x0000000000189eba : cmc ; dec dword ptr [rax - 0x2c000a8c] ; jae 0x189ec1 ; call rbx
0x0000000000189eb6 : cmc ; dec dword ptr [rax - 0x77000a8c] ; je 0x189ebd ; call rbx
0x00000000001000b3 : cmc ; dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x00000000000f4261 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c95b1 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000198f42 : cmc ; inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000189abe : cmc ; jmp qword ptr [rax]
0x0000000000189982 : cmc ; jmp rax
0x0000000000101fb6 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000189aba : cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189ab6 : cmc ; lcall ptr [rbp + 6] ; cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189fba : cmc ; lcall ptr [rdi + rax*8 - 0xb] ; call qword ptr [rsi - 0x1d000a3d]
0x0000000000198fc2 : cmc ; ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x000000000018997a : cmc ; ljmp ptr [rax] ; add eax, 0x528fff5 ; cmc ; jmp rax
0x00000000001899fe : cmc ; ljmp ptr [rax] ; add eax, 0x590fff5 ; cmc ; jmp rax
0x0000000000189f9a : cmc ; push qword ptr [rax - 0x2f000a7f] ; mov dr0, ebp ; jmp rsi
0x0000000000195539 : cmc ; sti ; jmp qword ptr [rax]
0x000000000007d0b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000007d0b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a5c0 : cmovae rax, rdi ; ret
0x0000000000108a7b : cmovae rax, rsi ; ret
0x00000000000f690a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097968 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ac824 : cmove rax, rcx ; ret
0x000000000013c2c9 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f839 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x000000000003aa03 : cmovne rax, rbx ; pop rbx ; ret
0x000000000009748a : cmovne rax, rdi ; ret
0x0000000000140815 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089b02 : cmovne rax, rdx ; ret
0x0000000000100d76 : cmovne rbx, rax ; call 0xfcf96
0x000000000010ecd1 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000099bf3 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000aac56 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x0000000000195b9d : cmp ah, bh ; call qword ptr [rax + 0x10fffc39]
0x0000000000195bdd : cmp ah, bh ; call qword ptr [rax]
0x000000000019d434 : cmp al, 0x19 ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001434dc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000129055 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001aea34 : cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea20 ; hlt ; call qword ptr [rbx]
0x0000000000038fed : cmp al, 0x33 ; call rax
0x0000000000097355 : cmp al, 0x3d ; jne 0x9738f ; mov rax, rdi ; pop rbx ; ret
0x00000000001b0734 : cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b34 : cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bb1 ; cmc ; jmp qword ptr [rcx]
0x000000000019680c : cmp al, 0x62 ; add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x00000000001b2c34 : cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x000000000008bb10 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00000000001b5434 : cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a7b34 : cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000019a0e4 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019bb19 : cmp al, 0xe8 ; jmp rax
0x00000000001b34d1 : cmp al, 0xf6 ; call qword ptr [rax]
0x000000000019800c : cmp al, 0xfc ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x0000000000195ba9 : cmp al, 0xfc ; call qword ptr [rax]
0x00000000000ae376 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001705f3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf34 : cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000000a68f0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000713fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x000000000008103f : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; call 0x7d286
0x0000000000195430 : cmp bh, 0xfb ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000195be1 : cmp bh, ah ; call qword ptr [rax + 0x10fffc3b]
0x0000000000194e91 : cmp bh, bl ; call qword ptr [rax]
0x000000000004b82a : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f277e : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008f75f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000135896 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008eb67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bbe77 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000101ef8 : cmp byte ptr [rax + rax], ch ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da267 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d9901 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d9900 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102d04 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000e96eb : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000001123ff : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f41e6 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f07f0 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c1e0 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012ddfe : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001340c1 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e8b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff1c2 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016cbc8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008eb56 : cmp byte ptr [rax], ah ; ret
0x00000000000df0ea : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x0000000000045af7 : cmp byte ptr [rax], al ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000368bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036874 : cmp byte ptr [rax], al ; ret
0x000000000010f42f : cmp byte ptr [rax], bh ; je 0x10f45e ; mov rdx, rax ; jmp 0x10f44b
0x0000000000138e89 : cmp byte ptr [rax], bl ; je 0x138e94 ; ret
0x0000000000195550 : cmp byte ptr [rax], ch ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x000000000010f73a : cmp byte ptr [rax], cl ; je 0x10f762 ; mov rdx, r8 ; jmp 0x10f752
0x00000000000e7b8a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089b00 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009f106 : cmp byte ptr [rax], dh ; ret
0x000000000010f42e : cmp byte ptr [rax], dil ; je 0x10f45f ; mov rdx, rax ; jmp 0x10f44c
0x000000000008eb46 : cmp byte ptr [rax], dl ; ret
0x000000000008eb45 : cmp byte ptr [rax], r10b ; ret
0x000000000008eb55 : cmp byte ptr [rax], r12b ; ret
0x000000000009f105 : cmp byte ptr [rax], r14b ; ret
0x0000000000089aff : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001b3b98 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000016cbc9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a7d04 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000001b3610 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000000dc598 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000e0fc0 : cmp cl, 0x11 ; je 0xe1002 ; mov rdx, rax ; jmp 0xe0f66
0x0000000000080bfe : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000dab7f : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000133c57 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006eba0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000002db92 : cmp cl, byte ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x000000000003a6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000072aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x000000000009d0a3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000144103 : cmp dword ptr [rax - 8], eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000138e88 : cmp dword ptr [rax], 0x18 ; je 0x138e95 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x398faf], dl ; ret
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x0000000000035304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x0000000000035303 : cmp dword ptr [rax], r8d ; test eax, eax ; jne 0x35318 ; ret
0x000000000015a888 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001af40d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001af4d5 : cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x0000000000138e87 : cmp dword ptr fs:[rax], 0x18 ; je 0x138e96 ; ret
0x000000000002d9cf : cmp dword ptr fs:[rax], eax ; mov qword ptr [rax], rdx ; ret
0x00000000001206d2 : cmp eax, 0x2a8025 ; call rax
0x000000000011fe73 : cmp eax, 0x2a8828 ; call rax
0x0000000000195be9 : cmp eax, 0x3e90fffc ; cld ; call qword ptr [rax]
0x00000000000c00ae : cmp eax, 0xc8561 ; add rax, rdi ; jmp rax
0x00000000000484c4 : cmp eax, 0xff ; jne 0x484b9 ; mov rax, rdx ; ret
0x0000000000115b08 : cmp eax, 0xfffffe93 ; call rax
0x000000000019f6bd : cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x0000000000079615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x00000000001bd1c4 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000100d74 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfcf98
0x000000000007cc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000007b2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000101fb5 : cmp ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000c038f : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000174369 : cmp ebx, ebp ; jb 0x174363 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000048b7c : cmp ecx, 0xff ; jne 0x48b79 ; mov rax, rdx ; ret
0x00000000000f0e35 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012c465 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f4159 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004a5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195ba5 : cmp edi, esp ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195be5 : cmp edi, esp ; call qword ptr [rax]
0x000000000003aa00 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000ac821 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x0000000000195e4d : cmp esp, 0xfc7710ff ; call rax
0x0000000000195e49 : cmp esp, 0xfc8170ff ; call qword ptr [rax]
0x0000000000195e09 : cmp esp, 0xfc817aff ; jmp qword ptr [rax]
0x0000000000195e11 : cmp esp, 0xfc8790ff ; jmp qword ptr [rax]
0x00000000000796a1 : cmp esp, dword ptr [rax + 0xf480034] ; ret 0x8948
0x0000000000195ba1 : cmp esp, edi ; call qword ptr [rax]
0x0000000000072aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e0fbf : cmp r9b, 0x11 ; je 0xe1003 ; mov rdx, rax ; jmp 0xe0f67
0x000000000010567e : cmp rax, -0x1000 ; ja 0x105699 ; ret
0x000000000010733e : cmp rax, -0x1000 ; ja 0x107359 ; ret
0x0000000000107580 : cmp rax, -0x1000 ; ja 0x107598 ; ret
0x0000000000107632 : cmp rax, -0x1000 ; ja 0x107649 ; ret
0x000000000010766c : cmp rax, -0x1000 ; ja 0x107689 ; ret
0x000000000010821d : cmp rax, -0x1000 ; ja 0x108238 ; ret
0x000000000010839d : cmp rax, -0x1000 ; ja 0x1083b8 ; ret
0x0000000000108837 : cmp rax, -0x1000 ; ja 0x108848 ; ret
0x00000000001088d9 : cmp rax, -0x1000 ; ja 0x1088f0 ; ret
0x0000000000108989 : cmp rax, -0x1000 ; ja 0x1089a0 ; ret
0x00000000001157ea : cmp rax, -0x1000 ; ja 0x115801 ; ret
0x0000000000115897 : cmp rax, -0x1000 ; ja 0x1158c3 ; ret
0x000000000011755c : cmp rax, -0x1000 ; ja 0x117579 ; ret
0x000000000011760c : cmp rax, -0x1000 ; ja 0x117629 ; ret
0x0000000000035428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x0000000000035730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x000000000003579c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00000000000357e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00000000000bc437 : cmp rax, -0x1000 ; ja 0xbc451 ; ret
0x00000000000c83d7 : cmp rax, -0x1000 ; ja 0xc83f1 ; pop rbx ; ret
0x00000000000c9651 : cmp rax, -0x1000 ; ja 0xc9668 ; ret
0x00000000000cbfe0 : cmp rax, -0x1000 ; ja 0xcbff8 ; ret
0x00000000000cc07a : cmp rax, -0x1000 ; ja 0xcc090 ; ret
0x00000000000cc16b : cmp rax, -0x1000 ; ja 0xcc180 ; ret
0x00000000000cd2c3 : cmp rax, -0x1000 ; ja 0xcd2d8 ; ret
0x00000000000cd333 : cmp rax, -0x1000 ; ja 0xcd348 ; ret
0x00000000000cd587 : cmp rax, -0x1000 ; ja 0xcd598 ; ret
0x00000000000cd607 : cmp rax, -0x1000 ; ja 0xcd618 ; ret
0x00000000000f6bb5 : cmp rax, -0x1000 ; ja 0xf6bc9 ; ret
0x00000000000f6c04 : cmp rax, -0x1000 ; ja 0xf6c19 ; ret
0x00000000000f6c55 : cmp rax, -0x1000 ; ja 0xf6c69 ; ret
0x00000000000f6cad : cmp rax, -0x1000 ; ja 0xf6cc9 ; ret
0x00000000000f6d11 : cmp rax, -0x1000 ; ja 0xf6d29 ; ret
0x00000000000f6d6a : cmp rax, -0x1000 ; ja 0xf6d81 ; ret
0x00000000000f6f49 : cmp rax, -0x1000 ; ja 0xf6f61 ; ret
0x00000000000f7613 : cmp rax, -0x1000 ; ja 0xf7659 ; ret
0x00000000000fba92 : cmp rax, -0x1000 ; ja 0xfbaa9 ; ret
0x00000000000fbae6 : cmp rax, -0x1000 ; ja 0xfbaf9 ; ret
0x00000000000fc23a : cmp rax, -0x1000 ; ja 0xfc250 ; ret
0x00000000000fc75e : cmp rax, -0x1000 ; ja 0xfc778 ; ret
0x00000000000fd00a : cmp rax, -0x1000 ; ja 0xfd020 ; ret
0x00000000000fd0ba : cmp rax, -0x1000 ; ja 0xfd0d0 ; ret
0x00000000000fd165 : cmp rax, -0x1000 ; ja 0xfd178 ; ret
0x00000000000fd1d5 : cmp rax, -0x1000 ; ja 0xfd1e8 ; ret
0x00000000000fd256 : cmp rax, -0x1000 ; ja 0xfd268 ; ret
0x00000000000fd306 : cmp rax, -0x1000 ; ja 0xfd318 ; ret
0x00000000000fd856 : cmp rax, -0x1000 ; ja 0xfd869 ; ret
0x00000000000fef77 : cmp rax, -0x1000 ; ja 0xfef91 ; ret
0x00000000000ff00b : cmp rax, -0x1000 ; ja 0xff021 ; ret
0x00000000000ff0ab : cmp rax, -0x1000 ; ja 0xff0c1 ; ret
0x00000000000ff0ff : cmp rax, -0x1000 ; ja 0xff119 ; ret
0x0000000000101499 : cmp rax, -0xfff ; jae 0x1014aa ; ret
0x0000000000101707 : cmp rax, -0xfff ; jae 0x101718 ; ret
0x0000000000101737 : cmp rax, -0xfff ; jae 0x101748 ; ret
0x0000000000101770 : cmp rax, -0xfff ; jae 0x1017b1 ; ret
0x00000000001017c7 : cmp rax, -0xfff ; jae 0x1017d8 ; ret
0x00000000001017f7 : cmp rax, -0xfff ; jae 0x101808 ; ret
0x000000000010182a : cmp rax, -0xfff ; jae 0x10183b ; ret
0x0000000000101857 : cmp rax, -0xfff ; jae 0x101868 ; ret
0x0000000000101887 : cmp rax, -0xfff ; jae 0x101898 ; ret
0x00000000001018b7 : cmp rax, -0xfff ; jae 0x1018c8 ; ret
0x00000000001018e7 : cmp rax, -0xfff ; jae 0x1018f8 ; ret
0x0000000000105faa : cmp rax, -0xfff ; jae 0x105fbb ; ret
0x0000000000105fd7 : cmp rax, -0xfff ; jae 0x105fe8 ; ret
0x0000000000106007 : cmp rax, -0xfff ; jae 0x106018 ; ret
0x000000000010603a : cmp rax, -0xfff ; jae 0x10604b ; ret
0x000000000010606a : cmp rax, -0xfff ; jae 0x10607b ; ret
0x0000000000106097 : cmp rax, -0xfff ; jae 0x1060a8 ; ret
0x00000000001060ca : cmp rax, -0xfff ; jae 0x1060db ; ret
0x00000000001060f7 : cmp rax, -0xfff ; jae 0x106108 ; ret
0x0000000000106127 : cmp rax, -0xfff ; jae 0x106138 ; ret
0x000000000010615a : cmp rax, -0xfff ; jae 0x10616b ; ret
0x0000000000106187 : cmp rax, -0xfff ; jae 0x106198 ; ret
0x00000000001061ba : cmp rax, -0xfff ; jae 0x1061cb ; ret
0x00000000001072a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00000000001072d7 : cmp rax, -0xfff ; jae 0x1072e8 ; ret
0x0000000000107407 : cmp rax, -0xfff ; jae 0x107418 ; ret
0x0000000000107447 : cmp rax, -0xfff ; jae 0x107458 ; ret
0x0000000000107477 : cmp rax, -0xfff ; jae 0x107488 ; ret
0x00000000001074a7 : cmp rax, -0xfff ; jae 0x1074b8 ; ret
0x00000000001074d7 : cmp rax, -0xfff ; jae 0x1074e8 ; ret
0x00000000001076fa : cmp rax, -0xfff ; jae 0x10770b ; ret
0x0000000000107727 : cmp rax, -0xfff ; jae 0x107738 ; ret
0x0000000000107757 : cmp rax, -0xfff ; jae 0x107768 ; ret
0x0000000000107787 : cmp rax, -0xfff ; jae 0x107798 ; ret
0x00000000001077ca : cmp rax, -0xfff ; jae 0x1077db ; ret
0x00000000001077f7 : cmp rax, -0xfff ; jae 0x107808 ; ret
0x0000000000107827 : cmp rax, -0xfff ; jae 0x107838 ; ret
0x0000000000107857 : cmp rax, -0xfff ; jae 0x107868 ; ret
0x0000000000107887 : cmp rax, -0xfff ; jae 0x107898 ; ret
0x00000000001078b7 : cmp rax, -0xfff ; jae 0x1078c8 ; ret
0x00000000001078e7 : cmp rax, -0xfff ; jae 0x1078f8 ; ret
0x0000000000107917 : cmp rax, -0xfff ; jae 0x107928 ; ret
0x0000000000107947 : cmp rax, -0xfff ; jae 0x107958 ; ret
0x000000000010797a : cmp rax, -0xfff ; jae 0x10798b ; ret
0x00000000001079b3 : cmp rax, -0xfff ; jae 0x1079f7 ; ret
0x0000000000107a07 : cmp rax, -0xfff ; jae 0x107a18 ; ret
0x0000000000107a3a : cmp rax, -0xfff ; jae 0x107a4b ; ret
0x0000000000107a67 : cmp rax, -0xfff ; jae 0x107a78 ; ret
0x0000000000107a97 : cmp rax, -0xfff ; jae 0x107aa8 ; ret
0x0000000000107ac7 : cmp rax, -0xfff ; jae 0x107ad8 ; ret
0x0000000000107af7 : cmp rax, -0xfff ; jae 0x107b08 ; ret
0x0000000000107b27 : cmp rax, -0xfff ; jae 0x107b38 ; ret
0x0000000000107b5a : cmp rax, -0xfff ; jae 0x107b6b ; ret
0x0000000000107b8a : cmp rax, -0xfff ; jae 0x107b9b ; ret
0x0000000000107bb7 : cmp rax, -0xfff ; jae 0x107bc8 ; ret
0x0000000000107be7 : cmp rax, -0xfff ; jae 0x107bf8 ; ret
0x0000000000107c1a : cmp rax, -0xfff ; jae 0x107c2b ; ret
0x0000000000107c4a : cmp rax, -0xfff ; jae 0x107c5b ; ret
0x0000000000107c7a : cmp rax, -0xfff ; jae 0x107c8b ; ret
0x0000000000107cb3 : cmp rax, -0xfff ; jae 0x107cf7 ; ret
0x0000000000107d07 : cmp rax, -0xfff ; jae 0x107d18 ; ret
0x0000000000107d43 : cmp rax, -0xfff ; jae 0x107d87 ; ret
0x0000000000107d97 : cmp rax, -0xfff ; jae 0x107da8 ; ret
0x0000000000107dc7 : cmp rax, -0xfff ; jae 0x107dd8 ; ret
0x0000000000107e03 : cmp rax, -0xfff ; jae 0x107e47 ; ret
0x0000000000107e57 : cmp rax, -0xfff ; jae 0x107e68 ; ret
0x0000000000107e8a : cmp rax, -0xfff ; jae 0x107e9b ; ret
0x0000000000107eb7 : cmp rax, -0xfff ; jae 0x107ec8 ; ret
0x0000000000107ee7 : cmp rax, -0xfff ; jae 0x107ef8 ; ret
0x0000000000107f1a : cmp rax, -0xfff ; jae 0x107f2b ; ret
0x0000000000107f50 : cmp rax, -0xfff ; jae 0x107f91 ; ret
0x0000000000107fa7 : cmp rax, -0xfff ; jae 0x107fb8 ; ret
0x0000000000107fda : cmp rax, -0xfff ; jae 0x107feb ; ret
0x000000000010800a : cmp rax, -0xfff ; jae 0x10801b ; ret
0x0000000000108060 : cmp rax, -0xfff ; jae 0x1080a1 ; ret
0x00000000001080b7 : cmp rax, -0xfff ; jae 0x1080c8 ; ret
0x00000000001080f0 : cmp rax, -0xfff ; jae 0x108131 ; ret
0x0000000000108147 : cmp rax, -0xfff ; jae 0x108158 ; ret
0x0000000000108177 : cmp rax, -0xfff ; jae 0x108188 ; ret
0x00000000001081aa : cmp rax, -0xfff ; jae 0x1081bb ; ret
0x00000000001081d7 : cmp rax, -0xfff ; jae 0x1081e8 ; ret
0x00000000001082d3 : cmp rax, -0xfff ; jae 0x108317 ; ret
0x0000000000108330 : cmp rax, -0xfff ; jae 0x108371 ; ret
0x0000000000108450 : cmp rax, -0xfff ; jae 0x108491 ; ret
0x00000000001084b3 : cmp rax, -0xfff ; jae 0x1084f7 ; ret
0x000000000010850a : cmp rax, -0xfff ; jae 0x10851b ; ret
0x0000000000108537 : cmp rax, -0xfff ; jae 0x108548 ; ret
0x0000000000108567 : cmp rax, -0xfff ; jae 0x108578 ; ret
0x000000000010859a : cmp rax, -0xfff ; jae 0x1085ab ; ret
0x0000000000108af3 : cmp rax, -0xfff ; jae 0x108b37 ; ret
0x0000000000108b53 : cmp rax, -0xfff ; jae 0x108b97 ; ret
0x0000000000108ba7 : cmp rax, -0xfff ; jae 0x108bb8 ; ret
0x0000000000108bd7 : cmp rax, -0xfff ; jae 0x108be8 ; ret
0x0000000000108c07 : cmp rax, -0xfff ; jae 0x108c18 ; ret
0x0000000000108c37 : cmp rax, -0xfff ; jae 0x108c48 ; ret
0x0000000000108c6a : cmp rax, -0xfff ; jae 0x108c7b ; ret
0x0000000000108c9a : cmp rax, -0xfff ; jae 0x108cab ; ret
0x0000000000108cc7 : cmp rax, -0xfff ; jae 0x108cd8 ; ret
0x0000000000108cf7 : cmp rax, -0xfff ; jae 0x108d08 ; ret
0x0000000000108d27 : cmp rax, -0xfff ; jae 0x108d38 ; ret
0x0000000000108d57 : cmp rax, -0xfff ; jae 0x108d68 ; ret
0x000000000014065a : cmp rax, -0xfff ; jae 0x14066b ; ret
0x00000000001406aa : cmp rax, -0xfff ; jae 0x1406bb ; ret
0x0000000000035767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x0000000000035e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x000000000006b367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x000000000006b39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00000000000bc517 : cmp rax, -0xfff ; jae 0xbc528 ; ret
0x00000000000bf607 : cmp rax, -0xfff ; jae 0xbf618 ; ret
0x00000000000bf637 : cmp rax, -0xfff ; jae 0xbf648 ; ret
0x00000000000cbf37 : cmp rax, -0xfff ; jae 0xcbf48 ; ret
0x00000000000cc12a : cmp rax, -0xfff ; jae 0xcc13b ; ret
0x00000000000cc207 : cmp rax, -0xfff ; jae 0xcc218 ; ret
0x00000000000cc290 : cmp rax, -0xfff ; jae 0xcc2d1 ; ret
0x00000000000cc2f0 : cmp rax, -0xfff ; jae 0xcc331 ; ret
0x00000000000cc777 : cmp rax, -0xfff ; jae 0xcc788 ; ret
0x00000000000cd287 : cmp rax, -0xfff ; jae 0xcd298 ; ret
0x00000000000cd427 : cmp rax, -0xfff ; jae 0xcd438 ; ret
0x00000000000cd457 : cmp rax, -0xfff ; jae 0xcd468 ; ret
0x00000000000cd4b7 : cmp rax, -0xfff ; jae 0xcd4c8 ; ret
0x00000000000cd4e7 : cmp rax, -0xfff ; jae 0xcd4f8 ; ret
0x00000000000cd517 : cmp rax, -0xfff ; jae 0xcd528 ; ret
0x00000000000cd547 : cmp rax, -0xfff ; jae 0xcd558 ; ret
0x00000000000ea737 : cmp rax, -0xfff ; jae 0xea748 ; ret
0x00000000000ea767 : cmp rax, -0xfff ; jae 0xea778 ; ret
0x00000000000ea797 : cmp rax, -0xfff ; jae 0xea7a8 ; ret
0x00000000000ea7c7 : cmp rax, -0xfff ; jae 0xea7d8 ; ret
0x00000000000ea7f7 : cmp rax, -0xfff ; jae 0xea808 ; ret
0x00000000000ea827 : cmp rax, -0xfff ; jae 0xea838 ; ret
0x00000000000ea857 : cmp rax, -0xfff ; jae 0xea868 ; ret
0x00000000000ea887 : cmp rax, -0xfff ; jae 0xea898 ; ret
0x00000000000f5a43 : cmp rax, -0xfff ; jae 0xf5a87 ; ret
0x00000000000f5aa3 : cmp rax, -0xfff ; jae 0xf5ae7 ; ret
0x00000000000f6b17 : cmp rax, -0xfff ; jae 0xf6b28 ; ret
0x00000000000f6db7 : cmp rax, -0xfff ; jae 0xf6dc8 ; ret
0x00000000000f6de7 : cmp rax, -0xfff ; jae 0xf6df8 ; ret
0x00000000000f6eb7 : cmp rax, -0xfff ; jae 0xf6ec8 ; ret
0x00000000000f6ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00000000000f6fa7 : cmp rax, -0xfff ; jae 0xf6fb8 ; ret
0x00000000000f6fd7 : cmp rax, -0xfff ; jae 0xf6fe8 ; ret
0x00000000000f7010 : cmp rax, -0xfff ; jae 0xf7051 ; ret
0x00000000000f7230 : cmp rax, -0xfff ; jae 0xf7271 ; ret
0x00000000000f7290 : cmp rax, -0xfff ; jae 0xf72d1 ; ret
0x00000000000f72e7 : cmp rax, -0xfff ; jae 0xf72f8 ; ret
0x00000000000f7777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00000000000f78c0 : cmp rax, -0xfff ; jae 0xf7901 ; ret
0x00000000000f7917 : cmp rax, -0xfff ; jae 0xf7928 ; ret
0x00000000000f7947 : cmp rax, -0xfff ; jae 0xf7958 ; ret
0x00000000000f7977 : cmp rax, -0xfff ; jae 0xf7988 ; ret
0x00000000000f79a7 : cmp rax, -0xfff ; jae 0xf79b8 ; ret
0x00000000000f79d7 : cmp rax, -0xfff ; jae 0xf79e8 ; ret
0x00000000000f7a10 : cmp rax, -0xfff ; jae 0xf7a51 ; ret
0x00000000000f7a67 : cmp rax, -0xfff ; jae 0xf7a78 ; ret
0x00000000000f7a97 : cmp rax, -0xfff ; jae 0xf7aa8 ; ret
0x00000000000f82c7 : cmp rax, -0xfff ; jae 0xf82d8 ; ret
0x00000000000f82f7 : cmp rax, -0xfff ; jae 0xf8308 ; ret
0x00000000000f8327 : cmp rax, -0xfff ; jae 0xf8338 ; ret
0x00000000000f835a : cmp rax, -0xfff ; jae 0xf836b ; ret
0x00000000000f8937 : cmp rax, -0xfff ; jae 0xf8948 ; ret
0x00000000000f896a : cmp rax, -0xfff ; jae 0xf897b ; ret
0x00000000000f8997 : cmp rax, -0xfff ; jae 0xf89a8 ; ret
0x00000000000f89c7 : cmp rax, -0xfff ; jae 0xf89d8 ; ret
0x00000000000f89f7 : cmp rax, -0xfff ; jae 0xf8a08 ; ret
0x00000000000f8a2a : cmp rax, -0xfff ; jae 0xf8a3b ; ret
0x00000000000f8a57 : cmp rax, -0xfff ; jae 0xf8a68 ; ret
0x00000000000f8a87 : cmp rax, -0xfff ; jae 0xf8a98 ; ret
0x00000000000f8ab7 : cmp rax, -0xfff ; jae 0xf8ac8 ; ret
0x00000000000fb6f0 : cmp rax, -0xfff ; jae 0xfb731 ; ret
0x00000000000fba5a : cmp rax, -0xfff ; jae 0xfba6b ; ret
0x00000000000fc1d3 : cmp rax, -0xfff ; jae 0xfc217 ; ret
0x00000000000fc927 : cmp rax, -0xfff ; jae 0xfc938 ; ret
0x00000000000fc957 : cmp rax, -0xfff ; jae 0xfc968 ; ret
0x00000000000fc987 : cmp rax, -0xfff ; jae 0xfc998 ; ret
0x00000000000fcd27 : cmp rax, -0xfff ; jae 0xfcd38 ; ret
0x00000000000fcf07 : cmp rax, -0xfff ; jae 0xfcf18 ; ret
0x00000000000fcf40 : cmp rax, -0xfff ; jae 0xfcf81 ; ret
0x00000000000fcfa0 : cmp rax, -0xfff ; jae 0xfcfe1 ; ret
0x00000000000fd497 : cmp rax, -0xfff ; jae 0xfd4a8 ; ret
0x00000000000fd537 : cmp rax, -0xfff ; jae 0xfd548 ; ret
0x00000000000fd573 : cmp rax, -0xfff ; jae 0xfd5b7 ; ret
0x00000000000fd6c7 : cmp rax, -0xfff ; jae 0xfd6d8 ; ret
0x00000000000fd6f7 : cmp rax, -0xfff ; jae 0xfd708 ; ret
0x00000000000fd730 : cmp rax, -0xfff ; jae 0xfd771 ; ret
0x00000000000fd787 : cmp rax, -0xfff ; jae 0xfd798 ; ret
0x00000000000fd7c0 : cmp rax, -0xfff ; jae 0xfd801 ; ret
0x00000000000fd817 : cmp rax, -0xfff ; jae 0xfd828 ; ret
0x00000000000fdb87 : cmp rax, -0xfff ; jae 0xfdb98 ; ret
0x00000000000fdbb7 : cmp rax, -0xfff ; jae 0xfdbc8 ; ret
0x00000000000fdbe7 : cmp rax, -0xfff ; jae 0xfdbf8 ; ret
0x00000000000ff137 : cmp rax, -0xfff ; jae 0xff148 ; ret
0x00000000000ff167 : cmp rax, -0xfff ; jae 0xff178 ; ret
0x0000000000079614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x0000000000100d73 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfcf99
0x000000000007cc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x000000000011498a : cmp rax, rdx ; jb 0x114987 ; xor eax, eax ; ret
0x0000000000114989 : cmp rax, rdx ; jb 0x114988 ; xor eax, eax ; ret
0x00000000001382a0 : cmp rax, rdx ; je 0x1382b9 ; add rsp, 8 ; ret
0x0000000000048084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x000000000008873c : cmp rax, rdx ; jne 0x886f8 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007eed4 : cmp rbx, rax ; je 0x7eee7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174368 : cmp rbx, rbp ; jb 0x174364 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000016f9ca : cmp rcx, rax ; jne 0x16f9fa ; xor eax, eax ; ret
0x000000000017080a : cmp rcx, rax ; jne 0x17083a ; xor eax, eax ; ret
0x0000000000115361 : cmp rdx, rax ; jne 0x115346 ; ret
0x00000000000ac166 : cmp rdx, rax ; jne 0xac158 ; xor eax, eax ; ret
0x0000000000123495 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000014c487 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c787 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d687 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a61ed : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622c ; out dx, al ; jmp qword ptr [rcx]
0x0000000000082bd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008e3f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000199c05 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x00000000000310d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000810ce : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x0000000000147ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d087 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cd87 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195075 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000195079 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000000a32d0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000196111 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000195081 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x0000000000029c43 : cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00000000000bea23 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001355af : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b5775 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d534f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000db0aa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000852eb : cwde ; add rax, rdx ; jmp rax
0x0000000000187c94 : cwde ; mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x00000000000fc1af : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000001a6de8 : cwde ; out 0xee, al ; call qword ptr [rax]
0x0000000000134d44 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134d83 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000071384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x000000000012411e : cwde ; shr rax, 4 ; ret
0x00000000000a481a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2802 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049ab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00000000000886e5 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000081c54 : dec byte ptr [rax - 0x73] ; ret
0x0000000000081bd7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000087a37 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000008b6e9 : dec byte ptr [rax - 0x77] ; ret
0x0000000000074039 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a499a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2942 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e1ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000b0818 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d520c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f47d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000083ccd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000005e794 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001890ff : dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952f : dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000186a67 : dec dword ptr [rax + 0x5e] ; in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000063d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c613f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c337 : dec dword ptr [rax + 0x63] ; ret
0x00000000000edca9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000006c70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008d6d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000128ba4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008f834 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003aa02 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f6a3b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000878d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000142b56 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005ebf5 : dec dword ptr [rax + 1] ; ret
0x0000000000189ebb : dec dword ptr [rax - 0x2c000a8c] ; jae 0x189ec0 ; call rbx
0x00000000000360c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b686 : dec dword ptr [rax - 0x39] ; ret
0x00000000000ce0fc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000c023c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fc1ad : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fe5b4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ac9e6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000ec50d : dec dword ptr [rax - 0x73] ; mov word ptr [r8 - 0x77], cs ; ret
0x0000000000111e6d : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010f17e : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000102a8d : dec dword ptr [rax - 0x75] ; jge 0x102a97 ; call rbx
0x0000000000102d40 : dec dword ptr [rax - 0x75] ; jge 0x102d4a ; call rbx
0x00000000001048d8 : dec dword ptr [rax - 0x75] ; jge 0x1048e2 ; call rbx
0x00000000000ebc1e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x0000000000048da7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000081eef : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e240d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000007a8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000189eb7 : dec dword ptr [rax - 0x77000a8c] ; je 0x189ebc ; call rbx
0x00000000000b2d88 : dec dword ptr [rax - 0x77] ; call 0x4ccdc1a5
0x000000000008f4d8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f34a8 : dec dword ptr [rax - 0x77] ; fbstp dword ptr [rcx] ; fucomi st(0) ; cmc ; ret
0x00000000000fce8a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013bf4c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013a829 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b7fb3 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d1324 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret
0x0000000000133631 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x0000000000057fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000033edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x00000000001000b4 : dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x0000000000172b2a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000133639 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8ae
0x0000000000134190 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x00000000000fcce3 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fcdde : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000ea931 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f34f3 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005ebeb : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ed1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000e0a4e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x0000000000069a42 : dec dword ptr [rax - 0x77] ; ret 0x65e8
0x00000000000ce18c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011da3a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000140073 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000355b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096e86 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134d46 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000d0238 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006af20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x0000000000142e5f : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000593ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c9a4c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x0000000000134d85 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000095755 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dd010 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000008783e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009d24c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x000000000010136e : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012e7fa : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00000000000813fd : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bc3fd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115a9f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c634d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b34 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e0af5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010fb90 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000896c0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012afff : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fef30 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dcdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x0000000000105d96 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000108d9f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000959e0 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000140266 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000014006f : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f42f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d93c1 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000004f7b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d6525 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bf356 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000060ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000d02f1 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076a48 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a88c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000018824f : dec dword ptr [rax] ; sub dh, dl ; jmp qword ptr [rax + 0x20fff229]
0x00000000000f8ee3 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000138060 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x00000000000989bf : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f5ba2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea3f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000000711ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x000000000008162d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x000000000004b389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000005c60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f95c3 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000f3c85 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f533 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000eef5c : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000107512 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x0000000000046271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000074151 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000ffdf5 : dec dword ptr [rdi] ; test byte ptr [rax + rax + 0x58b0000], dl ; ret 0x2c73
0x0000000000068467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013dfc9 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000122dfe : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000001224ec : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x0000000000172160 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d7751 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000105e8f : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cdfed : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005c147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000018765b : dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x000000000019b113 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b30b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x00000000001968d3 : dec esp ; imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x000000000019b69b : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b673 ; cli ; jmp rsp
0x0000000000197263 : dec esp ; wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000dc5ad : div byte ptr [rax - 0xa] ; ret
0x000000000008b8c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000d1651 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x000000000012f911 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c71f6 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000018c5ac : enter -0x4ff, -1 ; fadd dword ptr [rcx] ; sti ; jmp rax
0x00000000000a4816 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a27fe : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a4996 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a293e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000195369 : enter -5, -0x30 ; leave ; sti ; jmp qword ptr [rax]
0x0000000000132257 : enter 0, 0 ; call rax
0x000000000012cf26 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000104a88 : enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000004a13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000185a3c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a93c5 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001a9345 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000116ba6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104f30 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000115b25 : fadd dword ptr [rax] ; leave ; ret
0x0000000000082f0f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00000000001bc443 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000018c5b0 : fadd dword ptr [rcx] ; sti ; jmp rax
0x000000000012b054 : fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x000000000019a0c4 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x00000000001728f8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000105df0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001aced4 : fcom qword ptr [rbx] ; add dword ptr [rax], eax ; call 0x131ac2be
0x0000000000188fe9 : fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x00000000001a7748 : fcomp st(1) ; cld ; call qword ptr [rax]
0x000000000006ac45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b2bd4 : fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6bd4 : fdiv qword ptr [rax - 0x4e880000] ; out dx, al ; call qword ptr [rax]
0x00000000001a8c39 : fdiv st(0) ; call qword ptr [rax]
0x00000000001952dd : fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000019527d : fdiv st(3), st(0) ; call rax
0x00000000001952c1 : fdivp st(3) ; jmp qword ptr [rax]
0x00000000001952e1 : fdivp st(3) ; jmp rax
0x00000000001af4d4 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001951f1 : fdivr st(3) ; call rax
0x00000000000cdebf : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000001952d5 : fdivr st(3) ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001951d1 : fdivr st(3) ; jmp rax
0x00000000001952f5 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000188e9d : fdivr st(3), st(0) ; call rax
0x00000000001ab0d4 : fdivr st(5), st(0) ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x000000000008427f : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000a56ce : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001b9555 : fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a990d : fiadd word ptr [rax] ; add al, dh ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a9925 : fiadd word ptr [rax] ; add byte ptr [rax], cl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x000000000012cb40 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000001434b5 : fidivr dword ptr [rax + 1] ; ret
0x000000000010039e : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000047278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x0000000000110e64 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000001a9a05 : fild word ptr [rax] ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x00000000000d347e : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145d36 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000137932 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011e14b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000af9f7 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008f502 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000012f3c6 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000869a0 : fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x82bd6
0x000000000013bf4f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000775ee : fimul word ptr [rax - 0x77] ; ret
0x00000000000afd64 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000843a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000013899e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000188cd8 : fistp qword ptr [rbx + rsi*8 - 0xc501201] ; call rax
0x000000000007221f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000013a8d1 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000007d882 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c59d8 : fisttp dword ptr [rax + 0x39] ; ret
0x0000000000174535 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000049011 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010951e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bad1a ; pop rbx ; ret
0x00000000000f3fa6 : fisttp dword ptr [rdi] ; test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20282
0x00000000001035e9 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000fa841 : fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000003e147 : fisttp qword ptr [rax + 0x29] ; ret
0x000000000008491e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x000000000014a742 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000af764 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b7e25 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008e71a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010e5f2 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010e5f5 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000033c4a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c8b0c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012a4d1 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010e688 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005905b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009f4a1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000174239 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e690 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000490af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000138c52 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000088107 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000001a94bd : fld dword ptr [rax] ; add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x00000000000f6583 : fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c924b : fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000048434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000087bbe : fmul dword ptr [rax + 0x21] ; ret
0x000000000007f0bf : fmul dword ptr [rax + 0x39] ; ret
0x00000000000886db : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00000000000b9e14 : fmul dword ptr [rax + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x0000000000099bf6 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000cf482 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000424d7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000130201 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c4a18
0x00000000000f4362 : fmul dword ptr [rax - 0x75] ; jl 0xf4393 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074e11 : fmul dword ptr [rax - 0x77] ; ret
0x00000000000bea29 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7fb6 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000047d63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000eb4a0 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c8a5b : fmul qword ptr [rax - 0x7d] ; ret
0x000000000010e685 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00000000001b0ad4 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0ad7 ; jmp qword ptr [rcx]
0x0000000000088f24 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f36 ; ret
0x0000000000088f23 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f37 ; ret
0x0000000000048062 : fnstsw dword ptr [rax + 1] ; ret
0x00000000001a7749 : frndint ; call qword ptr [rax]
0x0000000000195275 : fsincos ; call qword ptr [rax]
0x00000000001952f9 : fsincos ; call rax
0x0000000000195255 : fsincos ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000134d43 : fstp dword ptr [rax - 0x76b70011] ; ret 0x8d48
0x0000000000035778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001adbd4 : fsub qword ptr [rax] ; add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001afcd8 : fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x000000000006e50e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000007652d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x0000000000088372 : fucompi st(0) ; js 0x883f2 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f9078 : fucompi st(0) ; rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000008d70d : fxch st(0), st(7) ; or eax, dword ptr [rax] ; ret
0x000000000013efc8 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cdff0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001aafcd : hlt ; add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001baf65 : hlt ; add dword ptr [rax], eax ; js 0x1baf08 ; sti ; jmp qword ptr [rdx]
0x000000000019a88d : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x00000000001ae9ec : hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1ec : hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aec : hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000018956a : hlt ; call qword ptr [rax]
0x0000000000189102 : hlt ; call rax
0x00000000001ab0ec : hlt ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001a61ec : hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622d ; out dx, al ; jmp qword ptr [rcx]
0x00000000001890fe : hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952e : hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000189142 : hlt ; inc edi ; push rax ; hlt ; call rcx
0x00000000001b2bec : hlt ; jo 0x1b2bf7 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a67ec : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e8 ; jmp qword ptr [rcx]
0x00000000000e1c66 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000001892e6 : hlt ; push qword ptr [rdx] ; push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x00000000001890fa : hlt ; push rax ; hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952a : hlt ; push rax ; push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x00000000001ad7ec : hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x0000000000195535 : hlt ; sti ; call rax
0x000000000019996a : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000000b9faa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000127468 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000eaf07 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x00000000001968d5 : imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x00000000001a244d : imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x0000000000055f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00000000000bd336 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bd5ef : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000010eca5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000779c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084c61 : imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013a31d : imul ecx, dword ptr [rax - 0x75], 5 ; ret
0x000000000010ec45 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000896fa : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3eac : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000010eb7f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046ef1 : imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000ca683 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001960bd : imul edi, esp, 0xfc6b60ff ; jmp rax
0x000000000010ec75 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188e98 : imul edx, ecx, 0xdc70fff3 ; call rax
0x000000000004d3d2 : imul esi, dword ptr [rdi], 0 ; call rax
0x000000000013de51 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001baadc : in al, -0x11 ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001a92dc : in al, -0x29 ; add byte ptr [rax], al ; jo 0x1a930d ; int1 ; jmp rcx
0x000000000019a11c : in al, -0x3d ; add dword ptr [rax], eax ; je 0x19a111 ; idiv edi ; cld ; ret
0x000000000019b998 : in al, -0x3e ; std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000189568 : in al, -0x79 ; hlt ; call qword ptr [rax]
0x000000000019a0d9 : in al, -9 ; jmp qword ptr [rbx + rax*8]
0x0000000000172808 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000001077b1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000019bbdc : in al, 0 ; add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x00000000001b0edc : in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0edf ; jmp qword ptr [rcx]
0x000000000019b624 : in al, 0x57 ; add al, byte ptr [rax] ; ret
0x0000000000089a6c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000012568a : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000004ed8b : in al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000a6748 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000f12c1 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000039aa3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00000000001aa775 : in al, dx ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x0000000000064329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bd9f0 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084ab8 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b09e4 : in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee4 : in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001825fa : in al, dx ; call qword ptr [rax]
0x0000000000187df9 : in al, dx ; int1 ; call rax
0x0000000000187e05 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187df5 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187dcd : in al, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187dfd : in al, dx ; int1 ; jmp rax
0x0000000000187dc9 : in al, dx ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x00000000001a132a : in al, dx ; jmp rax
0x000000000013aa64 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012b051 : in al, dx ; or al, ch ; fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000045b5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000006ddd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082f47 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000146124 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001b2ae4 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240c
0x0000000000117882 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b1dc
0x00000000001a6ae4 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a66e4 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e0 ; jmp qword ptr [rdx]
0x000000000013ccd0 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001954d1 : in eax, -5 ; call qword ptr [rax - 0x1f000417]
0x00000000001951ed : in eax, -5 ; call qword ptr [rax]
0x000000000019522d : in eax, -5 ; call rax
0x00000000001aa0c5 : in eax, 0 ; add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x00000000000fe4b7 : in eax, 0x72 ; sub al, 0 ; mov rdx, rax ; jmp 0xfe455
0x00000000000abf33 : in eax, 0xf ; je 0xabf58 ; add rax, 2 ; ret
0x000000000007652f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00000000000af760 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000001a3dba : in eax, dx ; call qword ptr [rax]
0x0000000000186c5e : in eax, dx ; call rax
0x0000000000186a66 : in eax, dx ; dec dword ptr [rax + 0x5e] ; in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000186f9a : in eax, dx ; inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x0000000000187e09 : in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e31 : in eax, dx ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e29 : in eax, dx ; int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e0d : in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e2d : in eax, dx ; int1 ; jmp rax
0x00000000001a2a8a : in eax, dx ; jmp qword ptr [rax]
0x00000000000aa382 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000018695e : in eax, dx ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x000000000018695a : in eax, dx ; ljmp ptr [rax] ; test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x0000000000186c7e : in eax, dx ; ljmp ptr [rbx - 0x5400122e] ; shr ch, cl ; call rax
0x00000000000d9b14 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149c90 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188cdc : in eax, dx ; scasd eax, dword ptr [rdi] ; call rax
0x00000000001954e1 : in eax, dx ; sti ; call rax
0x00000000000aa4d2 : in eax, dx ; sub rax, 1 ; ret
0x00000000001951eb : inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x000000000019558b : inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x000000000019569b : inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001956ef : inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x0000000000195673 : inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001955db : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195647 : inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019564b : inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019542f : inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000194eab : inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000195933 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019571b : inc dword ptr [rax + 0x61] ; cld ; call rax
0x0000000000175837 : inc dword ptr [rax + 0x67] ; jmp 0x17583f
0x0000000000194eff : inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001956cf : inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195433 : inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x00000000001953ff : inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x0000000000194df3 : inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000198283 : inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019b15b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x0000000000195523 : inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x0000000000187dc7 : inc dword ptr [rax - 0x14] ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x000000000019522b : inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195227 : inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195257 : inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x00000000001952d7 : inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001956ff : inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956ab : inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000195533 : inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x00000000001954df : inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x0000000000195367 : inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195313 : inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194ecf : inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195343 : inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195357 : inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x000000000004b9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000187fa3 : inc dword ptr [rax - 0x4f000dff] ; add edx, esi ; jmp rax
0x000000000004dc96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x0000000000196317 : inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019613f : inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195083 : inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000018c153 : inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d1928 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000195e1f : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c47 : inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195627 : inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x00000000001951e7 : inc dword ptr [rax - 0x7f00041d] ; in eax, -5 ; call qword ptr [rax]
0x000000000019544f : inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194de3 : inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001abacd : inc dword ptr [rax] ; add al, dh ; ret
0x00000000001954b7 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f9638 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000061a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006084d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000b64eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001727ed : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016fa27 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000034efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000187fc7 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x000000000018804f : inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x0000000000187feb : inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x0000000000195453 : inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001956cb : inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195073 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000187e07 : inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x000000000019653f : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000194e4b : inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001193e0 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000187e33 : inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e7b : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb7 : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000195b7f : inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000187f6b : inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000000ff28c : inc dword ptr [rax] ; ret
0x0000000000194e3b : inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194e8b : inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000186f9b : inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x0000000000187f33 : inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000194eb3 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000019612f : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195553 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c37 : inc dword ptr [rax] ; test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x00000000000c59d2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000195dbb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000005a2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003338e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000003afba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x0000000000067491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00000000000edca5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b7e22 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000122aca : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001bc440 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000098f93 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e0f77 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019b99b : inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000187fe3 : inc eax ; add dh, dl ; jmp rax
0x0000000000187f93 : inc eax ; add dl, dh ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x0000000000187fbb : inc eax ; add edx, esi ; jmp rax
0x0000000000187df7 : inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e2b : inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e6b : inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e4b : inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187ba7 : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x000000000019608f : inc eax ; pop rcx ; cld ; jmp rax
0x0000000000195543 : inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000187f4b : inc eax ; std ; int1 ; jmp rax
0x00000000001954ef : inc eax ; sti ; call qword ptr [rax]
0x000000000018b057 : inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x0000000000196337 : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00000000001722d9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000791c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000001951ab : inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195187 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019518b : inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001951cb : inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000189143 : inc edi ; push rax ; hlt ; call rcx
0x000000000005cb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000019811b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000198f43 : inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019a49b : inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001468a4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012de30 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001af964 : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aee92
0x00000000001bb064 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001baf64 : insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf09 ; sti ; jmp qword ptr [rdx]
0x00000000000f34f0 : insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000001b2964 : insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5964 : insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x0000000000194f01 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001aed64 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000149510 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a2875 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x000000000014a410 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ce31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000196105 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x00000000001b07f9 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x0000000000104a87 : insd dword ptr [rdi], dx ; enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187b71 : insd dword ptr [rdi], dx ; int1 ; call qword ptr [rax]
0x00000000000f7b7f : insd dword ptr [rdi], dx ; jl 0xf7b7a ; dec dword ptr [rax - 0x77] ; ret
0x0000000000194f05 : insd dword ptr [rdi], dx ; sti ; jmp rax
0x00000000001aac2d : int1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x0000000000187b72 : int1 ; call qword ptr [rax]
0x0000000000187f66 : int1 ; call rax
0x0000000000102a8c : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102a98 ; call rbx
0x0000000000102d3f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4b ; call rbx
0x00000000001048d7 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e3 ; call rbx
0x0000000000187dc6 : int1 ; inc dword ptr [rax - 0x14] ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000187e06 : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e32 : int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e7a : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb6 : int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000187f6a : int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x0000000000187f32 : int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187df6 : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e2a : int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e6a : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e4a : int1 ; inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187ba6 : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187f4a : int1 ; inc eax ; std ; int1 ; jmp rax
0x0000000000187f7a : int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f62 : int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187d9e : int1 ; jmp qword ptr [rax - 0x3f000e16]
0x0000000000187d7e : int1 ; jmp qword ptr [rax - 0x3f000e17]
0x0000000000187d5e : int1 ; jmp qword ptr [rax - 0x3f000e18]
0x0000000000187d6e : int1 ; jmp qword ptr [rax]
0x0000000000187da6 : int1 ; jmp rax
0x0000000000187dca : int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000187e66 : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187df2 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187f76 : int1 ; push qword ptr [rax - 1] ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f5e : int1 ; push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187e02 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e76 : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb2 : int1 ; push rax ; outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x00000000001954ed : int1 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001979a5 : iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x00000000001048d5 : iretd ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e5 ; call rbx
0x0000000000119057 : ja 0x11906a ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000012b751 : ja 0x12b7a4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000013bf1f : ja 0x13bf42 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013c1a0 : ja 0x13c1d0 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000194f1d : ja 0x194f1c ; call qword ptr [rax]
0x0000000000195e51 : ja 0x195e51 ; call rax
0x0000000000196089 : ja 0x196089 ; jmp qword ptr [rax]
0x000000000019608d : ja 0x196091 ; inc eax ; pop rcx ; cld ; jmp rax
0x000000000002daad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000077c88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f85c : ja 0x9f875 ; mov rax, rdi ; ret
0x00000000000a7357 : ja 0xa7361 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7373 : ja 0xa7381 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c4 : ja 0xa73d7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a74a9 : ja 0xa74c1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a751f : ja 0xa753b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a75a1 : ja 0xa75c1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000aaf89 : ja 0xaafa9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000ac822 : ja 0xac832 ; cmove rax, rcx ; ret
0x000000000010f42c : jae 0x10f457 ; cmp byte ptr [rax], dil ; je 0x10f461 ; mov rdx, rax ; jmp 0x10f44e
0x00000000001750f7 : jae 0x175114 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000194f11 : jae 0x194f14 ; call qword ptr [rax + 0x10fffb74]
0x000000000019917d : jae 0x199186 ; add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x00000000001a7551 : jae 0x1a7544 ; call rax
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000079618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x00000000000cfc06 : jae 0xcfc1e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000f3fa9 : jae 0xf3fb2 ; add byte ptr [rax], al ; call 0x2027f
0x00000000000ffddb : jae 0xffe0f ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000115aaa : jb 0x115ad7 ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x000000000017436b : jb 0x174361 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000018746f : jb 0x187479 ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000a7cca : jb 0xa7cd9 ; add byte ptr [rax], al ; ret
0x00000000000fe4b8 : jb 0xfe4eb ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000013c19d : jbe 0x13c1b9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000194f19 : jbe 0x194f1c ; call qword ptr [rax + 0x10fffb77]
0x000000000002cdd2 : jbe 0x2cddf ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008eb66 : jbe 0x8eba5 ; add rax, rdi ; ret
0x000000000008eb76 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb86 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb96 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000001039b0 : je 0x1039c2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001053de : je 0x10547e ; call rax
0x0000000000105555 : je 0x105656 ; call rax
0x000000000010f431 : je 0x10f45c ; mov rdx, rax ; jmp 0x10f449
0x0000000000112b52 : je 0x112b32 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b26
0x00000000001132e1 : je 0x113309 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000115832 : je 0x115862 ; call rax
0x0000000000115cb2 : je 0x115ccf ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001161ed : je 0x116200 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x000000000011622e : je 0x116240 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x00000000001162dd : je 0x1162f0 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x000000000011631e : je 0x116330 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x0000000000116367 : je 0x116379 ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x000000000011fa67 : je 0x11fa73 ; mov rdi, rbx ; call rax
0x000000000011fd5f : je 0x11fd6b ; mov rdi, rbx ; call rax
0x000000000011fe6f : je 0x11fe83 ; lea rdi, qword ptr [rip + 0x2a8828] ; call rax
0x000000000012b843 : je 0x12b84f ; mov rdi, rsp ; call rax
0x000000000012b92e : je 0x12b93a ; mov rdi, rsp ; call rax
0x000000000012bfe9 : je 0x12c016 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012c1e4 : je 0x12c1f0 ; mov rdi, rbp ; call rax
0x000000000012d275 : je 0x12d281 ; mov rdi, r14 ; call rax
0x0000000000132252 : je 0x132266 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000132c0a : je 0x132c16 ; mov rdi, r12 ; call rax
0x0000000000132deb : je 0x132df9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013418b : je 0x1340af ; mov rdi, rbp ; call rax
0x00000000001340c5 : je 0x1340d1 ; mov rdi, r13 ; call rax
0x00000000001342b8 : je 0x1342c4 ; mov rdi, rbp ; call rax
0x00000000001344d8 : je 0x1344e4 ; mov rdi, rbp ; call rax
0x0000000000134fcf : je 0x134fdd ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013567b : je 0x135687 ; mov rdi, r12 ; call rax
0x00000000001359ef : je 0x1359fd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013827a : je 0x138208 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000138f6b : je 0x138f79 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139684 : je 0x139692 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b5ab : je 0x13b5d7 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b6ef : je 0x13b71b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b83d : je 0x13b868 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b8fd : je 0x13b928 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b9bd : je 0x13b9e8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013ba7d : je 0x13baa8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000014a741 : je 0x14a728 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000016f787 : je 0x16f791 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173f3e : je 0x173f49 ; call rax
0x0000000000194f15 : je 0x194f14 ; call qword ptr [rax]
0x000000000019b034 : je 0x19b06e ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x00000000001a386c : je 0x1a38f2 ; add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x00000000001a4c6c : je 0x1a4c06 ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001a5e6c : je 0x1a5e18 ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a7da0 : je 0x1a7da7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aef6c : je 0x1aefa9 ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6c : je 0x1b0cc6 ; add dword ptr [rax], eax ; jb 0x1b0c6f ; jmp qword ptr [rcx]
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002c37b : je 0x2c381 ; call rax
0x000000000006db93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006ee75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d9bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x000000000007e074 : je 0x7e07a ; call rax
0x00000000000845e2 : je 0x8460b ; call rax
0x0000000000084fb2 : je 0x84fde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000008556b : je 0x85571 ; call rax
0x00000000000879ce : je 0x87b59 ; mov rsi, r14 ; call rax
0x0000000000088375 : je 0x88375 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000898ab : je 0x898bd ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x0000000000089a98 : je 0x89aaa ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x000000000008b18b : je 0x8b19d ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008b298 : je 0x8b2aa ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x000000000008b7fd : je 0x8b815 ; bsf rax, rdx ; ret
0x000000000008b7fd : je 0x8b816 ; bsf rax, rdx ; ret
0x000000000008b79c : je 0x8b829 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f5 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f6 ; bsf rax, rdx ; ret
0x000000000008b95c : je 0x8ba09 ; bsf rax, rdx ; ret
0x000000000008bb0b : je 0x8bb1d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x000000000008d3eb : je 0x8d3fd ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008d708 : je 0x8d71a ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008da98 : je 0x8daaa ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008ebd5 : je 0x8ebe8 ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008f1e7 : je 0x8f1f9 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008f34d : je 0x8f360 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000008f38e : je 0x8f3a0 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008f87b : je 0x8f88d ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008f99b : je 0x8f9ad ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000009440d : je 0x94420 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094450 : je 0x94462 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00000000000967a1 : je 0x967b9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000009f1ac : je 0x9f188 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000abcdf : je 0xabcd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abf35 : je 0xabf56 ; add rax, 2 ; ret
0x00000000000ac566 : je 0xac5d6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac81f : je 0xac83c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ac875 : je 0xac888 ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000aca38 : je 0xac9ed ; mov rax, rbx ; pop rbx ; ret
0x00000000000bbe75 : je 0xbbea0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000c3193 : je 0xc31ea ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c7590 : je 0xc75ae ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc3a1 : je 0xcc3a7 ; call rax
0x00000000000cc583 : je 0xcc58c ; call rax
0x00000000000d9242 : je 0xd9251 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000e0fc3 : je 0xe0fff ; mov rdx, rax ; jmp 0xe0f63
0x00000000000f07ee : je 0xf0819 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f41e4 : je 0xf420f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000ff213 : je 0xff21e ; mov qword ptr [rax], rdx ; ret
0x000000000010039f : jg 0x1003a9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000194f31 : jg 0x194f34 ; call qword ptr [rax + 0x10fffb80]
0x00000000000347bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000003acb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000008da9d : jg 0x8da70 ; or eax, dword ptr [rax] ; ret
0x000000000008f427 : jg 0x8f440 ; jne 0x8f417 ; mov rax, rdi ; ret
0x00000000000a7496 : jg 0xa74a5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a74a6 : jg 0xa74b8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74d9 : jg 0xa74eb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74f9 : jg 0xa750b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a82d6 : jg 0xa82e5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a82e9 : jg 0xa82fb ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8329 : jg 0xa833b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8349 : jg 0xa835b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a8736 : jg 0xa876e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a8735 : jg 0xa87bd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a9f3f : jg 0xa9fa0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9fb5 : jg 0xaa03e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000beb60 : jg 0xbeb9b ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb79
0x00000000000cd95c : jg 0xcd962 ; add byte ptr [rax], al ; ret
0x00000000000cd9ab : jg 0xcd9b4 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cd9ab : jg 0xcd9b5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e1fc7 : jg 0xe1fdc ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000103196 : jge 0x103161 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000132def : jge 0x132e03 ; call rax
0x0000000000138f6f : jge 0x138f83 ; call rax
0x0000000000139688 : jge 0x13969c ; call rax
0x0000000000194f2d : jge 0x194f2c ; call qword ptr [rax]
0x000000000019601d : jge 0x19601d ; jmp rax
0x000000000019605d : jge 0x19605d ; call rax
0x00000000001a386d : jge 0x1a3875 ; add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x000000000009f08f : jge 0x9f097 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ff2f6 : jge 0xff32c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000102df0 : jl 0x102e1e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000128629 : jl 0x128654 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000001336b7 : jl 0x1336e2 ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000194f29 : jl 0x194f2c ; call qword ptr [rax + 0x10fffb7d]
0x0000000000196025 : jl 0x196025 ; jmp rax
0x0000000000196065 : jl 0x196065 ; call rax
0x0000000000198e3c : jl 0x198ea2 ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x000000000019a0a4 : jl 0x19a071 ; add dword ptr [rax], eax ; test ah, bl ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019ab5c : jl 0x19ab73 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b884 : jl 0x19b892 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019ba6c : jl 0x19ba3e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000001a2874 : jl 0x1a28ea ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001a7e90 : jl 0x1a7e97 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000001aa774 : jl 0x1aa769 ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x00000000001b2b74 : jl 0x1b2bed ; add dword ptr [rax], eax ; call 0x271b249c
0x00000000001bc174 : jl 0x1bc183 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000517b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000072a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000879d0 : jl 0x879da ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000000898b0 : jl 0x8992d ; add dword ptr [rax], eax ; ret
0x000000000009f11a : jl 0x9f185 ; add rax, rdi ; ret
0x000000000009f12a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f14a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f16a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000c0200 : jl 0xc0257 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c45e9 : jl 0xc4614 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c92b0 : jl 0xc92de ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e1c69 : jl 0xe1c95 ; add rax, rdx ; jmp rax
0x00000000000e3180 : jl 0xe31ab ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000f4365 : jl 0xf4390 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f7b80 : jl 0xf7b79 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fb12f : jl 0xfb137 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000ff412 : jl 0xff448 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000014a6d6 : jle 0x14a5f1 ; movsxd rax, ecx ; ret
0x0000000000196055 : jle 0x196055 ; jmp rax
0x000000000005c4f6 : jle 0x5c577 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x000000000008b79e : jle 0x8b7a7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b79e : jle 0x8b7a8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000cda09 : jle 0xcda0f ; add byte ptr [rax], al ; ret
0x0000000000188253 : jmp qword ptr [rax + 0x20fff229]
0x0000000000195b13 : jmp qword ptr [rax + 0x20fffc58]
0x00000000001968a3 : jmp qword ptr [rax + rbp*2 + 0x5d340000]
0x0000000000187f7b : jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f63 : jmp qword ptr [rax - 0x2f000e02]
0x0000000000187d9f : jmp qword ptr [rax - 0x3f000e16]
0x0000000000187d7f : jmp qword ptr [rax - 0x3f000e17]
0x0000000000187d5f : jmp qword ptr [rax - 0x3f000e18]
0x0000000000187b23 : jmp qword ptr [rax - 0x47000f32]
0x000000000004606e : jmp qword ptr [rax]
0x000000000019a0db : jmp qword ptr [rbx + rax*8]
0x000000000019a09b : jmp qword ptr [rdx + rax*8 + 1]
0x00000000000c00b6 : jmp rax
0x0000000000115b04 : jne 0x115aef ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000116534 : jne 0x1164de ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000117b76 : jne 0x117b2a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000013aa63 : jne 0x13aa5a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000170955 : jne 0x1708e6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170927 : jne 0x1708e6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170926 : jne 0x1708e7 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001a75e1 : jne 0x1a75d4 ; jmp qword ptr [rax]
0x0000000000047058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x00000000000484c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x0000000000048b7f : jne 0x48b76 ; mov rax, rdx ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000006acc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000089cfb : jne 0x89d0d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008b8c3 : jne 0x8b8ce ; xor rax, rax ; ret
0x000000000008bb57 : jne 0x8bb69 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008eb19 : jne 0x8eb75 ; xor rax, rax ; ret
0x000000000008ead9 : jne 0x8eb99 ; xor rax, rax ; ret
0x000000000008ebc1 : jne 0x8ebd4 ; lea rax, qword ptr [rip + 0x26] ; ret
0x000000000008f4d3 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f429 : jne 0x8f415 ; mov rax, rdi ; ret
0x000000000008f9e7 : jne 0x8f9f9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008fa4a : jne 0x8fa5c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000091cd7 : jne 0x91ce9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091d3a : jne 0x91d4c ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009443c : jne 0x9444f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x0000000000096a46 : jne 0x96a31 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097357 : jne 0x9738d ; mov rax, rdi ; pop rbx ; ret
0x00000000000aa381 : jne 0xaa376 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aa4d1 : jne 0xaa4c6 ; sub rax, 1 ; ret
0x00000000000abc91 : jne 0xabca4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000000ac54b : jne 0xac5a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac738 : jne 0xac716 ; mov rax, rdi ; ret
0x00000000000ac861 : jne 0xac874 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000ada8b : jne 0xada46 ; mov rax, rdx ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000cdb9c : jne 0xcdc18 ; add byte ptr [rax], al ; jne 0xcdb83 ; xor eax, eax ; ret
0x00000000000d186e : jne 0xd1860 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016f27e : jno 0x16f28d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019df89 : jno 0x19df76 ; call qword ptr [rax]
0x00000000001a2c4d : jno 0x1a2c55 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001b2c05 : jno 0x1b2c0e ; add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c1d : jno 0x1b2c26 ; add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008f199 : jno 0x8f1ad ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : jno 0x8f1ae ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f199 : jno 0x8f1af ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : jno 0x8f1b0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000e2fd8 : jno 0xe2fde ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134fd3 : jnp 0x13503f ; call rax
0x00000000001359f3 : jnp 0x135a4f ; call rax
0x000000000019602d : jnp 0x19602d ; jmp rax
0x000000000019606d : jnp 0x19606d ; call rax
0x0000000000047055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000f4b31 : jnp 0xf4b8b ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x000000000012800d : jns 0x12801a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000194f21 : jns 0x194f24 ; call qword ptr [rax + 0x10fffb7a]
0x000000000019603d : jns 0x19603d ; jmp rax
0x000000000019607d : jns 0x19607d ; call rax
0x000000000005c4f7 : jns 0x5c534 ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00000000000fdc24 : jns 0xfdc32 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000187dcc : jo 0x187dbd ; int1 ; jmp qword ptr [rax]
0x0000000000187f60 : jo 0x187f67 ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187f78 : jo 0x187f80 ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000188e9c : jo 0x188e7d ; call rax
0x0000000000194df0 : jo 0x194dff ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000194e50 : jo 0x194e73 ; sti ; call qword ptr [rax]
0x0000000000194e70 : jo 0x194ea0 ; sti ; call qword ptr [rax]
0x0000000000194f0c : jo 0x194f6c ; sti ; call qword ptr [rax]
0x0000000000195270 : jo 0x195250 ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952d4 : jo 0x1952b5 ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952f0 : jo 0x1952cb ; sti ; jmp qword ptr [rax]
0x00000000001954ec : jo 0x1954e6 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195540 : jo 0x195541 ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000195980 : jo 0x1959d8 ; cld ; jmp rax
0x0000000000195b84 : jo 0x195bdb ; cld ; jmp rax
0x0000000000195e4c : jo 0x195dd2 ; cld ; call qword ptr [rax]
0x0000000000196358 : jo 0x196301 ; cld ; jmp rax
0x0000000000196544 : jo 0x1964e7 ; cld ; jmp rax
0x00000000001ad7f0 : jo 0x1ad77c ; hlt ; call qword ptr [rax]
0x00000000001b2bed : jo 0x1b2bf6 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000045096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000e2fd5 : jo 0xe2fc7 ; push rbp ; jno 0xe2fe1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001132e5 : jp 0x11333c ; mov rsi, rdx ; call rax
0x0000000000194f25 : jp 0x194f24 ; call qword ptr [rax]
0x0000000000195e0c : jp 0x195d92 ; cld ; jmp qword ptr [rax]
0x0000000000196035 : jp 0x196035 ; jmp rax
0x0000000000196075 : jp 0x196075 ; call rax
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007f42d : jp 0x7f42f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000000bf0b2 : jp 0xbf0e9 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff5af : jp 0xff5e5 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000195229 : jrcxz 0x19522c ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195228 : jrcxz 0x19522d ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195249 : jrcxz 0x195248 ; call qword ptr [rax]
0x00000000001952ed : jrcxz 0x1952f0 ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019a099 : jrcxz 0x19a096 ; jmp qword ptr [rdx + rax*8 + 1]
0x000000000004edde : jrcxz 0x4edee ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000195e85 : js 0x195e85 ; jmp qword ptr [rax]
0x000000000019c2f9 : js 0x19c2e5 ; call qword ptr [rax]
0x00000000001a6ab8 : js 0x1a6abc ; stc ; call qword ptr [rax]
0x00000000001a6bd8 : js 0x1a6b8e ; out dx, al ; call qword ptr [rax]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000088374 : js 0x883f0 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e5108 : js 0xe511b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000fcebb : js 0xfce8d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff1e2 : js 0xff1f5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000196381 : lahf ; cld ; call rax
0x0000000000196541 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000116535 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014b68d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd1d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101fb7 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001951cf : lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187c9b : lcall ptr [rax] ; ret 0xfffd
0x0000000000189abb : lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189ab7 : lcall ptr [rbp + 6] ; cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x00000000001886d7 : lcall ptr [rbp - 0x11000c84] ; test esi, ebx ; jmp qword ptr [rax]
0x0000000000189fbb : lcall ptr [rdi + rax*8 - 0xb] ; call qword ptr [rsi - 0x1d000a3d]
0x000000000019b29b : lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x00000000001981d3 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000000bb1e8 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008eb44 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb54 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009f104 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb24 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7982 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072d70 : lea eax, dword ptr [rax - 1] ; ret
0x0000000000123ccd : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008eb79 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb89 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea73 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a7 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000014a62a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002da65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008e646 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x00000000000569f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000000f6a36 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x0000000000045b5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000047071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000000acbb3 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000accde : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ad11e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb64 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbeb75
0x00000000001bc67e : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000072161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000059878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000012ca88 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012c996 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000accd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138062 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bc : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000137e23 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000132dee : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001359f2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000134fd2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000132255 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038fec : lea edi, dword ptr [rbx + rsi] ; call rax
0x000000000008f426 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8f418 ; mov rax, rdi ; ret
0x00000000001206d1 : lea edi, dword ptr [rip + 0x2a8025] ; call rax
0x000000000011fe72 : lea edi, dword ptr [rip + 0x2a8828] ; call rax
0x00000000000c00ad : lea edi, dword ptr [rip + 0xc8561] ; add rax, rdi ; jmp rax
0x0000000000115b07 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f6aa5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000007c84b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000368a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38d7d6], edx ; ret
0x0000000000072eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012dd71 : lea edx, dword ptr [rip + 0x295e09] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000137341 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001162ab : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x000000000008f196 : lea edx, dword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00000000000720a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000062053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000004e617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006f21a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007bf0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x000000000007c2fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x000000000007c74a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x000000000006f513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x000000000007ac3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007aeaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013b1fd : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e665 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5aa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000038feb : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000012ca87 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012c995 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000accd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbad : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138061 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bb : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000137e22 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000cdbb9 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008eb43 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb53 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f103 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb23 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7981 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e24a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e7 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008d5ec : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000aa383 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a74ab : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74c0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a74de : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fe : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7521 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7540 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a7560 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7580 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a75a3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a75c8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a75e6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7606 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7622 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7642 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7662 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7682 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84d2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8738 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a73fc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a741c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a743e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a745e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a747e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a7498 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009ea63 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ea77 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ea82 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009ea96 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009eaa6 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009eab6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73aa : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ea56 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a73c9 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a73de : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008eb78 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb88 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea72 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a6 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000014a629 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012414f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ac43d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac5a0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5c0 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5b0 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a7332 : lea rax, qword ptr [rdi] ; ret
0x000000000016b08c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b0ac : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016b0ce : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b0ee : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b10e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016af9e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016afc6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016afdc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016aff4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016b00a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016b01c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016b03a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016af46 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016b04c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016b06c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000016afb4 : lea rax, qword ptr [rdx] ; ret
0x000000000008bb59 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008f34f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, qword ptr [rip + 0x15ffa6] ; ret
0x0000000000020930 : lea rax, qword ptr [rip + 0x16bcf4] ; ret
0x0000000000020940 : lea rax, qword ptr [rip + 0x16dc23] ; ret
0x000000000008bb0d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x00000000000898ad : lea rax, qword ptr [rip + 0x1777c] ; ret
0x000000000008f1e9 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008ebc3 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012b978 : lea rax, qword ptr [rip + 0x29d3c1] ; pop rbx ; ret
0x000000000012b940 : lea rax, qword ptr [rip + 0x29d3f9] ; pop rbx ; ret
0x000000000012b881 : lea rax, qword ptr [rip + 0x29d4b8] ; pop rbx ; ret
0x00000000000fe2ed : lea rax, qword ptr [rip + 0x2c8ca4] ; ret
0x00000000000fe12d : lea rax, qword ptr [rip + 0x2c8e64] ; ret
0x000000000006ac83 : lea rax, qword ptr [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116230 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x0000000000116320 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x000000000012b0b0 : lea rax, qword ptr [rip + 0x61a2e] ; ret
0x000000000008f9e9 : lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009443e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x000000000009440f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094452 : lea rax, qword ptr [rip + 0xbcb07] ; ret
0x000000000008da9a : lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008d70a : lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008f390 : lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008b29a : lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00000000000abc9b : lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000ac877 : lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000ac87f : lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x0000000000089cfd : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008d3ed : lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008fa4c : lea rax, qword ptr [rip + 0xd] ; ret
0x000000000008f87d : lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008b18d : lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008f99d : lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000008ebd7 : lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008ebdf : lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x0000000000089a9a : lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00000000000ac863 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000abc93 : lea rax, qword ptr [rip + 0xf596] ; ret
0x0000000000116369 : lea rax, qword ptr [rip - 0x6be60] ; ret
0x00000000001162df : lea rax, qword ptr [rip - 0x76156] ; ret
0x00000000001161ef : lea rax, qword ptr [rip - 0x767b6] ; ret
0x00000000000ac579 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000047070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000acbb2 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000accdd : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ad11d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb63 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb76
0x00000000000705c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000132ded : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001359f1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000134fd1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000132254 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008f425 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8f419 ; mov rax, rdi ; ret
0x00000000001206d0 : lea rdi, qword ptr [rip + 0x2a8025] ; call rax
0x000000000011fe71 : lea rdi, qword ptr [rip + 0x2a8828] ; call rax
0x0000000000115b06 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f6aa4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000450de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013b1fc : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e664 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5a9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000dc59b : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000019ba6d : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000008d7b6 : leave ; cmove rax, rdx ; ret
0x00000000000aa4d0 : leave ; jne 0xaa4c7 ; sub rax, 1 ; ret
0x00000000000ada8a : leave ; jne 0xada47 ; mov rax, rdx ; ret
0x000000000014a628 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a56d1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000009ea2f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e98f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000019536d : leave ; sti ; jmp qword ptr [rax]
0x000000000018c15b : ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x0000000000198fc3 : ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x000000000018882f : ljmp ptr [rax - 0x53000c73] ; xchg eax, ebx ; call rdx
0x000000000019538f : ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x000000000018997b : ljmp ptr [rax] ; add eax, 0x528fff5 ; cmc ; jmp rax
0x00000000001899ff : ljmp ptr [rax] ; add eax, 0x590fff5 ; cmc ; jmp rax
0x000000000018695f : ljmp ptr [rax] ; test al, 0xed ; call rsi
0x000000000018695b : ljmp ptr [rax] ; test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x000000000019b2cb : ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000186c7f : ljmp ptr [rbx - 0x5400122e] ; shr ch, cl ; call rax
0x0000000000198a83 : ljmp ptr [rcx + rax*2 + 0x46d40001] ; jmp rsp
0x0000000000188e97 : ljmp ptr [rcx - 0x2f] ; push qword ptr [rax - 0x24] ; call rax
0x000000000006d713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x000000000016e7ce : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aab9d : lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000010de0e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000086644 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fc194 : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001224ef : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000145740 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000171d60 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a67ed : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e7 ; jmp qword ptr [rcx]
0x00000000001439ec : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c11 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b67c2 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e06fa : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013c80a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000196125 : lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x00000000001a6ba4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000145d64 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a3d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001b0fa4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa7 ; jmp qword ptr [rbx]
0x00000000001095f2 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095e5 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109571 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x10957e ; pop rbp ; ret
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000004617c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae466 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000196319 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000196315 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000000aca39 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00000000001498d0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000109523 : lodsd eax, dword ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000ae465 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001302fc : loop 0x130386 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000001375e6 : loop 0x137578 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000137779 : loop 0x13770b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000195269 : loop 0x195268 ; jmp rax
0x00000000001952c9 : loop 0x1952c8 ; jmp qword ptr [rax]
0x000000000003a689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000065891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bcc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000087bf4 : loop 0x87c46 ; mov edi, edi ; call rax
0x00000000000a684a : loop 0xa6855 ; add byte ptr [rax], al ; ret
0x00000000000aac55 : loop 0xaac6f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c1cef : loop 0xc1cf5 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001110d6 : loope 0x1110e4 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000120f93 : loope 0x120fe1 ; sub al, byte ptr [rax] ; ret
0x0000000000168bfb : loope 0x168c02 ; add byte ptr [rax], al ; ret
0x0000000000170a8b : loope 0x170a95 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000186f99 : loope 0x186f8e ; inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x000000000018ab89 : loope 0x18ab93 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000195245 : loope 0x195244 ; call qword ptr [rax]
0x00000000001952e9 : loope 0x1952e8 ; jmp rax
0x0000000000035d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000948eb : loope 0x948fd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094b5b : loope 0x94b6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000aa059 : loope 0xaa0c8 ; nop dword ptr [rax + rax] ; ret
0x00000000000aac97 : loope 0xaac58 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b1946 : loope 0xb1951 ; add byte ptr [rax], al ; call 0x2dc46
0x0000000000115b05 : loopne 0x115b57 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x000000000012411b : loopne 0x124128 ; cdqe ; shr rax, 4 ; ret
0x0000000000138367 : loopne 0x138370 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c6c1 : loopne 0x13c731 ; nop dword ptr [rax + rax] ; ret
0x0000000000187dc0 : loopne 0x187db0 ; int1 ; call qword ptr [rax]
0x0000000000187e30 : loopne 0x187e26 ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187f30 : loopne 0x187f35 ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187fe8 : loopne 0x187ff3 ; inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x000000000018b060 : loopne 0x18b08d ; cli ; call qword ptr [rax]
0x0000000000194e44 : loopne 0x194e62 ; sti ; call rax
0x0000000000194f08 : loopne 0x194f7f ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000195264 : loopne 0x195249 ; sti ; jmp rax
0x0000000000195268 : loopne 0x19524f ; sti ; jmp rax
0x0000000000195265 : loopne 0x195264 ; jmp rax
0x00000000001952c5 : loopne 0x1952c4 ; jmp qword ptr [rax]
0x00000000001952e4 : loopne 0x1952c8 ; sti ; jmp rax
0x00000000001952e8 : loopne 0x1952ce ; sti ; jmp rax
0x00000000001952ec : loopne 0x1952d8 ; sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019534c : loopne 0x195324 ; sti ; jmp qword ptr [rax]
0x00000000001954bc : loopne 0x1954c4 ; cld ; call rax
0x0000000000195e48 : loopne 0x195dd2 ; cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001960cc : loopne 0x196140 ; cld ; jmp qword ptr [rax]
0x0000000000045ce4 : loopne 0x45d26 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000046072 : loopne 0x4608c ; test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006dd9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x000000000006ddd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x000000000006de2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x000000000006de6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x000000000006de71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a694c : loopne 0xa6956 ; add byte ptr [rax], al ; ret
0x00000000000aac8d : loopne 0xaaca7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000bea6c : loopne 0xbea0a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000019a9fc : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x00000000001322b7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001acdac : mov ah, 0x12 ; add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x000000000019d4ac : mov ah, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000000b5773 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0a8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000001aebac : mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001989dc : mov ah, 0x3a ; add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x00000000001af9ac : mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ac : mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b3bac : mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000195db8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000019aacc : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019a644 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000197e6c : mov ah, 0xee ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x0000000000197f6c : mov ah, 0xf7 ; add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x00000000001a6b75 : mov al, 0 ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001a6bd5 : mov al, 0 ; add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001a6b2d : mov al, 0 ; add byte ptr [rax - 0x71], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a6b15 : mov al, 0 ; add byte ptr [rax - 0x71], cl ; out dx, al ; call qword ptr [rax]
0x00000000000ebf2e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001a6ba5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000140e8c : mov al, 0x1a ; sub byte ptr [rax], al ; ret
0x000000000012e0fc : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0b4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000135869 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cdcde : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c52d5 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013c6b8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000195930 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000195718 : mov al, 0x61 ; cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x0000000000196088 : mov al, 0x77 ; cld ; jmp qword ptr [rax]
0x0000000000195e84 : mov al, 0x78 ; cld ; jmp qword ptr [rax]
0x0000000000189f9c : mov al, 0x81 ; cmc ; call rax
0x0000000000195c44 : mov al, 0x82 ; cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195e1c : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00000000001bc685 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x0000000000195080 : mov al, 0xa7 ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019613c : mov al, 0xa9 ; cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000196314 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000187dbc : mov al, 0xeb ; int1 ; jmp rax
0x0000000000187df4 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e68 : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00000000001a9dc5 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000187fb8 : mov al, 1 ; inc eax ; add edx, esi ; jmp rax
0x0000000000187fa8 : mov al, 1 ; jmp rax
0x0000000000188004 : mov al, 3 ; call rax
0x00000000000a697c : mov al, 4 ; add byte ptr [rax], al ; ret
0x0000000000188024 : mov al, 4 ; call rax
0x00000000000a657c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bc6dd : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a45d5 : mov al, byte ptr [rax] ; add byte ptr [rax], ch ; je 0x1a45ce ; call qword ptr [rcx]
0x00000000000a2aab : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2ad9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2b5d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016afb0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a85 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a15f8 : mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000000a2a95 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000001951ad : mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195189 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019518d : mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001951cd : mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000108a33 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000076f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000018c155 : mov bh, dl ; call rax
0x000000000018c151 : mov bh, dl ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000017221e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006bc81 : mov bl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000e510c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000f34f1 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000008783c : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000011d12d : mov bl, dh ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000082f10 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007763c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013d6bc : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000082f11 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045af9 : mov byte ptr [rax + rdx], 0 ; ret
0x00000000001a7ff8 : mov byte ptr [rax + rsi*8], bh ; jmp qword ptr [rbx]
0x000000000019c2f8 : mov byte ptr [rax - 0x18], bh ; call qword ptr [rax]
0x000000000007763d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff28a : mov byte ptr [rax - 1], 0 ; ret
0x0000000000121576 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e70d : mov byte ptr [rax], 0x20 ; jmp 0x10e6d9
0x0000000000104bee : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a56d2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000fdc26 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000009ea33 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x00000000000a82eb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a74a8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a751e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a8371 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a83f3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a75a0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009ea73 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a7356 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a8179 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009ea92 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea02 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a7372 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a81a7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81f9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009e976 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000009e9c0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009e911 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a7330 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a8152 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a585a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016afd9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2aae : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016b007 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2adc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a57f0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2b60 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016afb2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a87 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001035c4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000004a6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x000000000007550f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000001a7b69 : mov ch, 0xfb ; call qword ptr [rax]
0x000000000016f346 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a6cc5 : mov cl, 0 ; add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000008eadb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006c3f7 : mov cl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000017431a : mov cl, 0x15 ; pop rax ; and eax, 0x1740025 ; ret
0x00000000001a6bd9 : mov cl, 0xee ; call qword ptr [rax]
0x00000000000d64b9 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000001bd744 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000e3a6a : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000cf265 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ceb89 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000046273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e0f7a : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18f1 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000005e59e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000089385 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000bb1e6 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb7 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000d3faf : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c0eeb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000c31db : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000005c1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d9b13 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000e5702 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d71dc : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000188709 : mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x000000000007cb14 : mov dh, byte ptr [rax + rax] ; ret
0x000000000006dcb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000018c154 : mov dil, dl ; call rax
0x0000000000073d16 : mov dl, 1 ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000ad172 : mov dl, byte ptr [rax + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a8150 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001073d2 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x0000000000071c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000071c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007bb1a : mov dword ptr [rax + 8], 0 ; ret
0x000000000008f30e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000005bd92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000013c50d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fd2c8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000001025a8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bb740 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000008241b : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082d88 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a8205 : mov dword ptr [rax], 0xf0472800 ; jmp qword ptr [rdi]
0x00000000000fce14 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c80d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000abbd3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a4405 : mov dword ptr [rax], eax ; add byte ptr [rax], bl ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000ea914 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000072165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000005fb88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x0000000000062807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00000000000ff1c1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000123f61 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000084116 : mov dword ptr [rax], edi ; ret
0x0000000000107293 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac951 : mov dword ptr [rax], edx ; jne 0xac94d ; ret
0x0000000000123cca : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003acb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000ea96a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123ec5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x0000000000072ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000ea913 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000120ae3 : mov dword ptr [rbp + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000d30e4 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd310b
0x000000000004d64e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00000000001146c3 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x000000000011433a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000114800 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001142d4 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113e63 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005224f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x000000000003a5fa : mov dword ptr [rbp], edx ; call rax
0x0000000000078457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000001435b6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014356e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007b42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001437e1 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000003577a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000a74bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a834b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a757d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a75e3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8433 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a75c5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8415 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7603 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8453 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000010e70a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10e6dc
0x000000000013bf21 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ac252 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000a753d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a74db : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a832b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a755d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a73a7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ea53 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000009eaa3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009e9a3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x000000000009ea52 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a743b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a745b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a73f9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8239 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a747b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000aca35 : mov dword ptr [rdi + 8], eax ; je 0xac9f0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a821b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7419 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8259 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a73db : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000003ac94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000009e8ff : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e95b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009e8e5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000009e979 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000004a60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x000000000009e922 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009ea80 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7375 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7354 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a8177 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009ea00 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a81a5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a73a5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a73f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8257 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009e9f0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009e9a0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a7344 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8164 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7362 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8192 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ea61 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9e1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009e9d1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000016b037 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2b1c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016b019 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016b0cb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b049 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166cf9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016b0eb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b069 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166d09 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016b089 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b10b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a2ba0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000016b0a9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016af9b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a2b82 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000016afc4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016aff2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016af44 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000791c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a2a99 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000071f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000094f87 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe4b5 : mov dword ptr [rip + 0x2c72e5], eax ; mov rdx, rax ; jmp 0xfe457
0x000000000001f928 : mov dword ptr [rip + 0x3a99da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000003ac00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000048034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000012c7b7 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000e1c68 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x000000000013b46d : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000fd2c7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001025a7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bb73f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082d87 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c80d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000005fb87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x0000000000062806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00000000000ff1c0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ea969 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ea912 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000035779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108a76 : mov eax, 0 ; cmovae rax, rsi ; ret
0x0000000000097485 : mov eax, 0 ; cmovne rax, rdi ; ret
0x00000000000cdada : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000cd9aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x0000000000188ac8 : mov eax, 0x89fff3ad ; stosb byte ptr [rdi], al ; call rax
0x00000000001323ff : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000138366 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000033e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000106239 : mov eax, dword ptr [rax + 0x108] ; ret
0x00000000001434df : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x0000000000109be0 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000109990 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000128737 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128747 ; ret
0x00000000000fd398 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfd3ab ; ret
0x0000000000072222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007206a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000114999 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000010a307 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000105f8c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000134f74 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000135814 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a726 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000013aa75 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000106229 : mov eax, dword ptr [rax + 8] ; ret
0x00000000000895cb : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x895c9 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010ac94 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000013aa6a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289b9 : mov eax, dword ptr [rax] ; ret
0x000000000007e06f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x0000000000085566 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x85576 ; call rax
0x000000000010319c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000077491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000012e731 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001381fa : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x138210 ; pop rbx ; ret
0x00000000000a2b19 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166cf6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166d06 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a2b9d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2bbd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000146caa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000148582 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016aff0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000000a2ac5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016af41 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000166c11 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016afc1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a96 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000cc57d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc592 ; call rax
0x000000000013bd41 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173f38 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f4f ; call rax
0x000000000012d8e7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d91f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000013b1f9 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e661 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb09 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb19 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aa71 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aa66 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000138999 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013ab51 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c467 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac61d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac5f9 ; ret
0x000000000007c84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000115165 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aad77 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad69 ; ret
0x0000000000091c76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012dd78 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000007c841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x0000000000140ee4 : mov eax, dword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408d1 : mov eax, dword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x000000000010a301 : mov eax, dword ptr [rip + 0x2b9b69] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008410f : mov eax, dword ptr [rip + 0x33fdcb] ; mov qword ptr [rax], rdi ; ret
0x0000000000081a85 : mov eax, dword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x0000000000081860 : mov eax, dword ptr [rip + 0x34256a] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39641e] ; mov qword ptr [rax], rdx ; ret
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0007 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0049
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000048433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000c9124 : mov eax, ebx ; call rax
0x000000000003a68c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000096e84 : mov eax, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000011905a : mov eax, edi ; sar rax, 6 ; ret
0x0000000000097966 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x000000000004a5be : mov eax, esi ; cmovae rax, rdi ; ret
0x0000000000172abb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000fe529 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009f0f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f101 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000013c4f3 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000187c95 : mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x000000000017d3c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000195311 : mov ebp, 0xc180fffb ; sti ; call rax
0x0000000000189140 : mov ebp, 0xc7fff450 ; push rax ; hlt ; call rcx
0x000000000009f161 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f141 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f121 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009f212 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000004dc26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000564af : mov ebp, 0xfffffb58 ; call rax
0x00000000000dc5de : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000012e7f8 : mov ebp, dr1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001027f7 : mov ebp, eax ; call rax
0x0000000000138529 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13853d
0x0000000000103199 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000010359f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000001b9084 : mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x000000000007d269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000132256 : mov ebx, 0xc8 ; call rax
0x00000000001a8684 : mov ebx, cs ; add byte ptr [rax], al ; call 0x131a76e8
0x00000000001035a6 : mov ebx, eax ; call rax
0x00000000000fca57 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x0000000000047c94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x0000000000091c73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000137e1e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009ea2e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000007ba07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010eea4 : mov edi, 0x2000004 ; call rax
0x0000000000105c60 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000006ddd7 : mov edi, 0xe0 ; call rax
0x000000000006dd9b : mov edi, 0xe0 ; jmp rax
0x00000000001a9a84 : mov edi, ds ; add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000000346bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x000000000011e487 : mov edi, dword ptr [rax] ; call 0xf78b8
0x00000000000bb021 : mov edi, dword ptr [rax] ; call r14
0x0000000000102d03 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000564ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x000000000012800c : mov edi, dword ptr [rcx + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000006ddd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001132e4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000102def : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d4f9 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x000000000004a6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x000000000008595e : mov edi, eax ; mov rbx, rax ; call 0x81b87
0x000000000002f6d9 : mov edi, ebp ; call rax
0x000000000012ca85 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000859c3 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012e738 : mov edi, ebx ; call qword ptr [rax]
0x0000000000052256 : mov edi, ebx ; call rax
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000088106 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007221e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a8d0 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000001389a0 : mov edi, edi ; call qword ptr [rax]
0x0000000000074015 : mov edi, edi ; call rax
0x000000000013805f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010aeec : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000115168 : mov edi, edx ; jmp rax
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x0000000000081867 : mov edi, esi ; call qword ptr [rax]
0x000000000012d278 : mov edi, esi ; call rax
0x000000000012c993 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013b5af : mov edi, esp ; call qword ptr [rax]
0x000000000012b846 : mov edi, esp ; call rax
0x0000000000088e56 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000cbf79 : mov edx, 0 ; cmove rax, rdx ; ret
0x00000000001a754d : mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001a75dd : mov edx, 0x75c00000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000133dea : mov edx, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x00000000001aad84 : mov edx, dr0 ; add byte ptr [rax], al ; call 0x221a9fad
0x0000000000077465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4ec : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc501 ; call rdx
0x0000000000071f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001142d1 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001141e3 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113e60 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000114337 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000078770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001147fd : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000014857f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000007400e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000115161 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000001144eb : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a7360 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8190 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7341 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8161 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000010eea0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010ed9c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000143a9e : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000001146c7 : mov edx, ebp ; call rax
0x000000000012f4d3 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088937 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088e59 : mov edx, ebp ; mov rsi, rbp ; call rax
0x0000000000113e67 : mov edx, ebx ; call rax
0x000000000012f3c5 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088109 : mov edx, edi ; call rax
0x000000000018c15d : mov edx, edi ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x0000000000063b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceaf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001142d8 : mov edx, esi ; call rax
0x000000000011433e : mov edx, esp ; call rax
0x0000000000087bf3 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000000a7fae : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000087a35 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000006c430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000102841 : mov esi, 2 ; jmp rax
0x000000000010285b : mov esi, 3 ; jmp rax
0x0000000000063b67 : mov esi, dword ptr [rip + 0x360403] ; call rax
0x000000000005be59 : mov esi, dword ptr [rip + 0x368111] ; call rax
0x000000000005b803 : mov esi, dword ptr [rip + 0x368767] ; call rax
0x000000000005004b : mov esi, dword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cf : mov esi, dword ptr [rip + 0x376b9b] ; call rax
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000010eda1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000006d712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x0000000000088e5c : mov esi, ebp ; call rax
0x0000000000085c7e : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000013899d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000877a7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x00000000000c7593 : mov esi, edi ; xor edi, edi ; call rax
0x00000000001132e8 : mov esi, edx ; call rax
0x00000000000c52d0 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000879d5 : mov esi, esi ; call rax
0x00000000000564ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x000000000004b38b : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000135864 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cdcd9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001322a4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000013ab55 : mov esi, esp ; call qword ptr [rax]
0x0000000000086b35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000088d01 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012e735 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087e63 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000008683a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000008605d : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000138c51 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008eb51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000b6f6a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001a3db4 : mov esp, 0xa8000082 ; in eax, dx ; call qword ptr [rax]
0x0000000000188cd9 : mov esp, 0xafedfff3 ; call rax
0x000000000008b8b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000001a7745 : mov esp, 0xd9d80000 ; cld ; call qword ptr [rax]
0x00000000000965ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000013852c : mov esp, dword ptr [rax] ; jmp 0x13853a
0x00000000001027f4 : mov esp, edx ; mov rbp, rax ; call rax
0x00000000000fe131 : mov gs, word ptr [rax + rax] ; ret
0x000000000011f7df : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000fe130 : mov gs, word ptr fs:[rax + rax] ; ret
0x00000000000bf4a7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8b728
0x0000000000071c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007bb19 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fce13 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123cc9 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000072164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084115 : mov qword ptr [rax], rdi ; ret
0x00000000000720a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x0000000000072ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d30e3 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd310c
0x000000000004d64d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000001146c2 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5f9 : mov qword ptr [rbp], rdx ; call rax
0x0000000000078456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001435b5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000014356d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000077494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000fc1b0 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000078326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001437e0 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013822e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x00000000000481ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6cb1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000a757c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000010e709 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10e6dd
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a753c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a755c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a743a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a745a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a747a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000ff1e4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003655a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a73c6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a73b3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000710cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000016b0ca : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d3a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016b0ea : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000166d5a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016b10a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000166d7a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000016af9a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000166c6a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000016af43 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001323ba : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166c13 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x00000000000762de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000115aa7 : mov qword ptr [rip + 0x2b2672], rax ; pop rbp ; ret
0x00000000000fe4b4 : mov qword ptr [rip + 0x2c72e5], rax ; mov rdx, rax ; jmp 0xfe458
0x000000000012d8ce : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003ac03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000fc196 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f5e5e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d89e : mov qword ptr [rsi + 8], rax ; ret
0x0000000000048033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007783a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000e1c67 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d05 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2ab : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000001381de : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013822d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000012670e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000203f7 : mov r12, rax ; call 0xaab89
0x000000000013852b : mov r12d, dword ptr [rax] ; jmp 0x13853b
0x00000000001027f3 : mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000103198 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000ebf2d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000cbfab : mov rax, -0xe ; ret
0x0000000000078330 : mov rax, -1 ; pop rbx ; ret
0x00000000000353e6 : mov rax, -1 ; ret
0x00000000000abf70 : mov rax, 1 ; ret
0x00000000000abf80 : mov rax, 2 ; ret
0x00000000000abf90 : mov rax, 3 ; ret
0x00000000000abfa0 : mov rax, 4 ; ret
0x00000000000abfb0 : mov rax, 5 ; ret
0x00000000000abfc0 : mov rax, 6 ; ret
0x00000000000abfd0 : mov rax, 7 ; ret
0x0000000000112b54 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b24
0x0000000000106238 : mov rax, qword ptr [rax + 0x108] ; ret
0x00000000001434de : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000109bdf : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010998f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000114998 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000134f73 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000135813 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000106230 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013aa74 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000106228 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000013aa69 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289b8 : mov rax, qword ptr [rax] ; ret
0x000000000007e06e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x0000000000085565 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x85577 ; call rax
0x000000000006960c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x000000000010319b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000077490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001381f9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x138211 ; pop rbx ; ret
0x0000000000166c10 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cc57c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc593 ; call rax
0x000000000013c1a2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013bd40 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c8850 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173f37 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f50 ; call rax
0x000000000012d8e6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d91e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013b1f8 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e660 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb08 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb18 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aa70 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aa65 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013ab50 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c466 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000115164 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012dd77 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e7ac7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x0000000000140ee3 : mov rax, qword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408d0 : mov rax, qword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x0000000000120f90 : mov rax, qword ptr [rip + 0x2a48e1] ; ret
0x0000000000081a84 : mov rax, qword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cb10 : mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39bc59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0006 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde0f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a362 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a3c3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001289b7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094f89 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f09b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e2b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a806 : mov rax, r8 ; pop rbx ; ret
0x000000000007df36 : mov rax, r8 ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006eff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ed80 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9123 : mov rax, rbx ; call rax
0x0000000000105dee : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaae : mov rax, rbx ; pop rbx ; ret
0x0000000000101fb9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a68b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033ea6 : mov rax, rcx ; ret
0x0000000000116430 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009ea16 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f514 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097359 : mov rax, rdi ; pop rbx ; ret
0x000000000004a60d : mov rax, rdi ; ret
0x0000000000119059 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000097965 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010eb2b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000490b4 : mov rax, rdx ; pop rbx ; ret
0x00000000000484c9 : mov rax, rdx ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fc83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c8502 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011ce01 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x0000000000172aba : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000001027f6 : mov rbp, rax ; call rax
0x0000000000085960 : mov rbx, rax ; call 0x81b85
0x00000000001035a5 : mov rbx, rax ; call rax
0x000000000012e26a : mov rbx, rax ; jne 0x12e20a ; xor eax, eax ; pop rbx ; ret
0x00000000000fca56 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x000000000009ed45 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000bb020 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102d02 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000564ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x000000000006ddd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000001132e3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000012d4f8 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x000000000013b5ae : mov rdi, r12 ; call qword ptr [rax]
0x0000000000132c0c : mov rdi, r12 ; call rax
0x0000000000088e55 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x000000000002f6d8 : mov rdi, r13 ; call rax
0x0000000000081866 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012d277 : mov rdi, r14 ; call rax
0x000000000012c992 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013899f : mov rdi, r15 ; call qword ptr [rax]
0x0000000000074014 : mov rdi, r15 ; call rax
0x000000000013805e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000230b0 : mov rdi, rax ; call 0x8f3b5
0x0000000000136dc3 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ece29 : mov rdi, rax ; call rbx
0x00000000000877a9 : mov rdi, rax ; call rcx
0x0000000000136eb5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136cc6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000008595d : mov rdi, rax ; mov rbx, rax ; call 0x81b88
0x000000000012b753 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000084fb5 : mov rdi, rbp ; call rax
0x000000000012ca84 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000859c2 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012e737 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000052255 : mov rdi, rbx ; call rax
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000088105 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007221d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a8cf : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000115167 : mov rdi, rdx ; jmp rax
0x000000000012b845 : mov rdi, rsp ; call rax
0x0000000000077464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4eb : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc502 ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000011433d : mov rdx, r12 ; call rax
0x0000000000087bf2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000001146c6 : mov rdx, r13 ; call rax
0x000000000012f4d2 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088e58 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000001142d7 : mov rdx, r14 ; call rax
0x0000000000088108 : mov rdx, r15 ; call rax
0x000000000011ceae : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010f433 : mov rdx, rax ; jmp 0x10f447
0x0000000000134d86 : mov rdx, rax ; jmp 0x134d4c
0x000000000007d9c3 : mov rdx, rax ; jmp 0x7d9e2
0x000000000008783f : mov rdx, rax ; jmp 0x8780c
0x00000000000beb67 : mov rdx, rax ; jmp 0xbeb72
0x00000000000d0441 : mov rdx, rax ; jmp 0xd03e2
0x00000000000e0fc5 : mov rdx, rax ; jmp 0xe0f61
0x00000000000e0fc4 : mov rdx, rax ; jmp 0xe0f62
0x00000000000f000b : mov rdx, rax ; jmp 0xf0045
0x00000000000fe4bb : mov rdx, rax ; jmp 0xfe451
0x0000000000088936 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113e66 : mov rdx, rbx ; call rax
0x000000000012f3c4 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000063b66 : mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000005be58 : mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b802 : mov rsi, qword ptr [rip + 0x368767] ; call rax
0x000000000005004a : mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3ce : mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010eda0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000088d00 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087e62 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086839 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000008605c : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000085c7d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000879d4 : mov rsi, r14 ; call rax
0x000000000004b38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000142f9e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e5b : mov rsi, rbp ; call rax
0x0000000000088b76 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000013899c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000877a6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000c7592 : mov rsi, rdi ; xor edi, edi ; call rax
0x00000000001132e7 : mov rsi, rdx ; call rax
0x000000000013ab54 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e734 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000019df84 : mov word ptr [rax + rax], fs ; add al, bh ; jno 0x19df7b ; call qword ptr [rax]
0x00000000000fe2f1 : mov word ptr [rax + rax], gs ; ret
0x000000000019cf84 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000008f30d : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013ce85 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000ec511 : mov word ptr [rax - 0x77], cs ; ret
0x00000000000a65a0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001ac684 : mov word ptr [rbx], cs ; add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x000000000019b1bc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; je 0x19b207 ; cli ; jmp rsp
0x00000000001ade84 : mov word ptr [rbx], fs ; add dword ptr [rax], eax ; call 0x221ad32e
0x00000000001b0c84 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aef84 : mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000198eec : mov word ptr [rcx + rax], fs ; hlt ; and ch, dh ; jmp rsp
0x0000000000198d7c : mov word ptr [rcx + rax], ss ; mov ah, 0x20 ; hlt ; call rsp
0x000000000019873c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; call rsp
0x00000000000a74bc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a75c4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8414 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009eaa2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009e9a2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a821a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a73da : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7343 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8163 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ea60 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9d0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000016b018 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2b81 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016afc3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a98 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000004bb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034855 : movd mm0, rax ; ret
0x000000000003492b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000a767d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8733 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a761d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a763d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a765d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a82d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7494 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a2be2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c02 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c22 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a16 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2be3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c03 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c23 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a17 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a767e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8734 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a761e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a763e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a765e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a82d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7495 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000034854 : movq xmm0, rax ; ret
0x000000000003492a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000006846a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5b64 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5af7
0x00000000000e06fc : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b5f95 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b099c : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001ade9c : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ab79c : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x0000000000196515 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196359 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000196355 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x00000000001979a4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x00000000001aab9c : movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000000fe2f0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov word ptr [rax + rax], gs ; ret
0x00000000001aa99c : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x000000000019996c : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b61c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x00000000001b119c : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000013f2d4 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007573f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f66a : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bc472 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001ae109 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x000000000009ed44 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009eb24 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9eb21 ; ret
0x000000000009ebb4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9ebb9 ; ret
0x000000000009eae0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9eae1 ; ret
0x000000000009ea30 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e990 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009e8c7 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000085544 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000063884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d3fb1 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aabc7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014a744 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a608 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a85d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014a6dd : movsxd rax, ecx ; ret
0x000000000005c1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00000000000948ed : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000135866 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x000000000014a627 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000005c148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d1bae : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d9b15 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000852e8 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cdcdb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000aac57 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c52d2 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aac8f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000fc2ea : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000bb1e5 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb6 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000c0eea : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000001302fe : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bfb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077f62 : movzx eax, byte ptr [rax] ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000108a32 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000f8924 : movzx rax, al ; ret
0x0000000000088706 : mul al ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000073ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000015a987 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016e72c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fd50d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c2232 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000004b605 : nop ; add rax, rdi ; jmp rax
0x000000000005bf55 : nop ; add rax, rdx ; jmp rax
0x00000000000aac5a : nop ; add rax, rsi ; jmp rax
0x000000000008eb1f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009f0cf : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f25f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000195b98 : nop ; cld ; call qword ptr [rax]
0x0000000000195670 : nop ; cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000195bdc : nop ; cmp ah, bh ; call qword ptr [rax]
0x0000000000195ba8 : nop ; cmp al, 0xfc ; call qword ptr [rax]
0x0000000000195be4 : nop ; cmp edi, esp ; call qword ptr [rax]
0x0000000000195ba0 : nop ; cmp esp, edi ; call qword ptr [rax]
0x0000000000195078 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000194f04 : nop ; insd dword ptr [rdi], dx ; sti ; jmp rax
0x0000000000194f1c : nop ; ja 0x194f1d ; call qword ptr [rax]
0x0000000000194f14 : nop ; je 0x194f15 ; call qword ptr [rax]
0x0000000000194f2c : nop ; jge 0x194f2d ; call qword ptr [rax]
0x0000000000194f24 : nop ; jp 0x194f25 ; call qword ptr [rax]
0x000000000007f42c : nop ; jp 0x7f430 ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000000a735f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007832f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007bf3f : nop ; mov rax, -1 ; ret
0x00000000000774cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013aa6f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013ab4f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000120f8f : nop ; mov rax, qword ptr [rip + 0x2a48e1] ; ret
0x00000000000d176f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ec6f : nop ; mov rax, rdi ; ret
0x00000000001146c5 : nop ; mov rdx, r13 ; call rax
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000196514 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000085543 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000001953ac : nop ; or eax, 0x20fffc ; cld ; jmp rax
0x00000000001953a8 : nop ; or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x00000000001a63c0 : nop ; out dx, al ; call qword ptr [rax]
0x0000000000195b54 : nop ; pop rax ; cld ; call qword ptr [rax]
0x0000000000195928 : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000195b2c : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000195b3c : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000195b1c : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000195b24 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000195b34 : nop ; push rsp ; cld ; call qword ptr [rax]
0x0000000000195348 : nop ; sar bl, cl ; jmp rax
0x00000000001956f4 : nop ; sbb al, 0xfc ; jmp rax
0x0000000000194e64 : nop ; sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000196134 : nop ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x000000000007c88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000194f44 : nop ; xchg bl, bh ; call qword ptr [rax]
0x0000000000195e14 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000008eb9f : nop ; xor rax, rax ; ret
0x00000000001439a8 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a5d5b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000114993 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106223 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fcb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c54b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a33 : nop dword ptr [rax + rax] ; ret
0x000000000003a7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006b475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000abf3c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000174435 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000143664 : nop dword ptr [rax] ; call qword ptr [rax]
0x00000000001750f9 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000ac845 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac835 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac83d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000cda05 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000368c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000895d5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012e04d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c895d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000745fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a6a2d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x0000000000094a14 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000010622d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000006dded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000084ca4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b9fac : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x0000000000110bc5 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d7c7d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d72bd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006acd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a69e7 : nop dword ptr cs:[rax + rax] ; ret
0x00000000001439a7 : nop word ptr [rax + rax] ; call rcx
0x00000000000350d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fca : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c54a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a3a : nop word ptr [rax + rax] ; ret
0x000000000003a7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000035f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000662e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145d37 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149949 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145d65 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fce2a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008241d : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000dc0f1 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089d00 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000082d8a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c00b1 : or al, 0 ; add rax, rdi ; jmp rax
0x000000000008f19a : or al, 0 ; cmove rax, rdx ; ret
0x0000000000082f12 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00000000000beb65 : or al, 0x20 ; mov rdx, rax ; jmp 0xbeb74
0x00000000001aea04 : or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001337cb : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008e718 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000009ea32 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00000000000948ef : or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000001a4404 : or al, 0x89 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x0000000000091c74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000003d495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000005c1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bc471 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a6404 : or al, 0xa9 ; add byte ptr [rax], al ; js 0x1a645f ; out dx, al ; jmp qword ptr [rdx]
0x0000000000135868 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013c6b7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000013587e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003646f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001a8204 : or al, 0xc7 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000000abb55 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a66e3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000001ab104 : or al, 0xf6 ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000195368 : or al, 0xfb ; call rax
0x00000000000f67c2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f68b2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf04 : or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000000a6920 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000009d4ef : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000097b2b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b3ead : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000144f0d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147b21 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f31 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012d942 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000dfd41 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1fc8 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e624e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000014cf07 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012b052 : or al, ch ; fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000045b5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013bbc7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008b451 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007781d : or bh, byte ptr [rax - 1] ; ret
0x0000000000045be1 : or bh, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ac843 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000010622b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000124153 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123fb0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000194df9 : or bl, bh ; jmp rax
0x00000000001bc686 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bc69d ; ret 0xb
0x000000000012c468 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000a2b7f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d59b1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013bb0a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x0000000000166c68 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e732 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000013899a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000014d0e2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012bf33 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000074088 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013f964 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00000000001405e7 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00000000000bbc83 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000007cc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000105c65 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008231c : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048e15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000001336b9 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d7223 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a9e8a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001afe6c : or byte ptr [rax + 0xb], cl ; ret
0x00000000001ac9cd : or byte ptr [rax + 0xb], dl ; ret
0x00000000001193bb : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000010ea1f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x000000000010639e : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x0000000000112f6b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000004b158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d59b2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000de6cb : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012fccb : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000008f34e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008ebc2 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009443d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x000000000009440e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000ac876 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31b2 ; ret
0x000000000008ebd6 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf812 ; ret
0x00000000000ac862 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000abc92 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x00000000001161ee : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8984a ; ret
0x00000000001162de : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89eaa ; ret
0x000000000013b5a8 : or byte ptr [rax - 0x73], cl ; je 0x13b5da ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b6ec : or byte ptr [rax - 0x73], cl ; je 0x13b71e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007ee43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010a361 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a3c2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102d01 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f4156 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dcd6f : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013bb0b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006ddd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d91d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135812 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a2b5f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000113e65 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000896fb : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2a70 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000119058 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000013899b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a8ce : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000166c69 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e733 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000859c1 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012d70b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007db2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000098f97 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012f915 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013b83f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000efc7b : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000895cd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000089677 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000898d9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000082318 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b2f
0x0000000000082317 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b30
0x0000000000082f48 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048c36 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094aa6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094b2e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e67e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007044b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007413d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000014516c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010623a : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000007d9d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007d995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000014516d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147cc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145191 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc587 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000084086 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000019f70 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001e710 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x0000000000019268 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a360 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000aac99 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d952 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000083f86 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f59 ; ret
0x00000000000f32dc : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f485e : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000004a608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000105e2d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000108a30 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a9c8d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9ccb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006abcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014b6de : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000071fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007915a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x00000000000490b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013b5ad : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007763a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000083b29 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000f67d2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f68c4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007db6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000185a3e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000cf263 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000188250 : or byte ptr [rdx], ch ; jmp qword ptr [rax + 0x20fff229]
0x000000000012c469 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000a5771 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a2b80 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000edba0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000bb2c7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ac165 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000007a5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078bd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000662cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072faf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e8416 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c15c2 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006f75c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008dc6a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d97df : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004ac1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010e682 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000119375 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000168b96 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000008638a : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000008d7b5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000131883 : or dword ptr [rax + 0x29], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011fe70 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a8828 ; call rax
0x0000000000132253 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000011b003 : or dword ptr [rax - 0x76b7ffd6], ebp ; ret 0x8d48
0x000000000010e7b9 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2fc9
0x000000000009931b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000089a6e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014509d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b58f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000073c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f5d38 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006656f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4cc5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f2103 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2e2a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f25f7 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bc6de : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bc6f4 ; ret 0xa
0x00000000001436f6 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000035f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000168b76 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000101aea : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010206a : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006ad8e : or dword ptr [rdx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x000000000012dd73 : or dword ptr [rsi + 0x29], ebx ; add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x000000000004c8ac : or dword ptr [rsi], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000137343 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000168bf8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000194e4d : or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001953ad : or eax, 0x20fffc ; cld ; jmp rax
0x00000000000b1943 : or eax, 0x3e1ba00 ; add byte ptr [rax], al ; call 0x2dc49
0x000000000006c232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000001381db : or eax, 0x48640029 ; mov dword ptr [rax], edx ; ret
0x00000000000967a2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000012cb3f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000a6705 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000a7db9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000017d119 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000009d9dc : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000005744f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144e3d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147981 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e61 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000012d932 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d21e9 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d1bac : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000ce049 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008b29f : or eax, dword ptr [rax] ; ret
0x000000000011e6dc : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001bcb68 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000036848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034a65 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000107552 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x0000000000107555 : or eax, esi ; or rax, rdi ; ret
0x000000000007c884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000019d511 : or ebp, ecx ; jmp qword ptr [rax]
0x00000000001bc442 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000008392a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c190e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006ffb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010c56b : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ffa17 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000110c3d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ed1fb : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007d0a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000a66c3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000cd98b : or edi, dword ptr [rax + 0xfde8] ; jne 0xcd964 ; ret
0x000000000010e98c : or edi, dword ptr [rax + 1] ; ret
0x000000000012dd64 : or edi, dword ptr [rax + 2] ; ret
0x00000000001132c4 : or edi, dword ptr [rax + 7] ; ret
0x0000000000045b6a : or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045af6 : or edi, dword ptr [rax] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000017433d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000aa057 : or edi, edi ; loope 0xaa0ca ; nop dword ptr [rax + rax] ; ret
0x00000000001953a9 : or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195409 : or edi, esp ; jmp qword ptr [rax]
0x000000000012b9a4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000195405 : or esp, edi ; jmp qword ptr [rax]
0x0000000000035f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000168b75 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168bf7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003577c : or rax, 0xffffffffffffffff ; ret
0x00000000001ba316 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014cde2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000107557 : or rax, rdi ; ret
0x0000000000034a64 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a68e : or rax, rdx ; ret
0x0000000000107554 : or rax, rsi ; or rax, rdi ; ret
0x0000000000128681 : out -0x18, eax ; cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001aa2b5 : out 0, eax ; add byte ptr [rax], bl ; out dx, eax ; int1 ; jmp rcx
0x0000000000088d02 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012e736 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087e64 : out 0x48, al ; mov edi, ebx ; call rax
0x0000000000088e57 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000008605e : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000008683b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000000f6581 : out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a6de9 : out 0xee, al ; call qword ptr [rax]
0x000000000006f734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001bd1c8 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x000000000012414d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x0000000000094909 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012e309 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000001aa99d : out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x0000000000197e6d : out dx, al ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x0000000000123bcf : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x123bdc ; ret
0x000000000008392d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000001a63c2 : out dx, al ; call qword ptr [rax]
0x0000000000088e5d : out dx, al ; call rax
0x000000000013362e : out dx, al ; cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x0000000000133638 : out dx, al ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8af
0x000000000013a7a2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130df7 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000133deb : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000018765a : out dx, al ; dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x0000000000187e6d : out dx, al ; int1 ; call rax
0x0000000000187e79 : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187e69 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e49 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187e35 : out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e4d : out dx, al ; int1 ; jmp rax
0x000000000018765e : out dx, al ; jmp qword ptr [rax]
0x000000000008595c : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x81b89
0x0000000000085c7f : out dx, al ; mov rdi, rbx ; call rax
0x00000000000ac0a9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014b43e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000008f394 : out dx, al ; or eax, dword ptr [rax] ; ret
0x00000000001825f8 : out dx, al ; push rsi ; in al, dx ; call qword ptr [rax]
0x00000000001954e5 : out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001886dc : out dx, al ; test esi, ebx ; jmp qword ptr [rax]
0x00000000000aaf8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000101aed : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c023f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001baadd : out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000007ef97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000208f5 : out dx, eax ; call rax
0x000000000012b056 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d45 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134d84 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000198282 : out dx, eax ; inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019811a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000187e7d : out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187e81 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00000000001a75e2 : out dx, eax ; jmp qword ptr [rax]
0x00000000001981d2 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000012ca86 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000048b80 : out dx, eax ; mov rax, rdx ; ret
0x000000000014b53d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017436c : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000859c4 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000195525 : out dx, eax ; sti ; call qword ptr [rax - 0x1f000410]
0x00000000001470ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bf6f1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010c6be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017094e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b294d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b29c5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2965 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b291d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000b6074 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000001960c9 : outsb dx, byte ptr [rsi] ; cld ; jmp rax
0x0000000000187ba9 : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bb5 : outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000187ba5 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bad : outsb dx, byte ptr [rsi] ; int1 ; jmp rax
0x00000000000f6400 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000194f09 : outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000008f75a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000109f5d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000970ad : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b2a0d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b2a85 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23ab
0x00000000001b2ab5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23db
0x00000000001b2ae5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240b
0x00000000001b2a25 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001bbf39 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000001960cd : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187bb9 : outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x000000000018746e : outsd dx, dword ptr [rsi] ; jb 0x18747a ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000000e0cc5 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00000000000abf34 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000009f023 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000084caa : pop r12 ; jmp rax
0x000000000010283f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102859 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010400b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000010400d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000073632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000010400f : pop r14 ; pop r15 ; jmp rax
0x0000000000073634 : pop r14 ; sar rax, 2 ; ret
0x0000000000104011 : pop r15 ; jmp rax
0x00000000000edc5f : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000013582e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001b2a28 : pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x000000000017431c : pop rax ; and eax, 0x1740025 ; ret
0x00000000001359f4 : pop rax ; call rax
0x0000000000195b19 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b55 : pop rax ; cld ; call qword ptr [rax]
0x0000000000195b15 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001a6ae8 : pop rax ; cli ; call qword ptr [rax]
0x00000000001b5968 : pop rax ; fcomi st(6) ; jmp rsi
0x00000000001a6cc8 : pop rax ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000000b9fa9 : pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001aef88 : pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c88 : pop rax ; jb 0x1b0c83 ; jmp qword ptr [rcx]
0x0000000000135836 : pop rax ; jmp rcx
0x000000000019e3c8 : pop rax ; jp 0x19e3b7 ; jmp qword ptr [rcx]
0x00000000001b1e18 : pop rax ; mov ch, 0xf5 ; call rdi
0x000000000007eacd : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000001350f7 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012e78e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101fb8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e510e : pop rax ; or bh, dh ; ret
0x00000000000a4cc4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001b0928 : pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019cf88 : pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001b05c8 : pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x000000000005df1c : pop rax ; pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001073d9 : pop rax ; pop rdi ; call rax
0x0000000000143571 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000033544 : pop rax ; ret
0x00000000000caabc : pop rax ; ret 0x2f
0x000000000019aaf9 : pop rax ; stc ; jmp rsp
0x000000000010198b : pop rax ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ad9e8 : pop rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00000000001bc178 : pop rax ; xchg ebx, edi ; call rcx
0x000000000009e409 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000011018f : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000198e3d : pop rbp ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x0000000000195741 : pop rbp ; cld ; jmp rax
0x000000000002e198 : pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000071fc4 : pop rbp ; jmp rax
0x000000000013d6bb : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000084ca9 : pop rbp ; pop r12 ; jmp rax
0x000000000010283e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102858 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010400a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000010400e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000073633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x0000000000048db2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000194ed5 : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000007915c : pop rbp ; sub rax, rdx ; ret
0x00000000001a163d : pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x0000000000195711 : pop rbx ; cld ; jmp qword ptr [rax]
0x00000000001960d5 : pop rbx ; cld ; jmp rax
0x000000000006f8ca : pop rbx ; jmp rax
0x00000000000bf0b1 : pop rbx ; jp 0xbf0ea ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003a725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000072220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006eff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fc82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000086838 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x0000000000071fc3 : pop rbx ; pop rbp ; jmp rax
0x0000000000084ca8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000010283d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102857 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007915b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000194f0d : pop rbx ; sti ; call qword ptr [rax]
0x00000000000ad159 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000019b69d : pop rcx ; add al, byte ptr [rax] ; je 0x19b671 ; cli ; jmp rsp
0x000000000014199e : pop rcx ; add dword ptr [rax], eax ; add al, ch ; cdq ; ret 0xffee
0x0000000000196091 : pop rcx ; cld ; jmp rax
0x00000000000662e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000007d87e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000ac9e3 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000f6f92 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005df1d : pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b1acd : pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000014bbcd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001073da : pop rdi ; call rax
0x000000000019572d : pop rdi ; cld ; call qword ptr [rax]
0x0000000000195929 : pop rdi ; cld ; jmp qword ptr [rax]
0x00000000001960a1 : pop rdi ; cld ; jmp rax
0x0000000000104012 : pop rdi ; jmp rax
0x00000000001a15f5 : pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x0000000000110cae : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000ac575 : pop rdx ; test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014bace : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010931c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000195935 : pop rsi ; cld ; call rax
0x0000000000195931 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00000000001960dd : pop rsi ; cld ; jmp rax
0x00000000000cdebe : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c924a : pop rsi ; fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000094aa5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000104010 : pop rsi ; pop r15 ; jmp rax
0x0000000000073635 : pop rsi ; sar rax, 2 ; ret
0x00000000000f9095 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012dd74 : pop rsi ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000147300 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001467b4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c54 : pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x0000000000195945 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000196099 : pop rsp ; cld ; jmp rax
0x00000000001b9554 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000102840 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010285a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000145190 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010400c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000001a0b54 : pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b62
0x00000000001b1154 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a8654 : pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76b8
0x000000000019d554 : pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x0000000000194ed1 : pop rsp ; sti ; call rax
0x000000000019e554 : pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54b ; jmp rsp
0x00000000001aef54 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a587d : popfq ; add byte ptr [rax], al ; add byte ptr [rcx], 0xee ; call qword ptr [rsi]
0x00000000001972b5 : popfq ; add byte ptr [rax], al ; jmp 0x1972c1
0x000000000019996d : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019654d : popfq ; cld ; jmp rax
0x00000000001489e0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bf21c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000001877d8 : push -0x570011ac ; push rbx ; out dx, al ; jmp qword ptr [rax]
0x00000000001118e4 : push -0x74fff86c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000012c46a : push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000012c46c : push 0x19 ; call qword ptr [rax]
0x0000000000081862 : push 0x25 ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000085c7c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000001960f9 : push 0x6a60fffc ; cld ; jmp rax
0x00000000001960fd : push 0xfc ; jmp rax
0x00000000000a68c2 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000194e4f : push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194e6f : push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x000000000019592f : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e1b : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196313 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x000000000019507f : push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195b83 : push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597f : push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000194f0b : push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194def : push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x000000000019a9fb : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000187dcb : push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000188e9b : push qword ptr [rax - 0x24] ; call rax
0x00000000001952d3 : push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019526f : push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952ef : push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x0000000000189f9b : push qword ptr [rax - 0x2f000a7f] ; mov dr0, ebp ; jmp rsi
0x0000000000187fb7 : push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x0000000000187e67 : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187df3 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000196357 : push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196543 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000060dbb : push qword ptr [rax - 0x77] ; ret
0x0000000000195e4b : push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001954eb : push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000187f77 : push qword ptr [rax - 1] ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f5f : push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x000000000019553f : push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e2f : push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954b3 : push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x000000000019549b : push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000194ddf : push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194e8f : push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x0000000000195273 : push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000017584b : push qword ptr [rax] ; jmp 0x175853
0x00000000000a56cf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000019556f : push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000194e67 : push qword ptr [rax] ; sub bl, bh ; call rax
0x00000000001955f7 : push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x000000000019528f : push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x000000000007ba4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000048b7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000484c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000072cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000195db7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x00000000000cf38b : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000134d52 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or cl, ch ; ret 0xf382
0x0000000000075f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000007b596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e84c6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000188fe7 : push qword ptr [rdi] ; fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x00000000001892e7 : push qword ptr [rdx] ; push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000109979 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000018870b : push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000188feb : push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000071c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000112ee4 : push rax ; adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x000000000012c6fd : push rax ; adc dh, dh ; ret 0x7401
0x000000000008156d : push rax ; adc dh, dh ; ret 0xf0f
0x000000000018802b : push rax ; add al, 0xf2 ; call qword ptr [rax]
0x00000000000819e6 : push rax ; add al, ch ; ret
0x0000000000195498 : push rax ; add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a0b55 : push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b61
0x0000000000187f97 : push rax ; add dl, dh ; jmp qword ptr [rax]
0x0000000000077f5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001b0bc5 : push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0bf5 : push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf6 ; jmp qword ptr [rcx]
0x00000000001b0b35 : push rax ; add dword ptr [rax], eax ; js 0x1b0bb0 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b4d : push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b4e ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000009574f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x0000000000187fc3 : push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x000000000018800b : push rax ; add esi, edx ; call qword ptr [rax]
0x0000000000195393 : push rax ; add esp, edi ; call rax
0x000000000013bbc9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b827 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000141021 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b2920 : push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000218e8 : push rax ; call rbx
0x00000000001bb550 : push rax ; clc ; call qword ptr [rbx]
0x0000000000195b51 : push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000195b11 : push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000004b829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001b1ad0 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000019527b : push rax ; fdiv st(3), st(0) ; call rax
0x00000000001952c0 : push rax ; fdivp st(3) ; jmp qword ptr [rax]
0x0000000000195293 : push rax ; fdivr st(3) ; call rax
0x00000000001952f7 : push rax ; fsincos ; call rax
0x0000000000189145 : push rax ; hlt ; call rcx
0x00000000001890fb : push rax ; hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x0000000000189141 : push rax ; hlt ; inc edi ; push rax ; hlt ; call rcx
0x00000000001892e9 : push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000187e03 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001954d0 : push rax ; in eax, -5 ; call qword ptr [rax - 0x1f000417]
0x00000000001b0ee0 : push rax ; jbe 0x1b0edb ; jmp qword ptr [rcx]
0x000000000019605c : push rax ; jge 0x19605e ; call rax
0x0000000000196064 : push rax ; jl 0x196066 ; call rax
0x00000000001a0a21 : push rax ; jmp 0x1a0a25
0x000000000019606c : push rax ; jnp 0x19606e ; call rax
0x00000000001b11d0 : push rax ; jnp 0x1b11cb ; jmp qword ptr [rcx]
0x000000000019607c : push rax ; jns 0x19607e ; call rax
0x0000000000196074 : push rax ; jp 0x196076 ; call rax
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000196124 : push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x000000000005f10a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000135816 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001132e6 : push rax ; mov rsi, rdx ; call rax
0x0000000000196353 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x000000000007ee42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000081ef2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081e65 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x000000000014509c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a7a1 : push rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000187e77 : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb3 : push rax ; outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000194676 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000195740 : push rax ; pop rbp ; cld ; jmp rax
0x00000000000acb0e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019654c : push rax ; popfq ; cld ; jmp rax
0x0000000000195b4f : push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x000000000019597b : push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195b8c : push rax ; push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x000000000018952b : push rax ; push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000000080d8 : push rax ; ret
0x00000000000c0201 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3194 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000195353 : push rax ; sar ebx, -1 ; ret
0x0000000000194e3f : push rax ; sbb bl, bh ; jmp rax
0x000000000007c886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001100a2 : push rax ; sbb dh, dh ; ret 0x7508
0x00000000001149e5 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f5b51 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000195617 : push rax ; sub bh, ah ; call rax
0x000000000018b05b : push rax ; sub dl, bh ; jmp rax
0x000000000019567b : push rax ; sub edi, esp ; jmp rax
0x0000000000195573 : push rax ; sub esp, edi ; call rax
0x00000000001955f4 : push rax ; sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001ae200 : push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195c2c : push rax ; test edi, esp ; jmp rax
0x00000000001adb60 : push rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x0000000000195bd0 : push rax ; xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000007bfcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000001a94c0 : push rax ; xor cl, dh ; jmp qword ptr [rcx]
0x0000000000195b8f : push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000000e2410 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2435 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000004950f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f244d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195b31 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b2d : push rbp ; cld ; call qword ptr [rax]
0x00000000000edca8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000e2fd7 : push rbp ; jno 0xe2fdf ; dec dword ptr [rax - 0x77] ; ret
0x00000000001146c4 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000149b28 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000113e64 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000001142d2 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x0000000000111668 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000008eb1a : push rbp ; xor rax, rax ; ret
0x00000000000891d1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000b6849 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105de1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000db207 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000085f7f : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0edd : push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ede ; jmp qword ptr [rcx]
0x0000000000110a3c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000126689 : push rbx ; and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000195b3d : push rbx ; cld ; call qword ptr [rax]
0x0000000000195981 : push rbx ; cld ; jmp rax
0x0000000000195b81 : push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597d : push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000189531 : push rbx ; hlt ; call rax
0x00000000000ac54c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000045b69 : push rbx ; or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001877dd : push rbx ; out dx, al ; jmp qword ptr [rax]
0x00000000000891d5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000144373 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144389 ; xor eax, eax ; ret
0x00000000001443a3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443b9 ; xor eax, eax ; ret
0x00000000001443d3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443e9 ; xor eax, eax ; ret
0x0000000000144403 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144419 ; xor eax, eax ; ret
0x0000000000078771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001322d5 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000b7956 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b0c3d : push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0c6d : push rcx ; add dword ptr [rax], eax ; jb 0x1b0c6e ; jmp qword ptr [rcx]
0x00000000001b0c0d : push rcx ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c85 : push rcx ; add dword ptr [rax], eax ; pop rax ; jb 0x1b0c86 ; jmp qword ptr [rcx]
0x00000000001b0ccd : push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000009ede9 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee68 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000187f7d : push rcx ; call rax
0x0000000000195b8d : push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000187f79 : push rcx ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f6d : push rcx ; jmp qword ptr [rax]
0x000000000018765d : push rcx ; out dx, al ; jmp qword ptr [rax]
0x000000000003d31f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000a9f40 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000019b61d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b625 : push rdi ; add al, byte ptr [rax] ; ret
0x00000000000a9bea : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c48 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000108a5a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000195b21 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b1d : push rdi ; cld ; call qword ptr [rax]
0x0000000000135895 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000886da : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a9c8c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cca : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000013be73 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010f536 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000001358dd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007400f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000001b0d8d : push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0b ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d15 : push rdx ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x0000000000195b85 : push rdx ; cld ; jmp rax
0x0000000000189535 : push rdx ; hlt ; call rax
0x000000000018952d : push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000188708 : push rdx ; mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000089676 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000120652 : push rdx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001123e4 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000144433 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144449 ; xor eax, eax ; ret
0x0000000000144463 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144479 ; xor eax, eax ; ret
0x00000000000720a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000075be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x00000000000f95c6 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b119d : push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b11b5 : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b1155 : push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b110d : push rsi ; add dword ptr [rax], eax ; nop ; jp 0x1b110e ; jmp qword ptr [rcx]
0x00000000001b11cd : push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b11ce ; jmp qword ptr [rcx]
0x00000000001b1125 : push rsi ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195b29 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b25 : push rsi ; cld ; call qword ptr [rax]
0x00000000001000b2 : push rsi ; cmc ; dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x00000000001825f9 : push rsi ; in al, dx ; call qword ptr [rax]
0x0000000000094b2d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000eef5f : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001b0fa5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fa6 ; jmp qword ptr [rbx]
0x0000000000198d7d : push rsp ; add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x00000000001bad4c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b074c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eea1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010ed9d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000012c7b8 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000001bb8b1 : push rsp ; clc ; call qword ptr [rax]
0x0000000000195b39 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b35 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb54c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6ba9 : push rsp ; cli ; call qword ptr [rax]
0x00000000001a244c : push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x00000000001a2c4c : push rsp ; jno 0x1a2c56 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x000000000009f12b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001095e4 : push rsp ; lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a754c : push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001b294c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b4c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b4f ; jmp qword ptr [rcx]
0x00000000001a8c4c : push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001abf94 : pushfq ; add al, 1 ; add byte ptr [rax], cl ; call rcx
0x000000000019b29c : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x00000000001b3b94 : pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000008638d : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001af994 : pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001bc464 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000db20f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000196511 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001b5f94 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x0000000000147cc0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001972b4 : pushfq ; popfq ; add byte ptr [rax], al ; jmp 0x1972c2
0x000000000019749c : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x00000000000f907a : rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001bad50 : rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001a0a20 : rcl byte ptr [rax - 0x15], 1 ; call rdx
0x0000000000189534 : rcl byte ptr [rdx - 0xc], 1 ; call rax
0x00000000000f5b50 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000019573c : rcr byte ptr [rbp - 4], 0xff ; push rax ; pop rbp ; cld ; jmp rax
0x0000000000194ed4 : rcr byte ptr [rbp - 5], 1 ; jmp qword ptr [rax]
0x000000000006fb6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001956b0 : rcr byte ptr [rdx], 1 ; cld ; jmp qword ptr [rax]
0x00000000001956bc : rcr byte ptr [rsi], 0xfc ; call qword ptr [rax]
0x0000000000123de8 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9a : rep stosq qword ptr [rdi], rax ; ret
0x00000000001a8625 : retf ; add byte ptr [rax], al ; call 0x131a7687
0x00000000001a8655 : retf ; add byte ptr [rax], al ; call 0x131a76b7
0x00000000001a8685 : retf ; add byte ptr [rax], al ; call 0x131a76e7
0x00000000001a86b5 : retf ; add byte ptr [rax], al ; call 0x131a7717
0x0000000000102d3e : retf ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4c ; call rbx
0x0000000000102d3d : retf ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4d ; call rbx
0x0000000000143663 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x000000000009ec6c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009f0cd : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000ada9b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003a6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000110bbd : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009f662 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bd832 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008ba02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bc0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000006632c : rol byte ptr [rax + rcx*2], 1 ; ret
0x00000000001240f9 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000ac94d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016e77d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a7b35 : rol byte ptr [rax], 0 ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x0000000000187f94 : rol byte ptr [rax], 0xf2 ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x00000000000bc608 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000105447 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7f40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003569c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000195c28 : rol byte ptr [rbp - 0x7aaf0004], 0xfc ; jmp rax
0x00000000000abf92 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000122ac6 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000188008 : rol byte ptr [rbx], 1 ; push rax ; add esi, edx ; call qword ptr [rax]
0x0000000000103197 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000abf72 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000004606a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000187fbc : rol byte ptr [rcx], 0xf2 ; jmp rax
0x00000000000f6a0c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010aa6d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000abfd2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000188040 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188044 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188028 : rol byte ptr [rdx + rsi*8], 1 ; push rax ; add al, 0xf2 ; call qword ptr [rax]
0x0000000000195e40 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00000000000abf82 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000187fe4 : rol byte ptr [rdx], 0xf2 ; jmp rax
0x00000000001073d5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd227 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002e50e : rol byte ptr [rip + 0x788d4800], cl ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000abfc2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d7a41 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000195324 : rol dh, 0xfb ; call qword ptr [rax]
0x0000000000195318 : rol dl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000abf1c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110b91 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000001a7c3d : rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x00000000001a7c25 : rol dword ptr [rax], 0 ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8c35 : rol dword ptr [rax], 1 ; add byte ptr [rax], bh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a8c4d : rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x000000000006bcf8 : rol dword ptr [rax], 1 ; ret
0x0000000000066328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000111f31 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a7e69 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000123f5e : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000111f30 : rol dword ptr fs:[rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000360c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008b459 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008b458 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000035f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008eb62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8eba9 ; add rax, rdi ; ret
0x000000000008b8b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a128e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007442a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013bd6d : ror byte ptr [rax + 0x39], 0xca ; je 0x13bd87 ; ret
0x00000000000fcdef : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce27 ; ret
0x0000000000114a68 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6a0e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f6c9d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048f16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000114988 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3fb0 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bc400 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115aa2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000128ecc : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000097967 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047fd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000009f213 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000965ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008d459 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000123f33 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000af121 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b81d6 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000042205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000ae5c5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008b8b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000df820 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017cfc8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008ece5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000aa84c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f35a8
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001096b6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005715a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000c0202 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000bb5f8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cdbb8 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008eb22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008eb52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f102 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008eb42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000008217b : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000cf38d : ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000010a3f1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c6108 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000007ba0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000048db3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009ed49 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012e269 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12e20b ; xor eax, eax ; pop rbx ; ret
0x0000000000097964 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000132d88 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000115992 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013a749 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x000000000008810c : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000013fffa : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000003b35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078f65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bf1f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000052005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x000000000012f8e6 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000872a2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001323b9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007db6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007a391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00000000001024ab : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000773e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000954d1 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003adac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b2e1 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137096 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136e1e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e85 ; ret
0x00000000000f8920 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000134d54 : ror byte ptr [rax - 0x7d], 0xc4 ; or cl, ch ; ret 0xf382
0x0000000000143630 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001337cd : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013c31a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001221d6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f162 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f142 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f122 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f6e3e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082c35 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2917454
0x00000000000c3195 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0cc6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fdad5 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5273 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6476 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000bee4e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077ccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007818a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001178da : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000aff1a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008d7b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000019d510 : ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x000000000004745f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bd9ed : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007573c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000970aa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000007638c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084ab5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009f08c : ror byte ptr [rdi], 0x85 ; jge 0x9f09a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086641 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4cc1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000cdbb5 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000007f529 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c18fb : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000010af1 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195378 : ror ch, 0xfb ; call qword ptr [rax]
0x000000000019536c : ror cl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000074143 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000c31dc : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cd3b1 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000014a745 : ror dword ptr [rax + 1], -8 ; ret
0x000000000014a609 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014a85e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000013f2c7 : ror dword ptr [rax + 1], cl ; ret
0x000000000010a1e4 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000012ee76 : ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x00000000000de82e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000dab7c : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049da3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009ed35 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000105ded : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dcbc7 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x0000000000142d41 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000014dc32 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000071bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x000000000003a178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c15c5 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000e56ef : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x00000000000dcbc4 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000009f025 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000016efe8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f6f4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001705f0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f784 : ror dword ptr [rdi], -0x7b ; je 0x16f794 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f27b : ror dword ptr [rdi], -0x7b ; jno 0x16f290 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f343 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016efc0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00000000001b5965 : sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x0000000000095a5f : sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196585 : sahf ; cld ; call rax
0x0000000000196545 : sahf ; cld ; jmp rax
0x000000000014b58e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000195710 : sahf ; pop rbx ; cld ; jmp qword ptr [rax]
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000084122 : sahf ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004baae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000896c3 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000ac71f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000cf261 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000001369a5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x0000000000114a77 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012c1e3 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de01 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001340c4 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000138279 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000014a740 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000aa380 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000012cc4c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff212 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x0000000000114a66 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6aa1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001035a2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x000000000009f1ab : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000013dd37 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000132dea : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132e08 ; call rax
0x0000000000138f6a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138f88 ; call rax
0x0000000000139683 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1396a1 ; call rax
0x0000000000134fce : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135044 ; call rax
0x00000000001359ee : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135a54 ; call rax
0x0000000000195538 : sal ch, 1 ; sti ; jmp qword ptr [rax]
0x00000000001954f0 : sal dl, 0xfb ; call qword ptr [rax]
0x0000000000123de5 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ba08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001951cc : sal dword ptr [rdi - 0x27e70003], -5 ; jmp rax
0x00000000001951a8 : sal dword ptr [rdi - 0x483e0003], -3 ; call qword ptr [rax]
0x0000000000195188 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp qword ptr [rax]
0x0000000000188e99 : sal ebx, 1 ; push qword ptr [rax - 0x24] ; call rax
0x00000000001a91b5 : salc ; add byte ptr [rax], al ; test al, 0x1f ; int1 ; call qword ptr [rsi]
0x0000000000170906 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000019a49d : salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001132e9 : salc ; call rax
0x0000000000112b53 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b25
0x00000000000ac739 : salc ; mov rax, rdi ; ret
0x00000000000c52d1 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000001952f1 : salc ; sti ; jmp qword ptr [rax]
0x00000000000368ae : salc ; xlatb ; cmp byte ptr [rax], al ; ret
0x0000000000061b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005ebe8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000120f30 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195349 : sar bl, cl ; jmp rax
0x0000000000121d93 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x00000000001219c1 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x0000000000140c62 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cdbcf : sar byte ptr [rax + 1], cl ; ret
0x0000000000085817 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000001a3820 : sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000183eff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000196060 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x19606a ; call rax
0x0000000000187f4c : sar ch, 0xf1 ; jmp rax
0x0000000000195544 : sar cl, 0xfb ; call qword ptr [rax]
0x0000000000187f68 : sar dh, 1 ; int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000000d97d5 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd97f2
0x000000000009fae3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9faee ; ret
0x00000000000a0236 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa0241 ; ret
0x00000000000a0983 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa098e ; ret
0x00000000000fea4b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000fe5b2 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000075660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000195315 : sar ebx, -1 ; rol dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195345 : sar ebx, 1 ; call qword ptr [rax - 0x1f00042e]
0x000000000019534d : sar ebx, cl ; jmp qword ptr [rax]
0x000000000003a647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000003478c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000734f8 : sar rax, 2 ; ret
0x000000000011905c : sar rax, 6 ; ret
0x00000000000f68d9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x000000000010f738 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10f764 ; mov rdx, r8 ; jmp 0x10f754
0x00000000001b0a14 : sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d14 : sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e14 : sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b14 : sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b243c
0x00000000001b6614 : sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d53
0x00000000000d59b3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a7d14 : sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001ab314 : sbb al, 0xf8 ; add byte ptr [rax], al ; call 0x111aa559
0x00000000001956f5 : sbb al, 0xfc ; jmp rax
0x00000000001ad7cd : sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001ad7ed : sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000001951d0 : sbb al, bl ; sti ; jmp rax
0x000000000019d50d : sbb al, byte ptr [rax] ; add al, al ; or ebp, ecx ; jmp qword ptr [rax]
0x000000000019d555 : sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d525 : sbb al, byte ptr [rax] ; add al, cl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d53d : sbb al, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001a2a85 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0xd], cl ; in eax, dx ; jmp qword ptr [rax]
0x000000000004b9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000001956b1 : sbb bh, ah ; jmp qword ptr [rax]
0x00000000000d596a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001a6b79 : sbb bh, dl ; call qword ptr [rax]
0x0000000000194e41 : sbb bl, bh ; jmp rax
0x0000000000194e3d : sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x000000000012ee72 : sbb byte ptr [r8 + 1], cl ; ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x000000000013c186 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000076b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007eed3 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d6366 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000143570 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x0000000000117883 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b1db
0x000000000013bde2 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013d7ed : sbb byte ptr [rax + 1], cl ; ret
0x0000000000113258 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012ee73 : sbb byte ptr [rax + 1], cl ; ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x00000000000c92b2 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dd5ca : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000028024 : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4367 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f000a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00000000000891d6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000073f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b22ba : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078b09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c9b93 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f9096 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009490e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000084387 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009490d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001b0ad8 : sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cae69 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d87f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bc687 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc6df : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c187 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000773e6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a9e65 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e87 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012c7ba : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137e21 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x0000000000194ed0 : sbb byte ptr [rbx + rdi*8 - 1], 0xd0 ; pop rbp ; sti ; jmp qword ptr [rax]
0x00000000000ceef6 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000001142d3 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000001956ac : sbb byte ptr [rcx], 0xfc ; call rax
0x00000000000f0004 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004c
0x00000000001178d8 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000012e318 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000004b78c : sbb byte ptr [rsi], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000140e8d : sbb ch, byte ptr [rax] ; add bl, dh ; ret
0x0000000000116852 : sbb ch, byte ptr [rcx - 0xd] ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000f658e : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000001293e3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a68bf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014580d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014797d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f09 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145719 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b53a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad5a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014518d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014749d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001454cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001457e9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aef9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001458b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147ffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001477dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014819d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014566d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014525d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b3ea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac0a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd1a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014573d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001472fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144fcf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014532d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000147433 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148133 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c53 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2eb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc1b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014559d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148473 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147293 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b43b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac5b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000102a8a : sbb cl, dh ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102a9a ; call rbx
0x0000000000148c38 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5943 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x0000000000105da6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x0000000000140374 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000019d4ad : sbb dword ptr [rax], eax ; add al, al ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d4c5 : sbb dword ptr [rax], eax ; add al, cl ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000148bc1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c39 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000116233 : sbb dword ptr [rbx + rax], edi ; ret
0x00000000000a7fde : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000047062 : sbb eax, 0x147694 ; mov rax, rbx ; pop rbx ; ret
0x00000000001956b9 : sbb eax, 0x1ec0fffc ; cld ; call qword ptr [rax]
0x0000000000194e8d : sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x00000000000a6949 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000001132e2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a809d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001ad80d : sbb eax, 0x66a00001 ; stc ; call qword ptr [rax]
0x0000000000039955 : sbb eax, 0x854d0005 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105e2a : sbb eax, 0x888cc ; mov rax, rbx ; pop rbx ; ret
0x000000000012782a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00000000001489e1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a59 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000194e45 : sbb ebx, edi ; call rax
0x00000000000fef35 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x0000000000054d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012cc51 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001956f1 : sbb edi, esp ; call qword ptr [rax - 0x1f0003e4]
0x0000000000174889 : sbb esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000001956ad : sbb esp, edi ; call rax
0x000000000019d53c : sbb r8b, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000016cbcb : sbb rax, -1 ; ret
0x0000000000146962 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4d27 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008e3dd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001110d5 : scasb al, byte ptr [rdi] ; loope 0x1110e5 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014ba7d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a6ab5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x1a6abf ; stc ; call qword ptr [rax]
0x00000000001a6ae5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x000000000007b5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000008de7d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000188cdd : scasd eax, dword ptr [rdi] ; call rax
0x00000000001048d6 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e4 ; call rbx
0x000000000009d4ee : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000010a1e3 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000138e84 : scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138e99 ; ret
0x000000000003041d : setae byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000096005 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1a2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000195704 : shl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x00000000001ad7d0 : shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x000000000017e1f0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000012411a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x000000000012414c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000036082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x000000000012414b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000187df8 : shr ah, 0xf1 ; call rax
0x0000000000187dfc : shr ah, 1 ; int1 ; jmp rax
0x0000000000187d64 : shr al, 0xf1 ; jmp rax
0x0000000000143dd1 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018b058 : shr byte ptr [rax], 0xfa ; push rax ; sub dl, bh ; jmp rax
0x00000000000bd5ee : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c222f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000196338 : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x0000000000194e6c : shr byte ptr [rcx], 1 ; sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000187ba8 : shr byte ptr [rsi - 0xf], 0xff ; shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000187bac : shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000187e2c : shr ch, 0xf1 ; jmp rax
0x0000000000186c5d : shr ch, cl ; call rax
0x00000000000b63b8 : shr cl, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000187d84 : shr cl, 0xf1 ; jmp rax
0x0000000000187e6c : shr dh, 0xf1 ; call rax
0x0000000000187e4c : shr dh, 0xf1 ; jmp rax
0x0000000000187e70 : shr dh, 1 ; int1 ; jmp rax
0x00000000001954e4 : shr dh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187da4 : shr dl, 0xf1 ; jmp rax
0x0000000000115533 : shr dword ptr [rbx], 1 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x115549 ; ret
0x0000000000035f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000035f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000013c6ba : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000347bf : shr rax, 0x3f ; ret
0x0000000000107527 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012411f : shr rax, 4 ; ret
0x000000000013c6b9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000009ea91 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea01 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009970e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009bd2c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000107513 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017d3c9 : sldt word ptr [rax] ; ret
0x000000000011e2a2 : stc ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012e31b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001ab42d : stc ; add byte ptr [rax], al ; nop ; call rbx
0x00000000001a6aba : stc ; call qword ptr [rax]
0x00000000000f907c : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000088376 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f34f2 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f4b33 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000896bf : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8ee2 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000f95c2 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x0000000000127ab2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e97b : stc ; mov rax, rdi ; ret
0x000000000019a9fa : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000048b7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000195545 : stc ; sti ; call qword ptr [rax]
0x0000000000046075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000cd98e : std ; add byte ptr [rax], al ; jne 0xcd961 ; ret
0x0000000000195076 : std ; call qword ptr [rax + 0x20fffda6]
0x0000000000194f8a : std ; call qword ptr [rax]
0x00000000000f6401 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e7f9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000195082 : std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x0000000000195072 : std ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x000000000019b99a : std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001951aa : std ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195186 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019518a : std ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001951ca : std ; inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187f49 : std ; int1 ; inc eax ; std ; int1 ; jmp rax
0x0000000000187f35 : std ; int1 ; jmp qword ptr [rax]
0x0000000000187f4d : std ; int1 ; jmp rax
0x0000000000194f86 : std ; jmp qword ptr [rax]
0x0000000000195086 : std ; jmp rax
0x00000000001951ce : std ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187c9a : std ; lcall ptr [rax] ; ret 0xfffd
0x000000000019507e : std ; push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000084112 : std ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000001035a0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000194f12 : sti ; call qword ptr [rax + 0x10fffb74]
0x0000000000194f1a : sti ; call qword ptr [rax + 0x10fffb77]
0x0000000000194f22 : sti ; call qword ptr [rax + 0x10fffb7a]
0x0000000000194f2a : sti ; call qword ptr [rax + 0x10fffb7d]
0x0000000000194f32 : sti ; call qword ptr [rax + 0x10fffb80]
0x0000000000194f3a : sti ; call qword ptr [rax + 0x10fffb83]
0x0000000000194f42 : sti ; call qword ptr [rax + 0x10fffb86]
0x0000000000195526 : sti ; call qword ptr [rax - 0x1f000410]
0x00000000001954d2 : sti ; call qword ptr [rax - 0x1f000417]
0x0000000000195346 : sti ; call qword ptr [rax - 0x1f00042e]
0x000000000019535a : sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000194f02 : sti ; call qword ptr [rax - 0x1f000493]
0x0000000000194df6 : sti ; call qword ptr [rax]
0x0000000000194dd2 : sti ; call rax
0x00000000000bea6e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cdec0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dcdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f42e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000001951ea : sti ; inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x0000000000194eaa : sti ; inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000194efe : sti ; inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000195432 : sti ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000194df2 : sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195522 : sti ; inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019522a : sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195226 : sti ; inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195256 : sti ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x00000000001952d6 : sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195532 : sti ; inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x00000000001954de : sti ; inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x0000000000195366 : sti ; inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195312 : sti ; inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194ece : sti ; inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195342 : sti ; inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195356 : sti ; inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x00000000001951e6 : sti ; inc dword ptr [rax - 0x7f00041d] ; in eax, -5 ; call qword ptr [rax]
0x0000000000194de2 : sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000195452 : sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e4a : sti ; inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000194e3a : sti ; inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194e8a : sti ; inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000194eb2 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000195542 : sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x00000000001954ee : sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000194e32 : sti ; jmp qword ptr [rax]
0x000000000018c5b2 : sti ; jmp rax
0x000000000019538e : sti ; ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x000000000009e95d : sti ; mov rax, rdi ; ret
0x0000000000194e4e : sti ; push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194e6e : sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000194f0a : sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194dee : sti ; push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x00000000001952d2 : sti ; push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019526e : sti ; push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952ee : sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x00000000001954ea : sti ; push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019553e : sti ; push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e2e : sti ; push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954b2 : sti ; push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194dde : sti ; push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194e8e : sti ; push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x0000000000195272 : sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000194e66 : sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x000000000019528e : sti ; push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x000000000019527a : sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000195292 : sti ; push rax ; fdivr st(3) ; call rax
0x00000000001952f6 : sti ; push rax ; fsincos ; call rax
0x0000000000195352 : sti ; push rax ; sar ebx, -1 ; ret
0x0000000000194e3e : sti ; push rax ; sbb bl, bh ; jmp rax
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00000000000b05bf : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd9ade
0x00000000000b5a67 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdef86
0x00000000001027f0 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000f003c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001235e2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019749d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x0000000000188acd : stosb byte ptr [rdi], al ; call rax
0x0000000000196135 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x0000000000029c42 : stosb byte ptr [rdi], al ; cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000011e6db : stosb byte ptr [rdi], al ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001a66e5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66df ; jmp qword ptr [rdx]
0x00000000001a661d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; loopne 0x1a6695 ; out dx, al ; jmp rdx
0x00000000001b6615 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; call 0xffffffffd21b5d52
0x0000000000196131 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000196329 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x0000000000186c5c : stosd dword ptr [rdi], eax ; shr ch, cl ; call rax
0x0000000000123de9 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9b : stosq qword ptr [rdi], rax ; ret
0x0000000000195675 : sub ah, bh ; call qword ptr [rax]
0x0000000000195591 : sub ah, bh ; call rax
0x0000000000195551 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195571 : sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x00000000000fe2eb : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8ca4] ; ret
0x00000000000fe12b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8e64] ; ret
0x00000000001025a5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe4b9 : sub al, 0 ; mov rdx, rax ; jmp 0xfe453
0x000000000019d124 : sub al, 0x16 ; add byte ptr [rax], al ; call 0x1819ba3c
0x000000000019e524 : sub al, 0x2a ; add byte ptr [rax], al ; cwde ; jl 0x19e51b ; jmp qword ptr [rsi]
0x00000000000abc02 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000001b0924 : sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1124 : sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a24 : sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000abc05 : sub al, 0x75 ; pop rax ; ret
0x000000000016efc3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a7c24 : sub al, 0xc1 ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8624 : sub al, 0xcb ; add byte ptr [rax], al ; call 0x131a7688
0x00000000001a9924 : sub al, 0xde ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000000adf8e : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019bc24 : sub al, 1 ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001ae7cd : sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x000000000019af9d : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001bc024 : sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x0000000000033ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000019e555 : sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54a ; jmp rsp
0x0000000000120653 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011fe76 : sub al, byte ptr [rax] ; call rax
0x000000000011ab20 : sub al, byte ptr [rax] ; jne 0x11ab38 ; jmp 0x11ab52
0x000000000011cbb8 : sub al, byte ptr [rax] ; jne 0x11cbd0 ; jmp 0x11cbea
0x000000000011fe29 : sub al, byte ptr [rax] ; jne 0x11fe3f ; jmp 0x11fe59
0x0000000000120f95 : sub al, byte ptr [rax] ; ret
0x00000000001282fe : sub al, byte ptr [rax] ; test eax, eax ; je 0x12830e ; ret
0x000000000005c6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00000000001ae5cd : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004c4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000195619 : sub bh, ah ; call rax
0x0000000000195555 : sub bh, ah ; jmp rax
0x0000000000195679 : sub bh, ah ; push rax ; sub edi, esp ; jmp rax
0x0000000000194e69 : sub bl, bh ; call rax
0x0000000000076b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000013c151 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001408d4 : sub byte ptr [r8], al ; call qword ptr [rax]
0x0000000000140ee7 : sub byte ptr [r8], r8b ; call qword ptr [rax]
0x00000000000f5c07 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001216a4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000001358de : sub byte ptr [rax + 1], bh ; ret
0x00000000000741df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000013c152 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018695c : sub byte ptr [rax - 0x57d70013], ch ; in eax, dx ; call rsi
0x0000000000084fb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000132548 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f9e21 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000896c5 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8ee7 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d20c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000713f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e2d94 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000eef60 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00000000001434e0 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000002aca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000001382b5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001408d5 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000195390 : sub byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x0000000000138e85 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138e98 ; ret
0x0000000000140e8e : sub byte ptr [rax], al ; ret
0x000000000013dd34 : sub byte ptr [rax], al ; test eax, eax ; je 0x13dd48 ; xor eax, eax ; ret
0x0000000000140e68 : sub byte ptr [rax], al ; test eax, eax ; jne 0x140e81 ; xor eax, eax ; pop rbx ; ret
0x0000000000144374 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144388 ; xor eax, eax ; ret
0x00000000001443a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443b8 ; xor eax, eax ; ret
0x00000000001443d4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443e8 ; xor eax, eax ; ret
0x0000000000144404 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144418 ; xor eax, eax ; ret
0x0000000000144434 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144448 ; xor eax, eax ; ret
0x0000000000144464 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144478 ; xor eax, eax ; ret
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000140d39 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000019bc28 : sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001b07f8 : sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3bc8 : sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000000819a9 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000001434e1 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000001206d4 : sub byte ptr [rdx], 0 ; call rax
0x000000000004c66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018997c : sub byte ptr [rip + 0x528fff5], al ; cmc ; jmp rax
0x0000000000189a00 : sub byte ptr [rip + 0x590fff5], al ; cmc ; jmp rax
0x0000000000140ee6 : sub byte ptr es:[r8], r8b ; call qword ptr [rax]
0x00000000001954e0 : sub ch, 0xfb ; call rax
0x00000000000f8ee1 : sub cl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000d17bd : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000010e70c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10e6da
0x00000000000ac9e4 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001882cd : sub dh, dl ; call qword ptr [rax]
0x0000000000188251 : sub dh, dl ; jmp qword ptr [rax + 0x20fff229]
0x000000000018b061 : sub dl, bh ; call qword ptr [rax]
0x000000000018b05d : sub dl, bh ; jmp rax
0x000000000018b059 : sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x0000000000064324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012c57d : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000128735 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128749 ; ret
0x00000000001381dc : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dd75 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001289b5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b886 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012c564 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12c576 ; ret
0x0000000000168ab3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000019873d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x000000000014362e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000066500 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1db4 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000170619 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012afe2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000989bd : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x000000000011535e : sub eax, dword ptr [r8] ; cmp rdx, rax ; jne 0x115349 ; ret
0x00000000001095f3 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095e6 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001151c2 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001096d8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000011535f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x115348 ; ret
0x0000000000109572 : sub eax, dword ptr [rax] ; je 0x10957d ; pop rbp ; ret
0x000000000010a305 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000109bdd : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000115aac : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000109524 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114aa4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ab8 ; xor eax, eax ; ret
0x0000000000114ad4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ae8 ; xor eax, eax ; ret
0x0000000000114b04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b18 ; xor eax, eax ; ret
0x0000000000114b34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b48 ; xor eax, eax ; ret
0x0000000000114b64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b78 ; xor eax, eax ; ret
0x0000000000114b94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ba8 ; xor eax, eax ; ret
0x0000000000114bc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bd8 ; xor eax, eax ; ret
0x0000000000114bf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c08 ; xor eax, eax ; ret
0x0000000000114c24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c38 ; xor eax, eax ; ret
0x0000000000114c54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c68 ; xor eax, eax ; ret
0x0000000000114c84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c98 ; xor eax, eax ; ret
0x0000000000114cb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cc8 ; xor eax, eax ; ret
0x0000000000114ce4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cf8 ; xor eax, eax ; ret
0x0000000000114d14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d28 ; xor eax, eax ; ret
0x0000000000114d44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d58 ; xor eax, eax ; ret
0x0000000000114d74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d88 ; xor eax, eax ; ret
0x0000000000114da4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114db8 ; xor eax, eax ; ret
0x0000000000114dd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114de8 ; xor eax, eax ; ret
0x0000000000114e04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e18 ; xor eax, eax ; ret
0x0000000000114e34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e48 ; xor eax, eax ; ret
0x0000000000114e94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ea8 ; xor eax, eax ; ret
0x0000000000114ec4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ed8 ; xor eax, eax ; ret
0x0000000000114ef4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f08 ; xor eax, eax ; ret
0x0000000000114f24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f38 ; xor eax, eax ; ret
0x0000000000114f54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f68 ; xor eax, eax ; ret
0x0000000000114f84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f98 ; xor eax, eax ; ret
0x0000000000114fb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fc8 ; xor eax, eax ; ret
0x0000000000114fe4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ff8 ; xor eax, eax ; ret
0x0000000000115014 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115028 ; xor eax, eax ; ret
0x0000000000115535 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x115547 ; ret
0x00000000000aadc2 : sub eax, dword ptr [rcx + rax*4] ; je 0xaada6 ; ret
0x00000000000734f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000115aab : sub eax, dword ptr es:[rax] ; pop rbp ; ret
0x00000000000347bd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000194e6d : sub ebx, edi ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000035f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000049125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a6601 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aaf8c : sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000194e71 : sub edi, ebx ; call qword ptr [rax]
0x00000000001955f9 : sub edi, esp ; call qword ptr [rax]
0x00000000001955d9 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x000000000019567d : sub edi, esp ; jmp rax
0x000000000007c890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013a183 : sub edx, dword ptr [rbp + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008eb64 : sub edx, eax ; jbe 0x8eba7 ; add rax, rdi ; ret
0x000000000008eb74 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb84 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb94 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000019f6c1 : sub edx, ebp ; jmp rax
0x0000000000188255 : sub edx, esi ; jmp qword ptr [rax]
0x0000000000074012 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000078774 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000142bfa : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000195575 : sub esp, edi ; call rax
0x00000000001955f5 : sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195615 : sub esp, edi ; push rax ; sub bh, ah ; call rax
0x00000000000d30ea : sub r10, rax ; jmp 0xd3105
0x000000000010e70b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e6db
0x0000000000114aa3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114ab9 ; xor eax, eax ; ret
0x0000000000114ad3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114ae9 ; xor eax, eax ; ret
0x0000000000114b03 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114b19 ; xor eax, eax ; ret
0x00000000001151c1 : sub r8d, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001382d5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000822d1 : sub rax, 0x39480108 ; ret
0x0000000000097519 : sub rax, 1 ; jne 0x97518 ; pop rbx ; pop rbp ; ret
0x00000000000aa4d3 : sub rax, 1 ; ret
0x0000000000114b33 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b49 ; xor eax, eax ; ret
0x0000000000114b63 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b79 ; xor eax, eax ; ret
0x0000000000114b93 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114ba9 ; xor eax, eax ; ret
0x0000000000114bc3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114bd9 ; xor eax, eax ; ret
0x0000000000114bf3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c09 ; xor eax, eax ; ret
0x0000000000114c23 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c39 ; xor eax, eax ; ret
0x0000000000114d43 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d59 ; xor eax, eax ; ret
0x0000000000114d73 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d89 ; xor eax, eax ; ret
0x0000000000114da3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114db9 ; xor eax, eax ; ret
0x0000000000114dd3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114de9 ; xor eax, eax ; ret
0x0000000000114e03 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114e19 ; xor eax, eax ; ret
0x0000000000114c53 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c69 ; xor eax, eax ; ret
0x0000000000114c83 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c99 ; xor eax, eax ; ret
0x0000000000114cb3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cc9 ; xor eax, eax ; ret
0x0000000000114ce3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cf9 ; xor eax, eax ; ret
0x0000000000114d13 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d29 ; xor eax, eax ; ret
0x0000000000114e33 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e49 ; xor eax, eax ; ret
0x0000000000114e93 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ea9 ; xor eax, eax ; ret
0x0000000000114ec3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ed9 ; xor eax, eax ; ret
0x0000000000114ef3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f09 ; xor eax, eax ; ret
0x0000000000114f23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f39 ; xor eax, eax ; ret
0x000000000007d0bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000774d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000734f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000014a60d : sub rax, r8 ; ret
0x00000000000ad15a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008b8b8 : sub rax, rdi ; ret
0x000000000003a64d : sub rax, rdx ; ret
0x00000000000347bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172aa6 : sub rax, rdx ; vzeroupper ; ret
0x00000000000aaf8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008eb63 : sub rdx, rax ; jbe 0x8eba8 ; add rax, rdi ; ret
0x0000000000074011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000078773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000195674 : sub spl, dil ; call qword ptr [rax]
0x000000000010739f : syscall ; test rax, rax ; jl 0x1073ee ; je 0x1073b2 ; ret
0x0000000000074153 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d7c4b : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066502 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019a66c : test ah, ch ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x00000000000f1db6 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000138337 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001323d2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136b26 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000011b004 : test al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000d9b18 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001a3db8 : test al, 0x4d ; in eax, dx ; call qword ptr [rax]
0x00000000001877dc : test al, 0x53 ; out dx, al ; jmp qword ptr [rax]
0x00000000001bbf38 : test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000018c15c : test al, 0x89 ; cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000001a9a88 : test al, 0x95 ; int1 ; call qword ptr [rax]
0x000000000018695d : test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x00000000000ac549 : test al, 0xf0 ; jne 0xac5a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac548 : test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000195085 : test al, 0xfd ; jmp rax
0x000000000019a0fc : test al, bl ; add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x0000000000121575 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000195c39 : test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e31 : test bh, ah ; call qword ptr [rax]
0x0000000000046074 : test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000012e31a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000835d3 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x0000000000125583 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cdcda : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001322a5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000003340d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c525f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000135865 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b9e68 : test byte ptr [rax + 0x74db8500], cl ; or bh, byte ptr [rcx] ; ret
0x00000000000ffdf7 : test byte ptr [rax + rax + 0x58b0000], dl ; ret 0x2c73
0x0000000000068469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000012fb06 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000019a4a0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000f6aa3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x0000000000102e61 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001035a4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012a4ce : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013c079 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000019aaf8 : test byte ptr [rax - 7], bl ; jmp rsp
0x00000000001ab105 : test byte ptr [rax], 0 ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab1c5 : test byte ptr [rax], 0 ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000013dfcb : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e3605 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001102ff : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000196e5d : test byte ptr [rax], al ; add ah, dh ; cmp edx, ebp ; jmp rsp
0x0000000000077eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001439aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000170a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a5d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000168c7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a6d1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d720a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000168cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a6d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007cb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000758ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006acca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007f52b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019b15c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x00000000000963dc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001af37c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af386 ; hlt ; jmp qword ptr [rcx]
0x0000000000097b29 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000198284 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x00000000000963f4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000f3fa8 : test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20280
0x0000000000084bde : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000842df : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008676e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000011714f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000879cf : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000affb3 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001027f2 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000c76ea : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000144ff6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e00 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000d17d6 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000121573 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000a66a8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000009601c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096004 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1a1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000001b057c : test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019af9c : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000007d9be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x000000000019ae24 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x00000000001abd7c : test byte ptr [rdx], al ; add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000001acd7c : test byte ptr [rdx], dl ; add dword ptr [rax], eax ; loopne 0x1acd62 ; jmp qword ptr [rcx]
0x000000000013418c : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x00000000000809d6 : test byte ptr [rsi + rax - 0x9bf0000], cl ; ret 0xf01
0x0000000000032e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008b79d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000343b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af97c : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019ac8c : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x00000000001224ee : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000bd9ef : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012e308 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000111407 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dc59a : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000aa4cf : test cl, cl ; jne 0xaa4c8 ; sub rax, 1 ; ret
0x000000000012568c : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f0c4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c18fd : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000170924 : test dl, 0x40 ; jne 0x1708e9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170952 : test dl, 4 ; jne 0x1708e9 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bd86b : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000aa37f : test dl, dl ; jne 0xaa378 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000008f7f9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a69db : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a7eeb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a7deb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000c00b0 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x000000000006960e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005c8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x000000000011c26f : test dword ptr [rax - 0x77], 0x1d8948de ; ret 0x2a
0x000000000005cd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x000000000006f0c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000197f6d : test dword ptr [rax], 0xef1f8400 ; jmp rsp
0x00000000001ab245 : test dword ptr [rax], 0xf22c3800 ; jmp rcx
0x00000000000d7769 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x0000000000085e53 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000dd1d4 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add al, ch ; ret 0xf426
0x0000000000055b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000085547 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006589a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000085546 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000009f08e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abb10 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ac438 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000168b98 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168b78 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168a90 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a7fe0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016f2a7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f6f6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009eff8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000007e600 : test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016889a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016f27d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a65c2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016f18d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f09d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abb57 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000001727d7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000abb27 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000f2102 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000817f2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000a6727 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6707 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000a68c1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7cc9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000001705f2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016efc2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003b9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000168b57 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000172162 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a66e5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a66c5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a65dd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000d7753 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000158ff6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019613d : test eax, 0xa940fffc ; cld ; call rax
0x0000000000196339 : test eax, 0xa950fffc ; cld ; jmp rax
0x00000000001053dc : test eax, eax ; je 0x105480 ; call rax
0x0000000000105553 : test eax, eax ; je 0x105658 ; call rax
0x0000000000115830 : test eax, eax ; je 0x115864 ; call rax
0x000000000011fa65 : test eax, eax ; je 0x11fa75 ; mov rdi, rbx ; call rax
0x000000000011fd5d : test eax, eax ; je 0x11fd6d ; mov rdi, rbx ; call rax
0x000000000012b841 : test eax, eax ; je 0x12b851 ; mov rdi, rsp ; call rax
0x000000000012b92c : test eax, eax ; je 0x12b93c ; mov rdi, rsp ; call rax
0x000000000012c1e2 : test eax, eax ; je 0x12c1f2 ; mov rdi, rbp ; call rax
0x000000000012d273 : test eax, eax ; je 0x12d283 ; mov rdi, r14 ; call rax
0x0000000000132c08 : test eax, eax ; je 0x132c18 ; mov rdi, r12 ; call rax
0x0000000000132de9 : test eax, eax ; je 0x132dfb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001340c3 : test eax, eax ; je 0x1340d3 ; mov rdi, r13 ; call rax
0x00000000001342b6 : test eax, eax ; je 0x1342c6 ; mov rdi, rbp ; call rax
0x00000000001344d6 : test eax, eax ; je 0x1344e6 ; mov rdi, rbp ; call rax
0x0000000000134fcd : test eax, eax ; je 0x134fdf ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000135679 : test eax, eax ; je 0x135689 ; mov rdi, r12 ; call rax
0x00000000001359ed : test eax, eax ; je 0x1359ff ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000138278 : test eax, eax ; je 0x13820a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000138f69 : test eax, eax ; je 0x138f7b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139682 : test eax, eax ; je 0x139694 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000173f3c : test eax, eax ; je 0x173f4b ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x000000000007e072 : test eax, eax ; je 0x7e07c ; call rax
0x0000000000085569 : test eax, eax ; je 0x85573 ; call rax
0x00000000000c758e : test eax, eax ; je 0xc75b0 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc39f : test eax, eax ; je 0xcc3a9 ; call rax
0x00000000000cc581 : test eax, eax ; je 0xcc58e ; call rax
0x00000000000ff211 : test eax, eax ; je 0xff220 ; mov qword ptr [rax], rdx ; ret
0x000000000006acbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x000000000008eb17 : test eax, eax ; jne 0x8eb77 ; xor rax, rax ; ret
0x0000000000022d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e45b5 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000835dd : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000008ea40 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000084ab7 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000ac736 : test ebx, ebx ; jne 0xac718 ; mov rax, rdi ; ret
0x0000000000170912 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000017091f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000ada89 : test ecx, ecx ; jne 0xada48 ; mov rax, rdx ; ret
0x0000000000194f41 : test edi, ebx ; call qword ptr [rax + 0x10fffb86]
0x0000000000195c2d : test edi, esp ; jmp rax
0x000000000008b7fb : test edx, edx ; je 0x8b817 ; bsf rax, rdx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f7 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x00000000000ac94f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xac94f ; ret
0x0000000000170905 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000086643 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b1371 : test esi, ebp ; jmp rax
0x00000000001886dd : test esi, ebx ; jmp qword ptr [rax]
0x000000000008b8c1 : test esi, esi ; jne 0x8b8d0 ; xor rax, rax ; ret
0x00000000001ab244 : test qword ptr [rax], -0xdd3c800 ; jmp rcx
0x0000000000036105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ac735 : test r11d, r11d ; jne 0xac719 ; mov rax, rdi ; ret
0x00000000000ada88 : test r9d, r9d ; jne 0xada49 ; mov rax, rdx ; ret
0x00000000001053db : test rax, rax ; je 0x105481 ; call rax
0x0000000000105552 : test rax, rax ; je 0x105659 ; call rax
0x0000000000115537 : test rax, rax ; je 0x115545 ; ret
0x000000000011582f : test rax, rax ; je 0x115865 ; call rax
0x0000000000117659 : test rax, rax ; je 0x117671 ; add rsp, 8 ; ret
0x000000000011fa64 : test rax, rax ; je 0x11fa76 ; mov rdi, rbx ; call rax
0x000000000011fd5c : test rax, rax ; je 0x11fd6e ; mov rdi, rbx ; call rax
0x000000000012b000 : test rax, rax ; je 0x12aff0 ; xor eax, eax ; pop rbx ; ret
0x000000000012b840 : test rax, rax ; je 0x12b852 ; mov rdi, rsp ; call rax
0x000000000012b92b : test rax, rax ; je 0x12b93d ; mov rdi, rsp ; call rax
0x000000000012c1e1 : test rax, rax ; je 0x12c1f3 ; mov rdi, rbp ; call rax
0x000000000012d272 : test rax, rax ; je 0x12d284 ; mov rdi, r14 ; call rax
0x0000000000132c07 : test rax, rax ; je 0x132c19 ; mov rdi, r12 ; call rax
0x0000000000132de8 : test rax, rax ; je 0x132dfc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001340c2 : test rax, rax ; je 0x1340d4 ; mov rdi, r13 ; call rax
0x00000000001342b5 : test rax, rax ; je 0x1342c7 ; mov rdi, rbp ; call rax
0x00000000001344d5 : test rax, rax ; je 0x1344e7 ; mov rdi, rbp ; call rax
0x0000000000134fcc : test rax, rax ; je 0x134fe0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000135678 : test rax, rax ; je 0x13568a ; mov rdi, r12 ; call rax
0x00000000001359ec : test rax, rax ; je 0x135a00 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001381fc : test rax, rax ; je 0x13820e ; pop rbx ; ret
0x0000000000138f68 : test rax, rax ; je 0x138f7c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139681 : test rax, rax ; je 0x139695 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000173f3b : test rax, rax ; je 0x173f4c ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x000000000007848c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x000000000007e071 : test rax, rax ; je 0x7e07d ; call rax
0x0000000000085568 : test rax, rax ; je 0x85574 ; call rax
0x000000000008b51f : test rax, rax ; je 0x8b539 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc39e : test rax, rax ; je 0xcc3aa ; call rax
0x00000000000cc580 : test rax, rax ; je 0xcc58f ; call rax
0x00000000000fd39b : test rax, rax ; je 0xfd3a8 ; ret
0x00000000000ff210 : test rax, rax ; je 0xff221 ; mov qword ptr [rax], rdx ; ret
0x00000000001073a1 : test rax, rax ; jl 0x1073ec ; je 0x1073b0 ; ret
0x0000000000138ee4 : test rax, rax ; jne 0x138ed6 ; pop rbx ; ret
0x000000000007c843 : test rax, rax ; jne 0x7c83e ; ret
0x000000000007d8d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00000000000895ce : test rax, rax ; jne 0x895c6 ; ret
0x00000000000fe0be : test rax, rax ; jne 0xfe098 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe27f : test rax, rax ; jne 0xfe258 ; xor eax, eax ; pop rbx ; ret
0x000000000008b7fa : test rdx, rdx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b7fa : test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x000000000008b8c0 : test rsi, rsi ; jne 0x8b8d1 ; xor rax, rax ; ret
0x000000000014ddca : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014dc0f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000000329d5 : vpsubsb xmm8, xmm15, xmmword ptr [rbp + rcx*4 + 5] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000197265 : wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x000000000004d3d1 : wait ; imul esi, dword ptr [rdi], 0 ; call rax
0x000000000002cdd1 : wait ; jbe 0x2cde0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a304 : wait ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007cc18 : wait ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195e21 : xchg ah, bh ; call rax
0x0000000000195e1d : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x000000000014580f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146033 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014797f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146123 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f43 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f0b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014571b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b53c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad5c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d85d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000194f45 : xchg bl, bh ; call qword ptr [rax]
0x000000000014d561 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc61 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf61 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c659 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014698b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001484df : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cbf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014518f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014749f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001454cf : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001464e3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000d02dc : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e80f7 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00000000001457eb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aefb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be4d3 : xchg byte ptr [rax], dh ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2d
0x00000000001458bb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001477df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014819f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014566f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001466c3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000001468a3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014525f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b3ec : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac0c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd1c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014573f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001467b3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001472ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144fd1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001460f5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001461e5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146005 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014532f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c906 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147435 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148135 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d806 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf06 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c55 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2ed : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c5fe : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc1d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014559f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000149c8f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aaf : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a487 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493a7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2a7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148475 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147295 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b43d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac5d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000104b2a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000145f15 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d35 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e25 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b9ba3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3fb4 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000005744d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010d0c4 : xchg dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000008638c : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f67c1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000182f0b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000072a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007638f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001a9a89 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x000000000007bf3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011ce22 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000002e197 : xchg eax, ebp ; pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000136e1d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e86 ; ret
0x00000000000ff7c4 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000061b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000007b702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000081567 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000001a7b39 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x0000000000084608 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001a4c6d : xchg eax, ecx ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x000000000008783b : xchg eax, ecx ; mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000148581 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000809e1 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a521d : xchg eax, edi ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000f688c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000009563a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000061ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001a4d3d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000007daba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000016e710 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a7f3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019716d : xchg eax, esi ; add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x00000000000abc96 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x000000000016e7cd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e72b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e77c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bea6d : xchg eax, esi ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000019cc8c : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc97 ; jmp qword ptr [rdi]
0x00000000000e0794 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000e5c86 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525c : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e0792 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000071867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a8c4 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x00000000001b0d8c : xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0c ; cmc ; jmp qword ptr [rcx]
0x00000000000954d0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f891f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c319 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fea4a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000008767a : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001b1409 : xchg ebp, esi ; jmp rax
0x0000000000101aec : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010206c : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105e91 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000104a8b : xchg edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000047d65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000195c19 : xchg esp, edi ; call qword ptr [rax]
0x0000000000195e15 : xchg esp, edi ; jmp qword ptr [rax]
0x00000000000cdfef : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000189569 : xchg esp, esi ; call qword ptr [rax]
0x0000000000074f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000195e20 : xchg spl, dil ; call rax
0x00000000000befe5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a92dd : xlatb ; add byte ptr [rax], al ; jo 0x1a930c ; int1 ; jmp rcx
0x0000000000180219 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000000368be : xlatb ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000368af : xlatb ; cmp byte ptr [rax], al ; ret
0x00000000000ff2f5 : xlatb ; jge 0xff32d ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000115169 : xlatb ; jmp rax
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x000000000009f024 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000195271 : xlatb ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000195291 : xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000195534 : xor ah, 0xfb ; call rax
0x00000000000a5858 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a57ee : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000013ccd1 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a37b0 : xor al, 0 ; add byte ptr [rax], al ; mov esp, 0xe00007c ; ret 0xffe7
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081864 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000081a89 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x000000000019df2c : xor al, 0x24 ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000019f22c : xor al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x000000000009f14b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000001a90a4 : xor al, 0x80 ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000000aac59 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000c52d4 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000001b712c : xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x000000000019a094 : xor al, 0xc2 ; add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x00000000001a832c : xor al, 0xc8 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001a942c : xor al, 0xd9 ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00000000001aac2c : xor al, 0xf1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000001ab42c : xor al, 0xf9 ; add byte ptr [rax], al ; nop ; call rbx
0x0000000000195bd1 : xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000019562d : xor al, 0xfc ; call qword ptr [rax]
0x000000000019564d : xor al, 0xfc ; call rax
0x00000000001aef6d : xor al, 1 ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef85 : xor al, 1 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef25 : xor al, 1 ; add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x00000000000abb28 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000001aef55 : xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004baaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000080fdd : xor al, 2 ; add byte ptr [rax], al ; call 0x7d286
0x00000000001aedb5 : xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aed65 : xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000195649 : xor bh, ah ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x0000000000195240 : xor bh, bl ; sti ; call qword ptr [rax]
0x0000000000195290 : xor bh, dl ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000111e6a : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000008eb9c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000128ec8 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000110c41 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c45eb : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f5cbf : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000089b01 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009f126 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000001a3870 : xor byte ptr [rax - 0x13], al ; jmp rsi
0x000000000012b977 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3c1 ; pop rbx ; ret
0x000000000012b93f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3f9 ; pop rbx ; ret
0x000000000012b880 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d4b8 ; pop rbx ; ret
0x00000000000a8737 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00000000000be444 : xor byte ptr [rax - 0x75], cl ; je 0xbe475 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047bb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x0000000000047f47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x0000000000089a2f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013c2aa : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000b05c0 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd9add
0x00000000000b5a68 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdef85
0x00000000000c8b09 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000ad55d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000135b78 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000076ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cfc56 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e0f7c : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012e883 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d71de : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128ec9 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001b0af0 : xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000746ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aacb5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011582b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x115869 ; call rax
0x000000000004d399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001954b4 : xor byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000072aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00000000000beb61 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb78
0x0000000000143f0b : xor byte ptr [rax], ch ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195570 : xor byte ptr [rax], ch ; cld ; push rax ; sub esp, edi ; call rax
0x0000000000194e68 : xor byte ptr [rax], ch ; sti ; call rax
0x00000000000a9fb7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000008f75b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000001b3bb0 : xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000194de0 : xor byte ptr [rbx], al ; sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001955f8 : xor byte ptr [rbx], ch ; cld ; call qword ptr [rax]
0x0000000000194f84 : xor byte ptr [rcx - 0x5ddf0003], ah ; std ; call qword ptr [rax]
0x00000000000746ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000784b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dcb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001aebc5 : xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aebc5 ; jmp qword ptr [rcx]
0x00000000001aebad : xor byte ptr [rcx], al ; add byte ptr [rax], dh ; jrcxz 0x1aebad ; call qword ptr [rsi]
0x000000000017584c : xor byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000840a8 : xor byte ptr [rdi], ah ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000194e90 : xor byte ptr [rdx], bh ; sti ; call qword ptr [rax]
0x0000000000194e30 : xor byte ptr [rip + 0x1620fffb], dl ; sti ; call qword ptr [rax]
0x000000000019558c : xor byte ptr [rip + 0x2810fffc], 0xfc ; call rax
0x000000000000ac88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x0000000000175834 : xor byte ptr [rsi - 0x15], ah ; inc dword ptr [rax + 0x67] ; jmp 0x175842
0x0000000000175848 : xor byte ptr [rsi - 0x15], ah ; push qword ptr [rax] ; jmp 0x175856
0x0000000000038fea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000000f642c : xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000019562c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x000000000019549c : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x0000000000195274 : xor cl, bl ; sti ; call qword ptr [rax]
0x00000000000961eb : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000c45e6 : xor cl, byte ptr [rax - 0x75] ; jl 0xc4617 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000001322ef : xor cl, byte ptr [rax - 0x77] ; jp 0x132301 ; ret
0x000000000013505f : xor cl, byte ptr [rax - 0x77] ; jp 0x135071 ; ret
0x0000000000135077 : xor cl, byte ptr [rax - 0x77] ; jp 0x135089 ; ret
0x00000000001358af : xor cl, byte ptr [rax - 0x77] ; jp 0x1358c1 ; ret
0x00000000001358c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1358d9 ; ret
0x00000000001358f7 : xor cl, byte ptr [rax - 0x77] ; jp 0x135909 ; ret
0x00000000000e770d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000000000130cfc : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000103732 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000a56d0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000128634 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000195648 : xor dil, spl ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001892e8 : xor dl, byte ptr [rax - 0xc] ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000872a5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000ac87b : xor dword ptr [rax + rax], ecx ; ret
0x0000000000052bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000009ed1e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d18be : xor dword ptr [rax - 0x7d], ecx ; ret
0x00000000001289b3 : xor dword ptr [rsi + 0x48640029], esi ; mov eax, dword ptr [rax] ; ret
0x0000000000103bd3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450e0 : xor eax, 0x1cb ; call rax
0x00000000000fc193 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000019558d : xor eax, 0x2810fffc ; cld ; call rax
0x000000000006f21b : xor eax, 0x30 ; call rax
0x0000000000063b68 : xor eax, 0x360403 ; call rax
0x000000000005be5a : xor eax, 0x368111 ; call rax
0x000000000005b804 : xor eax, 0x368767 ; call rax
0x0000000000195b95 : xor eax, 0x3690fffc ; cld ; call qword ptr [rax]
0x000000000005004c : xor eax, 0x373f1f ; call rax
0x000000000004d3d0 : xor eax, 0x376b9b ; call rax
0x00000000000419ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007c74b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c2fb : xor eax, 0xffffe630 ; call rax
0x000000000007bf0b : xor eax, 0xffffea20 ; call rax
0x000000000007aeab : xor eax, 0xfffffa80 ; call rax
0x000000000007ac3b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f514 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035320 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000088482 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088708 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000885f1 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084113 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000085814 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x85827 ; ret
0x00000000001aeebd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aee45 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000123de6 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003a64b : xor eax, edx ; sub rax, rdx ; ret
0x0000000000189f99 : xor ebp, 0xf581b0ff ; call rax
0x00000000000c849d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f3249 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096ea5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000129054 : xor edi, dword ptr [0x30] ; call rax
0x0000000000081955 : xor edi, edi ; call qword ptr [rax]
0x00000000000c7595 : xor edi, edi ; call rax
0x0000000000195b91 : xor edi, esp ; call qword ptr [rax]
0x00000000001ad0f1 : xor edi, esp ; jmp qword ptr [rax]
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x000000000007ba09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007db6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008d7b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f6aa0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001035a1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000004d39d : xor esi, esi ; call rax
0x00000000000f6aa2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001027f1 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001035a3 : xor esi, esi ; mov rbx, rax ; call rax
0x00000000001aee44 : xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000fc192 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x000000000003531f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003531e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008b8c5 : xor rax, rax ; ret
0x000000000003a64a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000129053 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000129052 : xor rdi, qword ptr fs:[0x30] ; call rax
